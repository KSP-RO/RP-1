CONTRACT_TYPE
{
	name = EarlyWeatherSats
	title = Early Weather Satellite  // Representative of TIROS 2 through TIROS 7, still figuring it out
	group = WeatherSats


	description = Our scientists are once again requesting a new weather satellite. Please place one into the proper orbit to observe Earth. This contract can be completed up to 6 times.&br;&br;<b><color=red>NOTE: The satellite will be destroyed upon completion of the contract. This simulates transfer of the payload back to the customer.</color></b>&br;&br;<b><color=white>Removal Condition: Completion of a Second Generation Weather Satellite contract.&br;NOTE: You can not select this contract and the Second Generation Weather Sat contract. If you select the other contract while this is active, this will automatically fail.</color></b>&br;&br;<b>Number of Contracts Completed: $EarlyWeatherSats_Count</b>
	genericDescription = Put a satellite into the requested orbit.

	synopsis = Launch a weather satellite into the proper orbit

	completedMessage = Success! The meteorologists on Earth are thrilled with the results.

	sortKey = 501

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 6
	maxSimultaneous = 1
	deadline = 365  // 1 year

	targetBody = HomeWorld()



	prestige = Trivial       // 1.0x
	advanceFunds = 15000 * @RP0:globalHardContractMultiplier
	rewardScience = 0
	rewardReputation = 10
	rewardFunds = (5000 + @EarlyWeatherSat/HasWeatherSatPayload/minQuantity * 4) * @RP0:globalHardContractMultiplier
	failureReputation = 10
	failureFunds = @advanceFunds * 0.5

	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FirstWeatherSat
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = SecondGenWeather
		invertRequirement = true
	}
	
	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression
		
		CONTRACT_COMPLETED_SUCCESS
        {
            EarlyWeatherSats_Count = $EarlyWeatherSats_Count + 1
        }
	}

	// ************ PARAMETERS ************

	PARAMETER
	{
		name = EarlyWeatherSat
		type = VesselParameterGroup
		define = EarlyWeatherSatellite
		dissassociateVesselsOnContractCompletion = true
		title = Early Weather Satellite

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = HasWeatherSatPayload
			type = HasResource
			resource = WeatherSatPayload
			minQuantity = Round(Random(12,50),1)
			title = Have a WeatherSatPayload of at least @minQuantity units on the craft
		}
		PARAMETER
		{
			name = Orbit
			type = Orbit
			minPeA = 596000+Round(Random(-10000.0, 10000.0), 1000)
			maxPeA = 737000+Round(Random(-5000.0, 5000.0), 1000)
			minInclination = 48.0
			maxInclination = 58.0
			maxEccentricity = 0.01
			disableOnStateChange = true
			title = Achieve an orbit within the stated parameters
			
			PARAMETER
			{
				name = Duration
				type = Duration

				duration = 2m

				preWaitText = Check for Stable Orbit
				waitingText = Checking for Stable Orbit
				completionText = Stable Orbit: Confirmed
			}
		}
	}
  BEHAVIOUR
  {
    name = TransferVessel
    type = DestroyVessel
    onState = CONTRACT_SUCCESS
    vessel = EarlyWeatherSatellite
  }
  BEHAVIOUR
  {
	name = VesselDestroyed
	type = DialogBox
	DIALOG_BOX
	{
	  title = Vessel Ownership Transferred
	  condition = CONTRACT_SUCCESS
	  position = CENTER
	  width = 0.5
	  TEXT
	  {
		text = The contract has been completed successfully and the satellite has been transferred back to the customer.
	  }
	}
  }
}
