CONTRACT_TYPE
{
	name = OrbitalFlight3
	title = Orbital Flight with at Least Three Crew
	group = CrewedOrbitAdv

	tag = CrewedOrbitOptional


	description = <b>Program: Advanced Crewed Orbit<br>Type: <color=blue>Optional</color></b><br><br>The goal and realization of putting three (or more) crew on orbit at the same time begins the era of the space taxi and ready access to LEO. Depending on the politics and economy of the originating nation, these craft will either be noted predecessors to later craft or become so ubiquitous and reliable in the role that they are still flying 50 years after their first. These craft should be able to support at least three crew and prove that they can stay in orbit for @/DurationText days. The Soviet Voskhod 1 (1964, 5.3 tons, modified Molniya) and Soyuz (1967, 6.5 tons, Soyuz), and the U.S. Apollo CSM (1968, 14.7 - 21 tons for LEO, Saturn 1B) are examples of these craft.&br;&br;<b>Number of Contracts Completed: @index / unlimited</b>
	
	genericDescription = Launch a spacecraft with at least three people onboard into orbit for a routine mission for the required number of days and return safely home.

	synopsis = Fly a three-person LEO Orbital mission.

	completedMessage = Crew alive and well after the mission--congratulations!

	sortKey = 606

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 0
	maxSimultaneous = 1
	deadline = 0

	targetBody = HomeWorld()


	// ************ REWARDS ************
	prestige = Trivial       // 1.0x
	advanceFunds = 0
	rewardScience = 0
	rewardFunds = 0
	failureFunds = 0
	rewardReputation = 250
	failureReputation = 0 // was @rewardReputation

	// ************ REQUIREMENTS ************
	
	REQUIREMENT
	{
		name = Any
		type = Any

		REQUIREMENT
		{
			name = ProgramActive
			type = ProgramActive
			program = CrewedOrbitAdv
		}

		REQUIREMENT
		{
			name = All
			type = All

			REQUIREMENT
			{
				name = ProgramActive
				type = ProgramActive
				program = CrewedOrbit
			}

			REQUIREMENT
			{
				name = CompleteContract
				type = CompleteContract
				contractType = OrbitalFlight1
			}
		}
	}

	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		tag = CrewedOrbitOptional
		invertRequirement = true
		title = Don't have another active optional crewed orbit contract.
	}

	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		tag = CrewedOrbitRequired
		invertRequirement = true
		title = Don't have an active required crewed orbit contract.
	}
	
	DATA
	{
		type = Duration
		title = Duration
		Duration = 10d
		title = Duration
	}
	DATA
	{
		type = int
		DurationText = double(@Duration) / 86400
		title = Duration
	}
	DATA
	{
		type = int
		startPeA = 200000 + Round(Random(0, 100000), 25000)
		title = Perigee
	}
	DATA
	{
		type = int
		startApA = 300000 + Round(Random(0, 200000), 25000)
		title = Apogee
	}
	DATA
	{
		type = double
		Eccentricity = 0.0034
		title = Eccentricity
	}
	
	DATA
	{
		type = int
		index = $OrbitalFlight3_Count + 0
	}

	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
			OrbitalFlight3_Count = $OrbitalFlight3_Count + 1
		}
	}

	// ************ PARAMETERS ************
	
	PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup
		title = Crewed orbital
	
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a new vessel
			hideChildren = true
		}

		PARAMETER
		{
			name = TwoCrew
			type = HasCrew
			minCrew = 3
			crewOnly = true
			title = Have at least 3 crewmembers on board
			hideChildren = true
			disableOnStateChange = true
		}

		PARAMETER
		{
			name = Orbit
			title = Stay in specified orbit for the duration
			type = Orbit
			minPeA = @/startPeA
			maxApA = @/startApA
			maxEccentricity = @/Eccentricity
			targetBody = HomeWorld()
			disableOnStateChange = true
			completeInSequence = true
			
			PARAMETER
			{
				name = Duration
				type = Duration
				duration = @/Duration
				preWaitText = Reach specified orbit
				waitingText = Orbiting...
				completionText = Orbits completed, you may fire retros when ready.
			}
		}
		
		PARAMETER
		{
			name = ReturnHome
			type = RP1ReturnHome
			title = Return home safely
			hideChildren = true
			completeInSequence = true
		}
	}
}
