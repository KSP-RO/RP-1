CONTRACT_TYPE {
	name = SoundingRocketAltitude
	group = SoundingRocketScience
    sortKey = 990
	
	title = Suborbital Thermosphere Research
	genericTitle = Suborbital Thermosphere Research
	description = The thermosphere is the layer of Earth's atmosphere controlled by atmospheric tides and solar activity which spans roughly from 120 to 600 km altitude. In this region, atmospheric particles are electrically charged and heated by highly energetic solar radiation. Scientists have never had direct access to the thermosphere before, and are eager to collect atmospheric data. Design, build and launch a scientific sounding rocket that will send scientific instruments and @payload units of meteorological payload to @altitude km.<br><b>Make sure your rocket contains a thermometer and barometer as we will need science returned. In the case that you have already completed these experiments, you will need to force run them. This can be done by clicking on the science part and then the info button.</b><br>This is a series of six contracts, of which @index have been completed.
	genericDescription = Deliver a meteorological payload to a specified altitude.
	synopsis = Launch a sounding rocket with @payload units of meteorological payload to @altitude km.
	completedMessage = Congratulations on a successful launch! The rocket has delivered the payload.

	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 5
	maxSimultaneous = 1
	deadline = 240
	
	targetBody = HomeWorld()
	
	// ************ REWARDS ************
	prestige = Trivial
	genericReward = 10000
	genericFailureMultiplier = 1.25
	rewardScience = 2

	// ************ REQUIREMENTS ************
	REQUIREMENT	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_KarmanUncrewed
		title = Complete @contractType Contract
	}
	
	// ************ CONTRACT DATA ************	
	DATA {
		type = float
		index = RP0SoundingAltitudeIndex
	}
	BEHAVIOUR {
		name = IncrementIndex
		type = Expression
		CONTRACT_COMPLETED_SUCCESS {
				RP0SoundingAltitudeIndex = RP0SoundingAltitudeIndex + 1
		}
	}
	
	// *** Payload ***
	DATA {
		type = int
		payload = 25
	}
	
	// *** Altitude ***
	DATA {
		type = List<float>
		altitudes = [ 50, 140, 200, 300, 400, 600 ]
	}
	DATA {
		type = float
		altitude = @altitudes.ElementAt(@index)
	}
	
	// ************ PARAMETERS ************	
	PARAMETER {
		name = VesselGroup
		type = VesselParameterGroup		
		title = Reach @/altitude km with @/payload units of payload
		
		PARAMETER {
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}		
		PARAMETER {
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}				
		PARAMETER {
			name = HasMeteorologicalPayload
			type = HasResource
			resource = MeteorologicalPayload
			minQuantity = @/payload-0.5
			title = Have a MeteorologicalPayload of at least @/payload units on the craft
			hideChildren = true
		}		
		PARAMETER:NEEDS[KerbalismContracts] {
			name = ExperimentRunning
			type = ExperimentRunning
			hideChildren = true
			title = Have a thermometer active
			experiment = temperatureScan
		}
		PARAMETER:NEEDS[KerbalismContracts] {
			name = ExperimentRunning2
			type = ExperimentRunning
			hideChildren = true
			title = Have a barometer active
			experiment = barometerScan
		}
		PARAMETER:NEEDS[!KerbalismContracts] {
			name = HasThermometerExperiment
			type = PartValidation
			hideChildren = true
			title = Have a thermometer experiment 
			FILTER {
				MODULE {
					name = Experiment
					experiment_id = temperatureScan
				}
			}
		}
		PARAMETER:NEEDS[!KerbalismContracts] {
			name = HasBarometerExperiment
			type = PartValidation
			hideChildren = true
			title = Have a barometer experiment 
			FILTER {
				MODULE {
					name = Experiment
					experiment_id = barometerScan
				}
			}
		}
		PARAMETER {
			name = ReachAlt
			type = ReachState
			completeInSequence = true
			minAltitude = @/altitude * 1000
			title = Reach an altitude of at least @/altitude km
		}
	}
}
	