CONTRACT_TYPE
{
	name = GOInfraredServicing
	title = @/targetVessel1 Coolant Servicing
	genericTitle = Infrared Space Telescope Coolant Servicing
	group = GreatObservatories
	agent = Federation Aeronautique Internationale

	description = <b>Program: Great Observatories<br>Type: <color=blue>Optional</color></b><br><br>The liquid helium coolant on one of our infrared space telescopes is getting rather low. If it drops to zero, the telescope will be forced to deactivate. Design, build, and launch a servicing craft to dock with the observatory and refill its coolant tanks to continue operations. Note: you may want to bring more coolant than you need to mitigate boiloff concerns.

	synopsis = Send a vessel to resupply the liquid helium coolant on the designated infrared space telescope

	completedMessage = Mission Success! The vessel has more than enough coolant for now. Be sure to monitor your telescopes to keep them functional.

	// sortKey = 1507

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 1
	maxSimultaneous = 1
	deadline = 0

	targetBody = @/targetBody1

	prestige = Trivial       // 1.0x
	advanceFunds = 0
	rewardScience = 0
	rewardReputation = 180
	rewardFunds = 0
	failureReputation = 0 // was @rewardReputation
	failureFunds = 0

	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = ProgramActive
		type = ProgramActive
		program = GreatObservatories
	}
 	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
  		contractType = GOInfraredSpaceObservatory
		title = Completed Infrared Space Observatory
	}
 
 	// ************ DATA ************

	DATA
	{
		type = Vessel
		requiredValue = true
		targetVessel1 = $InfraST.Where(v => v.FreeDockingPorts()>0 && v.ResourceCapacity(LqdHelium) / v.ResourceQuantity(LqdHelium)>0.26).Random()
		title = Target vessel must be an infrared space telescope with 25% or less of its liquid helium coolant remaining and an open docking port
	}
	DATA
	{
		type = int
		coolantSpace = Round(@/targetVessel1.ResourceCapacity(LqdHelium) - @/targetVessel1.ResourceQuantity(LqdHelium))
		title = Get empty space for coolant
	}
	DATA
	{
		type = CelestialBody
		requiredValue = true
		targetBody1 = @/targetVessel1.CelestialBody()
		hidden = true
	}

	BEHAVIOUR
	{
		name = ServicingReset
		type = Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
			TelescopeLastServiced = @/targetVessel1
		}
	}

	// ************ PARAMETERS ************

	PARAMETER
	{
		name = ISTServicingMission
		type = VesselParameterGroup
		title = Launch a servicing craft to refill the coolant tanks on @/targetVessel1
		genericTitle = Launch a servicing craft to refill the coolant tanks on one of your infrared space telescopes
		disableOnStateChange = true

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a new vessel
			hideChildren = true
		}
		
  		PARAMETER
		{
			name = AllResources
			type = All
			title = Dock with enough liquid helium coolant to fully refill the cooling tanks on @/targetVessel1
			genericTitle = Dock with enough liquid helium coolant to fully refill the cooling tanks on your infrared space telescope
			notes = This is the amount of coolant that would fill the telescope up

			
			PARAMETER
			{
				name = CoolantResupply
				type = HasResource
				title = Bring at least @/coolantSpace liquid helium coolant
				genericTitle = Bring enough liquid helium coolant to refill the tanks
				resource = LqdHelium
				minQuantity = @/coolantSpace
				hideChildren = true
			}

   			PARAMETER
			{
				name = DockWithTelescope
				type = Docking
				vessel = @/targetVessel1
				title = Dock the servicing craft with @/targetVessel1
				genericTitle = Dock the servicing craft with the infrared space telescope
				hideChildren = true
				disableOnStateChange = true
			}
		}
	}

	
}
