// ============================================================================
// KERBALISM_HDD_SIZES - Temporary tweaking values
// ============================================================================
// Tweaking hints
//
// data - baseline size in Mb (keep in mind it gets 4 big upgrades, don't go overboard)
// samples - sample slots. this one is counter-intuitive, as most experiments
// occupy multiple slots per run. Slot size is tied to data scales in kerbalism's
// back-end, and samples have large data values for lab analysis purposes.
// ============================================================================
// Change values here, they'll get copied and patched later in this file.
// Anything that modifies tech tree positions
// (such as unmanned tech trees, or Probes Before Crew for example)
// will need a patch to balance these values, otherwise they make no sense.
// Patching mods that add a ton of command modules is a nightmare.
// General balancing idea: based on unlock tiers. Probes get on average
// 1.5 - 2 times more data storage due to lack of sample storage.
// ============================================================================
// HDD Upgrades at : T1, T4, T6, T8 	- 		2-8-64-512		(times the base value)
// Sample Upgrades at: T3, T6			-		2-7				(times the base value)
KERBALISM_HDD_SIZES
{
// ====================================================================================================================================================================================================================================
													//MAKE SURE NO FIELDS ARE LEFT EMPTY OR COMMENTED OUT IN THIS SECTION, OTHERWISE MM WILL THROW ERRORS
// ====================================================================================================================================================================================================================================

	//Procedural Avionics memory options
	ProceduralBasic
	{
		data = 0.000488
		samples = 0
	}
	ProceduralInterplanetary
	{
		data = 0.00293
		samples = 0
	}
	ProceduralMature
	{
		data = 0.655
		samples = 0
	}
	ProceduralLargeScale
	{
		data = 20
		samples = 0
	}
	ProceduralAdvanced
	{
		data = 150
		samples = 0
	}
	ProceduralLongTerm
	{
		data = 400
		samples = 0
	}
	ProceduralModern
	{
		data = 8192
		samples = 0
	}
	ProceduralSample1
	{
		data = 0
		samples = 1
	}
	ProceduralSample2
	{
		data = 0
		samples = 2
	}

	//General probes
	tiros-1
	{
		data = 0.0002
		samples = 0
	}

	vanguard-2
	{
		data = 0.0005
		samples = 0
	}

	vanguard-3
	{
		data = 0.0005
		samples = 0
	}

	RO_earlyControllableCore
	{
		data = 0.0005
		samples = 0
	}

	RO_probeCoreCubeEarly
	{
		data = 0.01
		samples = 0
	}

	pioneer_6_7_8_9
	{
		data = 0.001904
		samples = 0
	}

	surveyor
	{
		data = 0.002
		samples = 0
	}

	HECS2_ProbeCore
	{
		data = 0.5
		samples = 0
	}

	roverBody
	{
		data = 0.02
		samples = 1
	}

	pioneer_10_11
	{
		data = 0.006144
		samples = 0
	}

	voyager
	{
		data = 65.42
		samples = 0
	}

	//Manned Spacecrafts
	mercury
	{
		data = 0.005							//mercury didn't actually have a on board computer
		samples = 2								//so I'm adding this for balance
	}

	gemini
	{
		data = 0.019968							//gemini was capable of storing 4096 39-bit words 
		samples = 3								//later upgraded with magnetic tapes to 7.5x capacity
	}

	apollo
	{
		data = 0.076							//AGC was capable of storing 38k (36k fixed, 2k erasable) 16-bit words
		samples = 5								//some reports say it was upgraded in later flights, but unsure
	}

	skylab
	{
		data = 0.032768							//skylab had a 16384 16-bit words memory
		samples = 3								//later upgraded to increase reliability with 24K capacity magnetic tapes (same style of Gemini, but much faster)
	}

	shuttle
	{
		data = 0.417984							//the shuttle computer memories were 104K or 106496 words of 32 bits
		samples = 2								//the addition of the mass memory unit brought the memory to 8 million 16-bit words (again, same crew-dependant system)
	}

	ScienceLabs
	{
		data = 5
		samples = 2
	}


	PRIVATE_DRIVES									//this is internal storage for samples.
	{												//It can only store samples for the experiment it's attached to
		MysteryGoo
		{
			data = 0
			samples = 3
		}

		Photography1
		{
			data = 0
			samples = 3
			
		}

		Photography2
		{
			data = 0
			samples = 5
		}

		Photography3
		{
			data = 0
			samples = 10
		}

		ScienceLabs
		{
			data = 10
			samples = 30
		}
		Drills										//Unused till drill check is implemented.
		{
			data = 0
			samples = 1
		}
	}
}

// ====================================================================================================================================================================================================================================
// ====================================================================================================================================================================================================================================
															//THERE IS NOTHING TO BE TWEAKED FURTHER. ALL CHANGES SHOULD BE DONE ABOVE THIS TEXT!
// ====================================================================================================================================================================================================================================
// ====================================================================================================================================================================================================================================

// ============================================================================
// Remove stock science data containers, add hard-drives/sample containers instead
// Setting default drive sizes for all parts, even modded ones
// modded parts will need separate tweaks in their own configs
// ============================================================================

// missed this one
@PART[*]:HAS[@MODULE[ModuleScienceContainer]]:NEEDS[FeatureScience,RP-0]:FOR[RP-0-Kerbalism]
{
	!MODULE[ModuleScienceContainer] {}
}

@PART[*]:HAS[@MODULE[ModuleCommand]:HAS[~name[!proceduralAvionics]]]:NEEDS[FeatureScience,RP-0]:FOR[RP-0-Kerbalism]
{
	MODULE
	{
		name = HardDrive
		title = Data Storage
		dataCapacity = 0.0001      // data size in Mb
		sampleCapacity = 0      // sample size in slots
	}
}
// ============================================================================
// Adding HardDrive module for snowflakes so they can get patched.
// ============================================================================
@PART[*]:HAS[@MODULE[Laboratory]]:NEEDS[FeatureScience,RP-0]:FOR[RP-0-Kerbalism]
{
	MODULE
	{
		name = HardDrive
	}
}

@PART[ScienceBox,kerbalEVA*]:NEEDS[FeatureScience,RP-0]:FOR[RP-0-Kerbalism]
{
	MODULE
	{
		name = HardDrive
	}
}
// ============================================================================
// Remove the ability for probe cores to store samples.
// ============================================================================
@PART[*]:HAS[@MODULE[ModuleCommand]:HAS[#minimumCrew[0]]]:NEEDS[FeatureScience,RP-0]:FOR[RP-0-Kerbalism]
{
	@MODULE[HardDrive]
	{
		@sampleCapacity = 0
	}
}

// ============================================================================
// Individual part patches. Copies the values from above.
// Stop scrolling, there's not much you can fiddle with further.
// Do Not Touch! (please?)
// ============================================================================
@PART[tiros-1]:NEEDS[FeatureScience,RP-0]:FOR[RP-0-Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/tiros-1/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/tiros-1/samples$
	}
}

@PART[vanguard-2]:NEEDS[FeatureScience,RP-0]:FOR[RP-0-Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/vanguard-2/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/vanguard-2/samples$
	}
}

@PART[vanguard-3]:NEEDS[FeatureScience,RP-0]:FOR[RP-0-Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/vanguard-3/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/vanguard-3/samples$
	}
}

@PART[pioneer_6_7_8_9]:NEEDS[FeatureScience,RP-0]:FOR[RP-0-Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/pioneer_6_7_8_9/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/pioneer_6_7_8_9/samples$
	}
}

@PART[RO_probeCoreCubeEarly]:NEEDS[FeatureScience,RP-0]:FOR[RP-0-Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/RO_probeCoreCubeEarly/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/RO_probeCoreCubeEarly/samples$
	}
}

@PART[rn_surveyor3|RO_surveyorCore]:NEEDS[FeatureScience,RP-0]:FOR[RP-0-Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/surveyor/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/surveyor/samples$
	}
}

@PART[RO_earlyControllableCore|SXTHECSRanger]:NEEDS[FeatureScience,RP-0]:FOR[RP-0-Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/RO_earlyControllableCore/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/RO_earlyControllableCore/samples$
	}
}

@PART[HECS2_ProbeCore]:NEEDS[FeatureScience,RP-0]:FOR[RP-0-Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/HECS2_ProbeCore/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/HECS2_ProbeCore/samples$
	}
}

@PART[pioneer_10_11]:NEEDS[FeatureScience,RP-0]:FOR[RP-0-Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/pioneer_10_11/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/pioneer_10_11/samples$
	}
}

@PART[rn_voyager]:NEEDS[FeatureScience,RP-0]:FOR[RP-0-Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/voyager/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/voyager/samples$
	}
}

@PART[roverBody|roverBody_v2]:NEEDS[FeatureScience,RP-0]:FOR[RP-0-Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/roverBody/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/roverBody/samples$
	}
}

@PART[ROC-MercuryCM|FASAMercuryPod|mk1pod|mk1pod_v2|ROC-VostokCapsule|ROC-VoskhodCapsule|rn_vostok_sc|rn_voskhod_sc|landerCabinSmall|FASA_Gemini_Lander_Pod|rn_vostok_sc|rn_voskhod_sc|ROC-VostokCapsule|ROC-VoskhodCapsule|ok_sa]:NEEDS[FeatureScience,RP-0]:FOR[RP-0-Kerbalism]
{
	!MODULE[HardDrive] {}
	MODULE
	{
		name = HardDrive
		title = Data Storage
		dataCapacity = #$@KERBALISM_HDD_SIZES/mercury/data$
		sampleCapacity = #$@KERBALISM_HDD_SIZES/mercury/samples$
	}
}

@PART[FASAGeminiPod2|FASAGeminiPod2White|ROAdvCapsule|RO-Mk1Cockpit|RO-Mk1CockpitInline|MK1CrewCabin|ok_bo_fem|ok_bo_male|rn_zond_sa|rn_lok_sa|rn_lok_bo|]:NEEDS[FeatureScience,RP-0]:FOR[RP-0-Kerbalism]
{
	!MODULE[HardDrive] {}
	MODULE
	{
		name = HardDrive
		title = Data Storage
		dataCapacity = #$@KERBALISM_HDD_SIZES/gemini/data$
		sampleCapacity = #$@KERBALISM_HDD_SIZES/gemini/samples$
	}
}

@PART[mk1-3pod|SSTU-SC-B-CM|SSTU-SC-B-CMX|SSTU-LC2-POD|APOLLO_CM|FASAApollo_CM|bluedog_Apollo_Block2_Capsule|ROC-ApolloCM|LEM_ASCENT_STAGE|ROC-LEMAscent|FASALM_AscentStage|bluedog_LEM_Ascent_Cockpit|landerCabinMedium|mk2LanderCan|mk2LanderCabin_v2|SXTLander|mk2Cockpit_Inline|mk2Cockpit_Standard|mk2CrewCabin|rn_va_capsule|t_af_bo]:NEEDS[FeatureScience,RP-0]:FOR[RP-0-Kerbalism]
{
	!MODULE[HardDrive] {}
	MODULE
	{
		name = HardDrive
		title = Data Storage
		dataCapacity = #$@KERBALISM_HDD_SIZES/apollo/data$
		sampleCapacity = #$@KERBALISM_HDD_SIZES/apollo/samples$
	}
}

@PART[SXTISSHabISK30|crewCabin|Large_Crewed_Lab|SXTSPKTRCabin]:NEEDS[FeatureScience,RP-0]:FOR[RP-0-Kerbalism]
{
	!MODULE[HardDrive] {}
	MODULE
	{
		name = HardDrive
		title = Data Storage
		dataCapacity = #$@KERBALISM_HDD_SIZES/skylab/data$
		sampleCapacity = #$@KERBALISM_HDD_SIZES/skylab/samples$
	}
}

@PART[mk3Cockpit_Shuttle|rn_astp_bo|tg_bo]:NEEDS[FeatureScience,RP-0]:FOR[RP-0-Kerbalism]
{
	!MODULE[HardDrive] {}
	MODULE
	{
		name = HardDrive
		title = Data Storage
		dataCapacity = #$@KERBALISM_HDD_SIZES/shuttle/data$
		sampleCapacity = #$@KERBALISM_HDD_SIZES/shuttle/samples$
	}
}

// @PART[*]:HAS[@MODULE[Laboratory]]:NEEDS[FeatureScience,RP-0]:FOR[RP-0-Kerbalism]
// {
// 	@MODULE[HardDrive]
// 	{
// 		%title = Laboratory Storage
// 		%dataCapacity = #$@KERBALISM_HDD_SIZES/ScienceLabs/data$
// 		%sampleCapacity = #$@KERBALISM_HDD_SIZES/ScienceLabs/samples$
// 	}
// }

// ============================================================================
//HDD capacity/sample storage Upgrades.
// ============================================================================

PARTUPGRADE:NEEDS[FeatureScience,RP-0]
{
  name = HDD-Upgrade1
  partIcon = ScienceBox
  techRequired = whatever
  entryCost = whatever
  title = HDD Capacity Upgrade
  manufacturer = Spacegate Technology
  description = Engineers figured that if they add another platter to the drive, they can double the capacity!
}
// @PARTUPGRADE[HDD-Upgrade1]:NEEDS[FeatureScience,RP-0]
// {
//   @techRequired = #$@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/FirstUpgradeTech$
//   @entryCost = #$@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/FirstUpgradeEntryCost$
// }
PARTUPGRADE:NEEDS[FeatureScience,RP-0]
{
  name = HDD-Upgrade2
  partIcon = ScienceBox
  techRequired = whatever
  entryCost = whatever
  title = HDD Capacity Upgrade
  manufacturer = Spacegate Technology
  description = An increase in platter density equals an increase in capacity!
}
// @PARTUPGRADE[HDD-Upgrade2]:NEEDS[FeatureScience,RP-0]
// {
//   @techRequired = #$@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/SecondUpgradeTech$
//   @entryCost = #$@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/SecondUpgradeEntryCost$
// }
PARTUPGRADE:NEEDS[FeatureScience,RP-0]
{
  name = HDD-Upgrade3
  partIcon = ScienceBox
  techRequired = whatever
  entryCost = whatever
  title = HDD Capacity Upgrade
  manufacturer = Spacegate Technology
  description = Converts all the old dusty Hard Drives to all new and shiny Solid State Drives!
}
// @PARTUPGRADE[HDD-Upgrade3]:NEEDS[FeatureScience,RP-0]
// {
//   @techRequired = #$@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/ThirdUpgradeTech$
//   @entryCost = #$@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/ThirdUpgradeEntryCost$
// }
PARTUPGRADE:NEEDS[FeatureScience,RP-0]
{
  name = HDD-Upgrade4
  partIcon = ScienceBox
  techRequired = whatever
  entryCost = whatever
  title = HDD Capacity Upgrade
  manufacturer = Spacegate Technology
  description = Quantum physics shenenigans! It just works. Don't ask how.
}
// @PARTUPGRADE[HDD-Upgrade4]:NEEDS[FeatureScience,RP-0]
// {
//   @techRequired = #$@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/FourthUpgradeTech$
//   @entryCost = #$@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/FourthUpgradeEntryCost$
// }
// Applies upgrades to relevant parts (i'm aware 0*anything is still 0. let me be) - avoiding unnecessary upgrade spam on parts for no reason.
// @PART[*]:HAS[@MODULE[HardDrive]:HAS[#dataCapacity[>0]]]:NEEDS[FeatureScience,RP-0]:AFTER[Kerbalism]
// {
// 	@MODULE[HardDrive]
// 	{
// 		UPGRADES
// 		{
// 			UPGRADE
// 			{
// 				name__ = HDD-Upgrade1
// 				techRequired__ = #$../../../@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/FirstUpgradeTech$
// 				dataCapacity = #$../../#dataCapacity$
// 				@dataCapacity *= #$../../../@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/FirstUpgrade$
// 			}
// 			UPGRADE
// 			{
// 				name__ = HDD-Upgrade2
// 				techRequired__ = #$../../../@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/SecondUpgradeTech$
// 				dataCapacity = #$../../#dataCapacity$
// 				@dataCapacity *= #$../../../@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/SecondUpgrade$
// 			}
// 			UPGRADE
// 			{
// 				name__ = HDD-Upgrade3
// 				techRequired__ = #$../../../@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/ThirdUpgradeTech$
// 				title = Solid State Drive
// 				dataCapacity = #$../../#dataCapacity$
// 				@dataCapacity *= #$../../../@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/ThirdUpgrade$
// 			}
// 			UPGRADE
// 			{
// 				name__ = HDD-Upgrade4
// 				techRequired__ = #$../../../@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/FourthUpgradeTech$
// 				title = Quantum Data Drive
// 				dataCapacity = #$../../#dataCapacity$
// 				@dataCapacity *= #$../../../@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/FourthUpgrade$
// 			}
// 		}
// 	}
// }

// ============================================================================
// RP-0 Return Capsule
// ============================================================================
@PART[RP0-SampleReturnCapsule]:NEEDS[FeatureScience,RP-0]:AFTER[Kerbalism]
{
	%MODULE[HardDrive]
	{
		%dataCapacity = 0
		%sampleCapacity = 20
	}
}

// ============================================================================
// EVAs can't be upgraded, so we give them unlimited space.
// a) they need the capacity to move data between drives
// b) they can't use it in any other way, except for EVA reports and surface
// samples. So no matter how much they get here, it won't be OP
// c) you can't use EVAs to store data for very long, after 8h they're dead
// ============================================================================
@PART[kerbalEVA*]:NEEDS[FeatureScience,RP-0]:AFTER[Kerbalism]
{
	@MODULE[HardDrive]
	{
		%dataCapacity = -1
		%sampleCapacity = -1
	}
}
// ============================================================================
// Internal(Private) Drive upgrades
// these have to be done by hand to avoid patching groups. (labs mainly)
// ============================================================================
@PART[GooExperiment|SXTProbeGooo]:NEEDS[FeatureScience,RP-0]:AFTER[RP-0-Kerbalism]
{
	MODULE
	{
		name = HardDrive
		dataCapacity = 0
		sampleCapacity = #$@KERBALISM_HDD_SIZES/PRIVATE_DRIVES/MysteryGoo/samples$
		experiment_id = RP0bioScan1
	}
}
@PART[BioCapsule]:NEEDS[FeatureScience,RP-0]:AFTER[RP-0-Kerbalism]
{
	MODULE
	{
		name = HardDrive
		dataCapacity = 0
		sampleCapacity = #$@KERBALISM_HDD_SIZES/PRIVATE_DRIVES/MysteryGoo/samples$
		experiment_id = RP0bioScan2
	}
}
@PART[sputnik2]:NEEDS[FeatureScience,RP-0]:AFTER[RP-0-Kerbalism]
{
	@MODULE[HardDrive]
	{
		%sampleCapacity = #$@KERBALISM_HDD_SIZES/PRIVATE_DRIVES/MysteryGoo/samples$
	}
}

// Photography 1
@PART[science_module]:NEEDS[FeatureScience,RP-0]:AFTER[RP-0-Kerbalism]
{
	MODULE
	{
		name = HardDrive
		experiment_id = RP0photos1
		dataCapacity = 0
		sampleCapacity = #$@KERBALISM_HDD_SIZES/PRIVATE_DRIVES/Photography1/samples$
	}
}

// Photography 2
@PART[RO-ImprovedFilmCamera]:NEEDS[FeatureScience,RP-0]:AFTER[RP-0-Kerbalism]
{
	MODULE
	{
		name = HardDrive
		experiment_id = RP0photos2
		dataCapacity = 0
		sampleCapacity = #$@KERBALISM_HDD_SIZES/PRIVATE_DRIVES/Photography2/samples$
	}
}

// Photography 3
@PART[RO-HighResFilmCamera]:NEEDS[FeatureScience,RP-0]:AFTER[RP-0-Kerbalism]
{
	MODULE
	{
		name = HardDrive
		experiment_id = RP0photos3
		dataCapacity = 0
		sampleCapacity = #$@KERBALISM_HDD_SIZES/PRIVATE_DRIVES/Photography3/samples$
	}
}


// ============================================================================
// Procedural avionics integration
// Configurable options based on tech level - wIP
// ============================================================================
// @PART[proceduralAvionics]:NEEDS[FeatureScience,RP-0]:AFTER[RP-0-Kerbalism]
// {

// 	!MODULE[HardDrive] {}

// 	MODULE
// 	{
// 		name = HardDrive
// 		title = Basic
// 		dataCapacity = #$@KERBALISM_HDD_SIZES/ProceduralBasic/data$
// 		sampleCapacity = #$@KERBALISM_HDD_SIZES/ProceduralBasic/samples$
// 	}
// 	MODULE
// 	{
// 		name = HardDrive
// 		title = Interplanetary
// 		dataCapacity = #$@KERBALISM_HDD_SIZES/ProceduralInterplanetary/data$
// 		sampleCapacity = #$@KERBALISM_HDD_SIZES/ProceduralInterplanetary/samples$
// 	}
// 	MODULE
// 	{
// 		name = HardDrive
// 		title = Mature
// 		dataCapacity = #$@KERBALISM_HDD_SIZES/ProceduralMature/data$
// 		sampleCapacity = #$@KERBALISM_HDD_SIZES/ProceduralMature/samples$
// 	}
// 	MODULE
// 	{
// 		name = HardDrive
// 		title = Large Scale
// 		dataCapacity = #$@KERBALISM_HDD_SIZES/ProceduralLargeScale/data$
// 		sampleCapacity = #$@KERBALISM_HDD_SIZES/ProceduralLargeScale/samples$
// 	}
// 	MODULE
// 	{
// 		name = HardDrive
// 		title = Advanced
// 		dataCapacity = #$@KERBALISM_HDD_SIZES/ProceduralAdvanced/data$
// 		sampleCapacity = #$@KERBALISM_HDD_SIZES/ProceduralAdvanced/samples$
// 	}
// 	MODULE
// 	{
// 		name = HardDrive
// 		title = Long Term
// 		dataCapacity = #$@KERBALISM_HDD_SIZES/ProceduralLongTerm/data$
// 		sampleCapacity = #$@KERBALISM_HDD_SIZES/ProceduralLongTerm/samples$
// 	}
// 	MODULE
// 	{
// 		name = HardDrive
// 		title = Modern
// 		dataCapacity = #$@KERBALISM_HDD_SIZES/ProceduralModern/data$
// 		sampleCapacity = #$@KERBALISM_HDD_SIZES/ProceduralModern/samples$
// 	}
// 	MODULE
// 	{
// 		name = HardDrive
// 		title = Sample1
// 		dataCapacity = #$@KERBALISM_HDD_SIZES/ProceduralSample1/data$
// 		sampleCapacity = #$@KERBALISM_HDD_SIZES/ProceduralSample1/samples$
// 	}
// 	MODULE
// 	{
// 		name = HardDrive
// 		title = Sample2
// 		dataCapacity = #$@KERBALISM_HDD_SIZES/ProceduralSample2/data$
// 		sampleCapacity = #$@KERBALISM_HDD_SIZES/ProceduralSample2/samples$
// 	}
// 	MODULE
// 	{
// 		name = Configure
// 		title = Data Storage
// 		slots = 1

// 		SETUP
// 		{
// 			name = None
// 			desc = Empty slot for mass or cost savings, should you not require any storage. Use this for booster avionics.
// 		}

// 		SETUP
// 		{
// 			name = Basic Memory Storage
// 			cost = 50	//WIP
// 			tech = basicAvionics
			
// 			MODULE
// 			{
// 			  type = HardDrive
// 			  id_field = title
// 			  id_value = Basic
// 			}
// 		}
// 		SETUP
// 		{
// 			name = Interplanetary Memory Storage
// 			cost = 200	//WIP
// 			tech = interplanetaryProbes
			
// 			MODULE
// 			{
// 			  type = HardDrive
// 			  id_field = title
// 			  id_value = Interplanetary
// 			}
// 		}
// 		SETUP
// 		{
// 			name = Mature Memory Storage
// 			cost = 230	//WIP
// 			tech = matureAvionics
			
// 			MODULE
// 			{
// 			  type = HardDrive
// 			  id_field = title
// 			  id_value = Mature
// 			}
// 		}
// 		SETUP
// 		{
// 			name = Large Scale Memory Storage
// 			cost = 300	//WIP
// 			tech = largeScaleAvionics
			
// 			MODULE
// 			{
// 			  type = HardDrive
// 			  id_field = title	
// 			  id_value = Large Scale
// 			}
// 		}
// 		SETUP
// 		{
// 			name = Advanced Memory Storage
// 			cost = 200	//WIP
// 			tech = advancedAvionics
			
// 			MODULE
// 			{
// 			  type = HardDrive
// 			  id_field = title
// 			  id_value = Advanced
// 			}
// 		}
// 		SETUP
// 		{
// 			name = Long Term Memory Storage
// 			cost = 50	//WIP
// 			tech = longTermAvionics
			
// 			MODULE
// 			{
// 			  type = HardDrive
// 			  id_field = title
// 			  id_value = Long Term
// 			}
// 		}
// 		SETUP
// 		{
// 			name = Modern Memory Storage
// 			cost = 20	//WIP
// 			tech = modernAvionics
			
// 			MODULE
// 			{
// 			  type = HardDrive
// 			  id_field = title
// 			  id_value = Modern
// 			}
// 		}
// 		SETUP
// 		{
// 			name = Sample Storage
// 			cost = 100	//WIP
// 			mass = 0.02	//WIP
// 			tech = basicAvionics
			
// 			MODULE
// 			{
// 			  type = HardDrive
// 			  id_field = title
// 			  id_value = Sample1
// 			}
// 		}
// 		SETUP
// 		{
// 			name = Advanced Sample Storage
// 			cost = 150	//WIP
// 			mass = 0.03 	//WIP
// 			tech = largeScaleAvionics
			
// 			MODULE
// 			{
// 			  type = HardDrive
// 			  id_field = title
// 			  id_value = Sample2
// 			}
// 		}
// 	}
// }

// Temporary work-around until procedural avionics have their own configurable hard drive
// Everything is infinite, since having storage on everything except procedural avionics would render them useless
@PART[*]:HAS[@MODULE[HardDrive]]:NEEDS[FeatureScience,RP-0]:AFTER[zzzRP-0]
{
	@MODULE[HardDrive]
	{
		%dataCapacity = -1
	}
}

// ============================================================================
// Patch for people not using RP-1 and needing storage capabilities for scanning
// Thanks Raiz Space for raising the issue
// ============================================================================

@PART[*]:HAS[@MODULE[HardDrive]]:NEEDS[FeatureScience,!RP-0]:AFTER[zzzKerbalism]
{
	@MODULE[HardDrive]
	{
		%dataCapacity = 2048.0
		%sampleCapacity = 3
	}
}