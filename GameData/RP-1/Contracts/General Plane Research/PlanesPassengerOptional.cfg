
CONTRACT_TYPE
{
	name = Passflylow
	group = GeneralPlanes

	title = Planes (Passenger)

	description = A highly ranked official wants to briefly inspect the technological development of your space center.Design, build and fly a crewed aircraft (not a rocket) to maintain @VesselGroup/ReachAlt/minAltitude meters altitude with the official (and his/her underlings,4 people total) on board then return home safely. Optionally, landing back at the runway will pay out extra funds. If playing from the Cape, the Space Shuttle runway provided by the RSS-CanaveralHD mod is also a valid landing target.&br;The reward of this contract will slowly increase over time but will be reset to 0 after each completion.&br;<b>Current reward is at @rewardFactorPercent % of its nominal value. Elapsed/Expected Days: @elapsedDays / @expectedDays</b>
	genericDescription = Design, build and fly a crewed aircraft (not a rocket) to maintain a specific altitude then return home safely.

	synopsis = Fly to @VesselGroup/ReachAlt/minAltitude m.

	completedMessage = Congratulations on a successful flight!

	sortkey = 200

	deadline = 60   // 60days
	cancellable = false
	declinable = true
	autoAccept = false
	minExpiry = 1
	maxExpiry = 1

	targetBody = HomeWorld()

	maxCompletions = 0
	maxSimultaneous = 1
	prestige = Trivial

	// reward block
	advanceFunds = 0
	rewardFunds = 0
	failureFunds = 0
	rewardReputation = 10
	failureReputation = 0.5
	REQUIREMENT
	{
		name = ProgramActive
		type = ProgramActive
		program = GeneralPlane
	}
	DATA
	{
		type = int
		antiGrindCompletion = $XPL_Completion == 0 ? (UniversalTime() - @expectedDays * 86400) : $XPL_Completion
	}

	DATA
	{
		type = float
		expectedDays = 40

		elapsedDays = Round((UniversalTime() - @antiGrindCompletion) / 86400.0)
		rewardFactor = Log(Max(@elapsedDays / @expectedDays * 2 - 0.05, 1), 2) / 1.5607
		rewardFactorPercent = Round(@rewardFactor * 100, 1)
	}

	REQUIREMENT
	{
		name = ProgramActive
		type = ProgramActive
		program = GeneralPlane
	}
	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression

		CONTRACT_OFFERED
		{
			XPL_Completion = ($XPL_Completion + 0) == 0 ? (UniversalTime() - 120 * 86400) : ($XPL_Completion + 0)
		}
		CONTRACT_COMPLETED_SUCCESS
		{
			XPL_Completion = UniversalTime()
		}
	}

	PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup
		title = Maintain between @ReachAlt/minAltitude and @ReachAlt/maxAltitude m with a crewed aircraft.
		define = lowAirplane
		dissassociateVesselsOnContractCompletion = true
		resetChildrenWhenVesselDestroyed = true

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			minCrew = 1
			maxCrew = 99
			title = Have at least 1 crewmember on board
			hideChildren = true
		}
		PARAMETER
		{
			name = HasPassengers
			type = HasPassengers
			count = 4
			title = Official on board
			hideChildren = true
		}
		PARAMETER
		{
			name = ReachAlt
			type = ReachState
			title = Hold between @minAltitude and @maxAltitude meters.
			minAltitude = Round(7000 + Random(0, 11000), 15)
			maxAltitude = @minAltitude + 1000
			title = Hold between @minAltitude and @maxAltitude meters.
			disableOnStateChange = true

			PARAMETER
			{
				name = Duration
				type = Duration
				duration = 1m
				preWaitText = Reach specified altitude.
				waitingText = Completing Flight
				completionText = Flight completed, you are cleared to land.
			}
		}
	}

	PARAMETER
	{
		name = ReturnVesselGroup
		type = VesselParameterGroup
		title = Land/splashdown anywhere
		vessel = lowAirplane
		hideChildren = true

		PARAMETER
		{
			name = ReturnHome
			type = RP1ReturnHome
			title = Return Home Safely
			maxSpeed = 5
			hideChildren = true
			completeInSequence = true
		}
	}

	PARAMETER
	{
		name = OptVesselGroup
		type = VesselParameterGroup
		title = Land on the runway with descent angle lower than 10 degrees
		rewardFunds = Round(@/advanceFunds * 0.3, 100)
		optional = true
		vessel = lowAirplane
		hideChildren = true

		PARAMETER
		{
			name = HorizontalLanding
			type = HorizontalLanding
			descentAngle = 10
			hideChildren = true
			completeInSequence = true
		}

		PARAMETER
		{
			name = ReturnHome
			type = RP1ReturnHome
			landAtFacility = Runway
			maxSpeed = 5
			hideChildren = true
			completeInSequence = true
		}
	}
	BEHAVIOUR
	{
		name = SpawnPassengers
		type = SpawnPassengers
		title = Spawn the Passengers
		kerbal = Inspection team
	}
}