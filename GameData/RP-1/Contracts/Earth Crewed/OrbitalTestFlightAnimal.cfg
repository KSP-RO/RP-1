CONTRACT_TYPE
{
	name = OrbitalTestFlightAnimal
	title = Orbital Test Flight (Animal Crew)
	group = CrewedOrbit

	tag = CrewedOrbitOptional

	description = <b>Program: Crewed Orbit<br>Type: <color=blue>Optional</color></b><br><br>Before putting a crew in a capsule to send into space, it is a good idea to test the capsule with an advanced biological creature in it. Send a Crew Capsule WITH AN ANIMAL (one of the generated tourists) into orbit and return safely home. These animals are represented by tourists.<br><br>Can be completed @maxCompletions times.
	
	genericDescription = Launch a crew-capable spacecraft, WITH AN ANIMAL (one of the generated tourists), into orbit and return safely home. The animals will be represented in-game as tourists.

	synopsis = Send an animal on a test flight of a crewed vessel on an orbital flight

	completedMessage = Congratulations! The capsule has proven to work and the animal has returned safely.

	sortKey = 602

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 2
	maxSimultaneous = 1
	deadline = 0

	targetBody = HomeWorld()


	// ************ REWARDS ************
	prestige = Trivial       // 1.0x
	advanceFunds = 0
	rewardScience = 0
	rewardFunds = 0
	failureFunds = 0
	rewardReputation = 75
	failureReputation = 0 // was @rewardReputation

	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = Any
		type = Any

		REQUIREMENT
		{
			name = ProgramActive
			type = ProgramActive
			program = CrewedOrbitEarly
		}

		REQUIREMENT
		{
			name = ProgramActive
			type = ProgramActive
			program = CrewedOrbit
		}
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitalTestFlight
		title = Completed Orbital Test Flight (Uncrewed) Contract
	}

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_OrbitCrewed
		invertRequirement = true
	}

	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		tag = CrewedOrbitOptional
		invertRequirement = true
		title = Don't have another active optional crewed orbit contract.
	}

	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		tag = CrewedOrbitRequired
		invertRequirement = true
		title = Don't have an active required crewed orbit contract.
	}

	// ************ PARAMETERS ************
	
	PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup
		title = Orbital test flight

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a new vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = OneCrewCapacity
			type = HasCrewCapacity
			minCapacity = 1
			title = Have space for at least 1 crewmember on board
			hideChildren = true
			disableOnStateChange = false
		}
		
		PARAMETER
		{
			name = NoCrew
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed vessel
			hideChildren = true
		}
		
		PARAMETER
		{
			name = HasPassengers
			type = HasPassengers
			count = 1
			title = Animal on board (use generated tourist)
			hideChildren = true
		}

		PARAMETER
		{
			name = HasNonReentryRatedParts
			type = PartValidation
			hideChildren = true
			title = Vessel has no parts with the tag "not rated for reentry"

			NONE
			{
				partModule = ModuleNonReentryRated
			}
		}

		PARAMETER
		{
			name = Orbit
			title = Stay in specified orbit for the duration
			type = Orbit
			minPeA = 150000
			targetBody = HomeWorld()
			disableOnStateChange = true

			PARAMETER
			{
				name = Duration
				type = Duration
				duration = 1h 27m
				preWaitText = Reach specified orbit
				waitingText = Completing orbit...
				completionText = Orbit completed, you may fire retros when ready.
			}
		}
		
		PARAMETER
		{
			name = ReturnHome
			type = RP1ReturnHome
			title = Return home safely
			hideChildren = true
			completeInSequence = true
		}
	}
	
	BEHAVIOUR
	{
		name = SpawnPassengers
		type = SpawnPassengers
		title = Spawn the Animal Passenger
		kerbal = Test Animal
	}
}
