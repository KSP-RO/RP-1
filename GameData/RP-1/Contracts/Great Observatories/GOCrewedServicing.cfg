CONTRACT_TYPE
{
	name = GOCrewedServicing
	title = @/targetVessel1 Crewed Servicing Mission
	genericTitle = Space Telescope Crewed Servicing Mission

	group = Great Observatories
	agent = Federation Aeronautique Internationale

	description = <b>Program: Great Observatories<br>Type: <color=green>Required</color></b><br><br> One of our space telescopes is in need of component repairs and upgrades to continue operating optimally. Either launch a new crewed spacecraft or dock the telescope to a space station to allow crew to service it.

	synopsis = Send a crew to dock with and service instrumentation on the designated craft

	completedMessage = Mission success! The upgraded instrumentation is already producing scientific data.

	// sortKey = 1503

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 1
	maxSimultaneous = 1
	deadline = 0

	targetBody = HomeWorld()

	prestige = Trivial       // 1.0x
	advanceFunds = 0
	rewardScience = 0
	rewardReputation = 250
	rewardFunds = 0
	failureReputation = 0 // was @rewardReputation
	failureFunds = 0

	// ************ REQUIREMENTS ************

  	REQUIREMENT
	{
		name = ProgramActive
		type = ProgramActive
		program = GreatObservatories
	}
 
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = GOLargeSpaceTelescope
	}

	REQUIREMENT
	{
		name = AtLeast
		type = AtLeast
		count = 2

		REQUIREMENT
		{
			name = CompleteContract1
			type = CompleteContract
			contractType = GOHeavySpaceTelescope
		}

		REQUIREMENT
		{
			name = CompleteContract2
			type = CompleteContract
			contractType = GOEllipticalSpaceTelescope
		}

		REQUIREMENT
		{
			name = CompleteContract3
			type = CompleteContract
			contractType = GOInfraredSpaceObservatory
		}

		REQUIREMENT
		{
			name = CompleteContract4
			type = CompleteContract
			contractType = GOFirstInfraredSpaceTelescope
		}
	}

	// ************ DATA ************

	DATA
	{
		type = Vessel
		requiredValue = true
		targetVessel1 = LSTcraft // this is the craft that completed the Large Space Telescope contract
		hidden = true
 	}

	BEHAVIOUR
	{
		name = ServicingReset
		type = Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
			TelescopeLastServiced = @/targetVessel1
			FirstServicingTime = UniversalTime()
		}
	}

	// ************ PARAMETERS ************

	PARAMETER
	{
		name = LSTServicingMission
		type = VesselParameterGroup
		title = Dock a spacecraft with a servicing crew to the @/targetvessel1
		genericTitle = Dock a spacecraft with a servicing crew to the space telescope

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 3
			crewOnly = true
			title = Bring a minimum crew of @minCrew
			hideChildren = true
		}

  		PARAMETER
		{
			name = HasResource
			type = HasResource
			resource = ResearchPayload
			minQuantity = 600 // WFPC2 + COSTAR was 571 kg
			title = Bring @minQuantity units of ResearchPayload as replacement instruments
		}

  		PARAMETER
		{
			name = DockingSequence
			type = Sequence
			title = Dock with the @/targetVessel1 for 4 days to allow your engineers to service its instrumentation
			genericTitle = Dock with the space telescope for 4 days to allow your engineers to service its instrumentation
   
			PARAMETER
			{
				name = Crewmembers
				type = HasCrew
				trait = Engineer
				minCrew = 2
				crewOnly = true
				title = Have at least 2 engineers on board to conduct servicing
				hideChildren = true
			}
			PARAMETER
			{
				name = DockWithTelescope
				type = Docking
				vessel = @/targetVessel1
				title = Dock with @/targetVessel1
				genericTitle = Dock with the space telescope
			}

			PARAMETER
			{
				name = Duration
				type = Duration
				duration = 4d
				preWaitText = Service the space telescope
				waitingText = Servicing instrumentation...
				completionText = Servicing: Complete
				disableOnStateChange = true
			}

		}

		PARAMETER
		{
			name = ReturnHome
			type = RP1ReturnHome
			title = Undock and return the crew home safely
			hideChildren = true
			completeInSequence = true
		}

		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
		}
   

	}

}
