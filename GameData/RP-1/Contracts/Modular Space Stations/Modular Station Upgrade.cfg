CONTRACT_TYPE
{
	name = upgrade_ModularStation
	title = Modular Station Upgrade
	group = EarlyEarthSpaceStation
	agent = Stations

	description = <b>Program: Earth Space Station<br>Type: <color=blue>Optional</color></b><br><br>After successfully launching your first modular Space Station, it is now time to use its modularity. Control a Space Station, then send new module that will have habtation module allowing for up to three missions.&br;&br;<b>Number of Phases Completed: @/index / @/maxCompletions</b>

	genericDescription = Rendezvous with a space station with the specified requirements in Earth orbit for upgrading it. 

	synopsis = Send New module to a station

	completedMessage = Congratulations! The station has been upgraded!

	sortKey = 1502

	cancellable = true
	declinable = false
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 4
	maxSimultaneous = 1
	deadline = 0

	targetBody = HomeWorld()

	// ************ REWARDS ************
	
	prestige = Trivial       // 1.0x
	advanceFunds = 0
	rewardScience = 0
	rewardReputation = 200  
	rewardFunds =  0
	failureReputation = 0 // was @/rewardReputation
	failureFunds = 0

	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = ProgramActive
		type = ProgramActive
		program = ModularEarthSpaceStation
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_modular_spaceStation
	}
	DATA
	{
		type = List<float>
		durationMultiplier = [1,1,1,2]
		experimentList = [0.3332,0.4998,0.6664,0.9]
	}
	DATA
	{
		type = float
		durationText = Round(182.5 * @/experimentList.ElementAt(@/index) + 0.05, 0.1)
	}
	DATA
	{
		type = float 
		experimentCompletion = @/experimentList.ElementAt(@/index)
	}
	DATA
	{
		type = int
		index = $RepeatProtoSpaceStation_Count + 0
	}
	
	// ************ PARAMETERS ************
	
	PARAMETER
	{
		name = vesselGroupLaunch
		type = VesselParameterGroup
		title = Control a Space Station with the required parameters
		notes = The station must include at least 1 Docking Port and support for at least 2 Crew
		define = modularSpaceStation
		disableOnStateChange = true
		
		PARAMETER
		{
			name = HasCapacity
			type = HasCrewCapacity
			minCapacity = 2
			title = Space for at least 2 crew
			hideChildren = true
			disableOnStateChange = false
		}	
		PARAMETER
		{
			name = DockingPort
			type = PartValidation
			partModule = ModuleDockingNode
			minCount = 1
			title = Have at least 1 docking port
			hideChildren = true
		}
		PARAMETER
		{
			name = Orbit
			type = Orbit
			minPeA = 250000
			maxApA = 500000
			targetBody = HomeWorld()
			title = Reach orbit with a perigee greater than 250 km and an apogee less than 500 km
			hideChildren = true
		}
	}
	PARAMETER
	{
		name = vesselGroupService
		type = VesselParameterGroup
		title = Send any needed supplies, modules, or crew to the station
		define = serviceVessel
		completeInSequence = true
		resetChildrenWhenVesselDestroyed = true
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a Supply Mission
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = DockingPort
			type = PartValidation
			partModule = ModuleDockingNode
			minCount = 2
			title = Have at least 2 docking ports
			hideChildren = true
		}
        PARAMETER
		{
			name = HasCapacity
			type = HasCrewCapacity
			minCapacity = 3
			title = Space for at least 3 crew
			hideChildren = true
			disableOnStateChange = false
		}
		PARAMETER
		{
			name = Rendezvous
			type = Rendezvous
			vessel = modularSpaceStation
			distance = 100
			title = Rendezvous with the station.
		}
		PARAMETER
		{
			name = Docking
			type = Docking
			vessel = modularSpaceStation
			completeInSequence = true
			title = Dock with the station.
		}

	}
	PARAMETER
	{
		name = vesselGroupStationPersist
		type = VesselParameterGroup
		title = Keep the station in orbit
		vessel = modularSpaceStation
		completeInSequence = true
		
		PARAMETER
		{
			name = Orbit
			type = Orbit
			minPeA = 250000
			maxApA = 500000
			targetBody = HomeWorld()
			title = Keep the station in a stable orbit with a perigee greater than 250 km and an apogee less than 500 km
		}
        PARAMETER
		{
			name = HasCapacity
			type = HasCrewCapacity
			minCapacity = 5
			title = Space for at least 5 crew
			hideChildren = true
			disableOnStateChange = false
		}
	}
}
