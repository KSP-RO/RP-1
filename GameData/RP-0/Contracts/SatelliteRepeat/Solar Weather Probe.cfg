CONTRACT_TYPE
{
	name = SolarWeatherProbe
	title = Solar Weather Probe
	group = Orbits
		
	description = Despite it being so essential to life on earth, we know very little about our star. We need you to make detailed, comprehensive measurements of the solar magnetic field and cosmic rays from locations distant from Earth. Build, design, and launch a probe into interplanetary space to provide practical data on solar storms which affect communications and power on Earth.<br><b>Make sure your craft contains a cosmic ray Science experiment and magnetic scan experiment as we will need science returned.</b><br>This contract may be repeated five times. Currently @index have been completed.<br>Real life examples: Pioneers 6-9, Pioneer E (failed)
	
	genericDescription = Launch a solar weather probe with cosmic ray and magnetic scan experiments
		
	synopsis = Launch a solar weather probe with cosmic ray and magnetic scan experiments
		
	completedMessage = Congratulations! Data from the probe is being used to better understand stellar processes and the structure and flow of the solar wind.
		
	sortKey = 104
		
	declinable = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 5
	maxSimultaneous = 1
		
	targetBody = Sun

	// ************ REWARDS ************
	prestige = Trivial   // 1.00x
	rewardReputation = @/rewards.ElementAt(@/index)
	rewardScience = 3

	DATA {
		type = List<float>
		rewards = [ 50, 45, 40, 35, 30 ]
	}

	DATA {
		type = List<float>
		perihelions = [ 0.8, 1, 1, 0.75, 0.75 ]
	}

	DATA {
		type = List<float>
		apohelions = [ 1, 1.1, 1.1, 1, 1.1 ]
	}
	
	DATA {
		type = float
		index = RP0SolarWeatherProbeIndex
	}

	BEHAVIOUR {
		name = IncrementIndex
		type = Expression
		CONTRACT_COMPLETED_SUCCESS
		{
				RP0SolarWeatherProbeIndex = RP0SolarWeatherProbeIndex + 1
		}
	}
		
	// ************ REQUIREMENTS ************	

	REQUIREMENT	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_HeliocentricProbe
		title = Complete @contractType Contract
	}
	REQUIREMENT {
		name = CompleteContract
		type = CompleteContract
		contractType = first_AdvancedSat
		title = Complete @contractType Contract
	}
	REQUIREMENT {
		name = CompleteContract
		type = CompleteContract
		contractType = EarlyWeatherSat
		title = Complete @contractType Contract
		minCount = 1
	}

	// ************ PARAMETERS ************
	
	PARAMETER
	{
		name = SolarWeatherProbe
		type = VesselParameterGroup
		title = Maintain a solar weather probe in the target heliocentric orbit for 6 months and transmit science
		define = SolarWeatherProbe

		duration = 180d

		PARAMETER {
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER {
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER {
			name = HasWeatherSatPayload
			type = HasResource
			resource = WeatherSatPayload
			minQuantity = 59.9
			title = Have a WeatherSatPayload of at least 60 units on the craft
			hideChildren = true
		}		
		PARAMETER {
			name = Orbit
			type = Orbit
			minApA = 150000000000 * @/apohelions.ElementAt(@/index)
			maxPeA = 150000000000 * @/perihelions.ElementAt(@/index)
			title = Achieve the target solar orbit of at least @/perihelions.ElementAt(@/index) x @/apohelions.ElementAt(@/index) AU.
		}
		PARAMETER {
			name = HasMagnometer
			type = PartValidation
			hideChildren = true
			title = Have a magnetometer on the vessel
			FILTER {
				MODULE {
					name = Experiment
					experiment_id = RP0magScan1
					//isEnabled = True
					//status = Running
				}
			}
		}
		PARAMETER {
			name = ExperimentRunning
			type = ExperimentRunning
			hideChildren = true
			title = Have cosmic ray science experiments running
			experiment_id = RP0cosmicRay1
		}
	}
	PARAMETER {
		name = VesselPowerCheck
		type = VesselParameterGroup
		vessel = SolarWeatherProbe
		completeInSequence = true
		hideChildren = true
		title = Craft must have power after @/SolarWeatherProbe/duration

		PARAMETER {
			name = HasPower
			type = HasResource
			resource = ElectricCharge
			minQuantity = 1.0
			hideChildren = true
		}
	}
}
