import part_data
import os
from string import Template

tree_ecm_engines_header = """
//****************************************************************************************
//  ENTRY COST MODIFIERS
//	These are the engine configs
//
//	DO NOT EDIT THIS FILE DIRECTLY!!!
//	This file is generated from RP-0 Parts Browser
//
//****************************************************************************************

@ENTRYCOSTMODS:FOR[xxxRP-0]
{
"""

output_dir = os.getenv('PB_OUTPUT_DIR', "../../../GameData/RP-0/Tree/")
module_part_config_template = Template("    ${name} = ${ecm}\n")
tree_ecm_engines_footer = "}"

def generate_ecm_engines(parts):
    ecm_configs = ""
    for part in parts:
        if part['name'] is not None and len(part['name']) > 0:
            if part['mod'] == 'Engine_Config' and not part['orphan']:
                # for purposes I don't full understand, we replace all '.' and '_' characters with '-'
                # and '?' with ' '.  That's what the downstream code expects for whatever reason.
                ecm_configs += module_part_config_template.substitute(name=part['name'].replace('_','-').replace('.','-').replace('?',' '), ecm=part['entry_cost_mods'])
    text_file = open(output_dir + "ECM-Engines.cfg", "w", newline='\n')
    text_file.write(tree_ecm_engines_header)
    text_file.write(ecm_configs)
    text_file.write(tree_ecm_engines_footer)
    text_file.close()
        