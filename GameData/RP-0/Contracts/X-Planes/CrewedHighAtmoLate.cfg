CONTRACT_TYPE
{
	name = CrewedSpaceLate
	group = X-Planes
	
	title = X-Planes (Suborbital)
	
	description = Design, build and launch a crewed rocket or plane to put a person into a suborbital trajectory reaching @/altHighCrewLate.Print() km and return home safely.
	genericDescription = Design, build and launch a crewed rocket or plane to put a person into a suborbital trajectory above a specific altitude and return home safely.
	synopsis = Launch a crewed vessel to @/altHighCrewLate.Print() km and return safely.
	
	completedMessage = Congratulations on a successful flight!
	
	minExpiry = 1.0
	maxExpiry = 30.0
	deadline = 90
	cancellable = true
	declinable = true
	autoAccept = false
	
	targetBody = HomeWorld()
	
	maxCompletions = 0
	maxSimultaneous = 1
	prestige = Trivial
	
	// reward block
	advanceFunds = 3000.0 + @VesselGroup/ReachAlt/minAltitude*0.01
	rewardFunds = @advanceFunds
	failureFunds = @advanceFunds * 1.5
	rewardReputation = 3
	failureReputation = 3
	
	DATA
	{
		type = int
		altHighCrewLate = @/VesselGroup/ReachAlt/minAltitude / 1000
	}

	REQUIREMENT
	{
		name = CompleteContractHSFOrbit
		type = CompleteContract
		contractType = first_OrbitCrewed
	}
	REQUIREMENT
	{
		name = BreakSoundBarrier
		type = CompleteContract
		contractType = BreakSoundBarrier
	}
	
	REQUIREMENT
	{
		name = CompleteCrewedSpaceLate
		type = CompleteContract

		contractType = CrewedSpaceLate

		minCount = 0

		//complete before we can attempt again.
		//cooldownDuration = 4d
	}
	REQUIREMENT
	{
		name = NotXPlaneHigh
		type = AcceptContract
		contractType = CrewedReachSpace
		invertRequirement = True
	}
	REQUIREMENT
	{
		name = NotSubOrb
		type = AcceptContract
		contractType = CrewedSuborbital
		invertRequirement = True
	}
		

	PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup
		title = Reach @/altHighCrewLate.Print() km with a crewed vessel.
		define = crewedSuborbitalCraft
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
		}
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			minCrew = 1
		}		
		PARAMETER
		{
			name = ReachAlt
			type = ReachState
			minAltitude = Round(Random(140000, 200000), 10000)
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			completeInSequence = true
		}
	}
}

