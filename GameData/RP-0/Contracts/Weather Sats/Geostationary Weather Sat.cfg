CONTRACT_TYPE
{
	name = GEOWeather
	title = Geostationary Weather Satellite
	group = WeatherSats

	description = Geostationary satellites provide the best views of the clouds in specific areas for our meteorologists. Place a weather satellite in geostationary orbit near the marked area. This contract can be completed up to 6 times.

	synopsis = Launch a geostationary weather satellite to the marked area

	completedMessage = Success! By placing the weather satellite in a geostationary orbit, we can see the movement and formations of the clouds.

	sortKey = 503

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 0
	maxSimultaneous = 1
	deadline = 365  // 1 year

	targetBody = HomeWorld()

	prestige = Significant   // 1.25x
	advanceFunds = (12500 * Pow(1 + (@GEOWeather/HasWeatherSatPayload/minQuantity / 1000), 1.25)) / 2
	rewardScience = 0
	rewardReputation = 15
	rewardFunds = 12500 * Pow(1 + (@GEOWeather/HasWeatherSatPayload/minQuantity / 1000), 1.25)
	failureReputation = 15
	failureFunds = 25000

	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = SecondGenWeather
		minCount = 3
		title = Complete @contractType Contract at least 3 times
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_GEOUncrewed
		title = Complete @contractType Contract
	}
	
	// ************ PARAMETERS ************

	PARAMETER
	{
		name = GEOWeather
		type = VesselParameterGroup
		title = Geostationary Weather Satellite
		defineList = GEOWeather

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = HasWeatherSatPayload
			type = HasResource
			resource = WeatherSatPayload
			minQuantity = Round(Random(1000,3300),1)
			title = Have a WeatherSatPayload of at least @minQuantity units on the craft
		}
		PARAMETER
		{
			name = Orbit
			type = Orbit
			maxInclination = 2
			maxEccentricity = 0.01
			minPeriod = 23h 54m
			maxPeriod = 23h 58m
			disableOnStateChange = true
			title = Acheive a Geostationary orbit within the stated parameters near the waypoint
		}
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 0
			distance = 42736000
			horizontalDistance = 2510000.0
            showMessages = true
			completeInSequence = true
			
			PARAMETER
			{
				name = Duration
				type = Duration
				duration = 6h
				preWaitText = Approaching Target...
				waitingText = Testing connectivity of instruments to ground stations
				completionText = Testing is complete!
			}
		}
	}
	
	BEHAVIOUR
	{
		name = WaypointGenerator
		type = WaypointGenerator
		
		RANDOM_WAYPOINT
		{
			name = Geostationary Weather Satellite
			icon = thermometer
			altitude = HomeWorld().AtmosphereAltitude()
			forceEquatorial = true
		}
	}
}
