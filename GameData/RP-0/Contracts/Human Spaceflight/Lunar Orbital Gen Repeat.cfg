CONTRACT_TYPE
{
	name = HSFOrbitalMoonGenRepeatable
	group = HumanContracts
	
	title = Human Orbital (@/crewNum / LLO)
	
	description = Launch a spacecraft with at least @/crewNum aboard into lunar orbit for a routine mission of the specified duration and return safely to Earth.
	
	synopsis = Fly a Lunar Orbital mission with @/crewNum crew.
	
	completedMessage = Crew alive and well after the mission--congratulations!

	cancellable = true 
	declinable = true		
	deadline = 365 // 1 year

	prestige = Significant
	
	targetBody = Moon

	maxSimultaneous = 1
	
	// reward block
	advanceFunds = 50000.0 + @/crewNum * 20000
	rewardFunds = @advanceFunds
	failureFunds = @advanceFunds * 1.5
	rewardReputation = 100 + @/crewNum * 30
	failureReputation = @rewardReputation * 1.5
	
	DATA
	{
		type = int
		crewNum = 1 + Round(Random(1, 2), 1)
	}
	
	DATA
	{
		type = Duration
		Duration = Round(Random(1d, 3d), 1h)
	}
	
	DATA
	{
		type = int
		startPeA = 30000 + Round(Random(0, 55000), 10000)
	}
	DATA
	{
		type = int
		startApA = 100000 + Round(Random(0, 200000), 25000)
	}
	
	DATA
	{
		type = double
		Inclination = Round(Random(0.0, 180.0), 5)
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = HSFOrbitalMoon1Repeatable
		minCount = 2
	}
	REQUIREMENT
	{
		name = ReqLunarShields
		type = CanResearchTech
		tech = generalConstruction
	}
	PARAMETER
	{
		name = vesselGroup
		type = VesselParameterGroup
		title = Crewed Lunar Orbital
		define = lunarOrbitalCrewedSpacecraft
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
		}
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			minCrew = @/crewNum
		}
		PARAMETER
		{
			name = Orbit
			type = Orbit
			targetBody = Moon
			situation = ORBITING			
			minPeA = @/startPeA
			maxApA = @/startApA
			minInclination = Min(Max(0, @/Inclination - 10), 180)
			maxInclination = Min(Max(0, @/Inclination + 10), 180)
			disableOnStateChange = true
			PARAMETER
			{
				name = Duration
				type = Duration
				duration = @/Duration
				preWaitText = Reach specified orbit.
				waitingText = Orbiting...
				completionText = Orbits completed, you may return to Earth when ready.
			}
		}
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			completeInSequence = true
		}				
	}
}
