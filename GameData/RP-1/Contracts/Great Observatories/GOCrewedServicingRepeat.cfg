CONTRACT_TYPE
{
	name = GOCrewedServicingRepeat
	title = @/targetVessel1 Crewed Servicing Mission
	genericTitle = Space Telescope Crewed Servicing Mission

	group = Great Observatories
	agent = Federation Aeronautique Internationale

	description = <b>Program: Great Observatories<br>Type: <color=green>Required</color></b><br><br>Another one of our space telescopes is in need of component repairs and upgrades to continue operating optimally. Either launch a new crewed spacecraft or dock the telescope to a space station to allow crew to service it.

	synopsis = Send a crew to dock with and service instrumentation on the designated space telescope

	completedMessage = Mission success! The upgraded instrumentation is already producing scientific data.

	// sortKey = 1503

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 3
	maxSimultaneous = 1
	deadline = 0

	targetBody = HomeWorld()

	prestige = Trivial       // 1.0x
	advanceFunds = 0
	rewardScience = 0
	rewardReputation = 200
	rewardFunds = 0
	failureReputation = 0 // was @rewardReputation
	failureFunds = 0

	// ************ REQUIREMENTS ************
  	REQUIREMENT
	{
		name = ProgramActive
		type = ProgramActive
		program = GreatObservatories
	}
 
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = GOLargeSpaceTelescope
	}

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = GOCrewedServicing
	}

	REQUIREMENT
	{
		name = Expression
		type = Expression
		title = Must have been 90 days since completing the first crewed servicing mission
		expression = $FirstServicingTime - $GOCurrentTime > 7776000
	}

	// ************ DATA ************

	DATA
	{
		type = Vessel
		requiredValue = true 
		targetVessel1 = $EarthST.Where(v => v.FreeDockingPorts()>0 && v.Vessel() != @index).Random()
		title = Target must be a previously launched space telescope
		hidden = true
 	}
 
 	DATA
	{
		type = Vessel
		index = $TelescopeLastServiced
	}

	BEHAVIOUR
	{
		name = ServicingReset
		type = Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
			TelescopeLastServiced = @/targetVessel1
		}
	}

	BEHAVIOUR
	{
		name = ServicingDelayCheck
		type = Expression
		
		CONTRACT_OFFERED
		{
			type = double
			GOCurrentTime = UniversalTime()
		}
	}

	// ************ PARAMETERS ************

	PARAMETER
	{
		name = LSTServicingMission
		type = VesselParameterGroup
		title = Dock a spacecraft with a servicing crew to the @/targetvessel1
		genericTitle = Dock a spacecraft with a servicing crew to the space telescope

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 3
			crewOnly = true
			title = Bring a minimum crew of @minCrew
			hideChildren = true
		}

  		PARAMETER
		{
			name = HasDockingPort
			type = PartValidation
			partModule = ModuleDockingNode
			title = Vessel must have a docking port
			hideChildren = true
		}

  		PARAMETER
		{
			name = HasResource
			type = HasResource
			resource = ResearchPayload
			inQuantity = 600 // WFPC2 + COSTAR was 571 kg
			title = Bring @minQuantity units of ResearchPayload as replacement instruments
		}

  		PARAMETER
		{
			name = DockingSequence
			type = Sequence
			title = Dock with @/targetVessel1 for 4 days to allow your engineers to service its instrumentation
			genericTitle = Dock with the space telescope for 4 days to allow your engineers to service its instrumentation
   
			PARAMETER
			{
				name = Crewmembers
				type = HasCrew
				trait = Engineer
				minCrew = 2
				crewOnly = true
				title = Have at least 2 engineers on board
				hideChildren = true
			}

			PARAMETER
			{
				name = DockWithTelescope
				type = Docking
				vessel = @/targetVessel1
				title = Dock with @/targetVessel1
	   			genericTitle = Dock with the space telescope
			}

			PARAMETER
			{
				name = Duration
				type = Duration
				duration = 4d
				preWaitText = Service the space telescope
				waitingText = Servicing instrumentation...
				completionText = Servicing: Complete
				disableOnStateChange = true
			}

		}

		PARAMETER
		{
			name = ReturnHome
			type = RP1ReturnHome
			title = Return the crew home safely
			hideChildren = true
			completeInSequence = true
		}

		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
		}
   

	}

}
