CONTRACT_TYPE {
	name = GeostatWeatherSat
	group = SatellitesMeteorological
	sortKey = 502
	
	title = Geostationary Weather Satellite @numeral
	genericTitle = Geostationary Weather Satellite
	description = Geostationary orbits are very useful for weather satellites because they permit long-term continous monitoring of the same location, albeit from some distance. Choose a location to observe and launch a class @numeral geostationary weather satellite over it.<br>You will develop increasingly advanced classes of geostationary weather satellites. The payload required will increase with each new satellite series.<br><b>The satellite will be destroyed upon completion of the contract. This simulates transfer of the payload to operational control after being placed sucessfully in orbit.</b><br>The class @numeral series of geostationary weather satellites contains @length contracts, of which @seriesIndex have been completed.<br>Real life examples: SMS / GOES	
	genericDescription = Put a weather satellite into sun-synchronous orbit.
	synopsis = Put a weather satellite with @payload units of payload into geostationary orbit
	completedMessage = Success! The satellite is functional and ready for operation.
	
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 22
	maxSimultaneous = 1
	deadline = 730	// 2 years

	targetBody = HomeWorld()	

	// ************ REWARDS ************
	prestige = Trivial
	rewardReputation = @reward
	advanceFunds = @rewardReputation * 100
	failureReputation = @advanceFunds * 0.0005
	
	// ************ REQUIREMENTS ************
	REQUIREMENT	{
		name = CompleteContract
		type = CompleteContract
		contractType = EarlyWeatherSat
		minCount = 8
		title = Complete @contractType Contract
	}
	REQUIREMENT	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_GeostatCom
		title = Complete @contractType Contract
	}

	// ************ CONTRACT DATA ************
	DATA {
		type = float
		index = RP0GeostatWeatherIndex
	}	
	BEHAVIOUR {
		name = IncrementIndex
		type = Expression
		CONTRACT_COMPLETED_SUCCESS {
			RP0GeostatWeatherIndex = RP0GeostatWeatherIndex + 1
		}
	}	

	// *** Series Number ***
	DATA {
		type = List<float>
		serieses = [1, 1, 1, 1, 1, 1,		2, 2, 2, 2,	2, 2,		3, 3, 3, 3,	3, 3,		4, 4, 4, 4 ]
	}	
	DATA {
		type = float
		series = @serieses.ElementAt(@index)
	}	

	// *** Contract Number ***
	DATA {
		type = List<float>
		seriesIndices = [0, 1, 2, 3, 4, 5,		0, 1, 2, 3,	4, 5,		0, 1, 2, 3,	4, 5,		0, 1, 2, 3 ]
	}	
	DATA {
		type = float
		seriesIndex = @seriesIndices.ElementAt(@index)
	}	

	// *** Roman Numeral ***
	DATA {
		type = List<string>
		numerals = [ "I", "II", "III", "IV"]
	}
	DATA {
		type = string
		hidden = true
		numeral = @numerals.ElementAt(@series-1)
	}	

	// *** Series Lengths ***
	DATA {
		type = List<float>
		lengths = [		6,		6,		6,		4	]
	}
	DATA {
		type = float
		length = @lengths.ElementAt(@series-1)
	}	

	// *** Payloads ***
	DATA {
		type = List<float>
		payloads = [	300,	400,	1000,	1500	] // SMS/GOES 1-3, GOES 4-7, GOES 11-12, GOES 13-15
	}
	DATA {
		type = float
		payload = @payloads.ElementAt(@series-1)
	}	

	// *** Rewards ***
	DATA {
		type = List<float>
		rewards = [		400,	500,	600,	700	]
	}
	DATA {
		type = float
		reward = @rewards.ElementAt(@series-1)
	}	

	// ************ PARAMETERS ************	
	PARAMETER {
		name = GeostatWeatherSat
		type = VesselParameterGroup
		define = GeostatWeatherSat
		dissassociateVesselsOnContractCompletion = true
		title = Maintain a geostationary weather satellite in the target orbit for 6 months

		duration = 180d
		
		PARAMETER {
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER {
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER {
			name = HasMeteorologicalPayload
			type = HasResource
			resource = MeteorologicalPayload
			minQuantity = @/payload-0.1
			title = Have a MeteorologicalPayload of at least @/payload units on the craft
			hideChildren = true
		}
		PARAMETER
		{
			name = None
			type = None
			title = Have no other types of payload aboard
			hideChildren = true
			
			PARAMETER {
				name = HasNoCommunicationsPayload
				type = HasResource
				resource = CommunicationsPayload
				title = Have no CommunicationsPayload aboard
				hideChildren = true
			}
			PARAMETER {
				name = HasNoNavigationalPayload
				type = HasResource
				resource = NavigationalPayload
				title = Have no NavigationalPayload aboard
				hideChildren = true
			}
			PARAMETER {
				name = HasNoSoundingPayload
				type = HasResource
				resource = SoundingPayload
				title = Have no SoundingPayload aboard
				hideChildren = true
			}
		}
		PARAMETER {
			name = ReachOrbit
			type = Orbit
			minPeriod = 23h 55m 4s
			maxPeriod = 23h 57m 4s
			maxEccentricity = 0.003
			maxInclination = 0.5
			title = Achieve the target orbit. Circular geosynchronous orbit is 35,786 km above the Earth's surface.
		}	
	}	
	PARAMETER {
		name = VesselPowerCheck
		type = VesselParameterGroup
		vessel = GeostatWeatherSat
		completeInSequence = true
		hideChildren = true
		title = Craft must have power after @/GeostatWeatherSat/duration

		PARAMETER {
			name = HasPower
			type = HasResource
			resource = ElectricCharge
			minQuantity = 1.0
			hideChildren = true
		}
	}
	BEHAVIOUR {
		name = TransferVessel
		type = DestroyVessel
		onState = CONTRACT_SUCCESS
		vessel = GeostatWeatherSat
	}
	BEHAVIOUR {
	name = VesselDestroyed
	type = DialogBox

		DIALOG_BOX {
			title = Vessel Ownership Transferred
			condition = CONTRACT_SUCCESS
			position = CENTER
			width = 0.5

			TEXT {
				text = The contract has been completed successfully. Control of the geostationary weather satellite has been transferred back to meteorological operations.
			}
		}
	}	
}
