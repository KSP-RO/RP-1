CONTRACT_TYPE
{
	name = OrbitPeriRecord
	group = Records
	agent = Federation Aeronautique Internationale

	title = Orbital Altitude Record of @altitude km
	genericTitle = Orbital Altitude Record
	
	description = We want you to set a new orbital altitude record! Enter an orbit with a perigee greater than @altitude km.
	genericDescription = We want you to set a new orbital altitude record!

	synopsis = Set an orbital altitude record of @altitude km.

	completedMessage = Congratulations! You've set a new orbital altitude record!	

	autoAccept = true
	cancellable = false
	declinable = false	
	maxSimultaneous = 1

	targetBody = HomeWorld()
	
	// ************ REWARDS ************
	prestige = Trivial
	rewardReputation = @rewards.ElementAt(@index)
		
	DATA {
		type = List<float>
		altitudes = [	200,	300,	400,	500,	600,	700,	800,	900,	1000,	1250,	1500,	1750,	2000,	10000,	35000 ]
	}
	DATA {
		type = List<float>
		rewards = [		25,		30,		40,		50,		50,		50,		50,		50,		50,		50,		50,		50,		50,		50,		100	 ]
	}	
	DATA {
		type = float
		altitude = @altitudes.ElementAt(@index)
	}	
	DATA {
		type = float
		index = RP0RecordOrbitPeriIndex
	}
	BEHAVIOUR {
		name = IncrementIndex
		type = Expression
		CONTRACT_COMPLETED_SUCCESS {
				RP0RecordOrbitPeriIndex = RP0RecordOrbitPeriIndex + 1
		}
	}

	// ************ REQUIREMENTS ************	
	REQUIREMENT {
		type = Expression
		title = Altitude
		expression = @/index < @/altitudes.Count()
	}	
	REQUIREMENT
	{
		name = Any
		type = Any

		REQUIREMENT {
			name = AcceptContract
			type = AcceptContract
			contractType = first_OrbitUncrewed
			title = Accept @contractType Contract
		}
		REQUIREMENT {
			name = CompleteContract
			type = CompleteContract
			contractType = first_OrbitUncrewed
			title = Complete @contractType Contract
		}
	}

	// ************ PARAMETERS ************	
	PARAMETER {
		name = ReachOrbit
		type = Orbit
		targetBody = @/targetBody
		minPeA = @/altitude * 1000
	}	
}