CONTRACT_TYPE
{
	name = OrbitalFlight1
	title = Orbital Flight (One Crew)
	group = CrewedOrbit

	tag = CrewedOrbitOptional


	description = <b>Program: Crewed Orbit<br>Type: <color=blue>Optional</color></b><br><br>Single-person orbital spacecraft are fairly rare in history but serve an important role in proving future technologies, with Mercury (1962, 1.4 tons, Atlas LV-3B) and Vostok (1961, 4.7 tons, Vostok-K) being the only examples. Design, build, and launch one that remains for @/NoOfOrbits orbits and return the crew safely back to Earth.<b><br><br><color=yellow>NOTE: You can not complete this contract and the Orbital Flight with Maneuvers and 2+ Crew contract at the same time. Attempting to complete both in same flight will automatically fail this one.</color></b>&br;&br;<b>Number of Contracts Completed: @index / unlimited</b>
	
	genericDescription = Launch a crewed spacecraft carrying one person into orbit for a routine mission for the specified duration and return safely home.

	synopsis = Fly a single-person LEO Orbital mission.

	completedMessage = Crew alive and well after the mission--congratulations!

	sortKey = 604

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 0
	maxSimultaneous = 1
	deadline = 0

	targetBody = HomeWorld()


	// ************ REWARDS ************
	prestige = Trivial       // 1.0x
	advanceFunds = 0
	rewardScience = 0
	rewardFunds = 0
	failureFunds = 0
	rewardReputation = 150
	failureReputation = 0 // was @rewardReputation

	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = Any
		type = Any

		REQUIREMENT
		{
			name = ProgramActive
			type = ProgramActive
			program = CrewedOrbitEarly
		}

		REQUIREMENT
		{
			name = ProgramActive
			type = ProgramActive
			program = CrewedOrbit
		}
	}

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_OrbitCrewed
	}

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitalFlight2
		invertRequirement = true
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitalFlight3
		invertRequirement = true
	}
	
	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		tag = CrewedOrbitOptional
		invertRequirement = true
		title = Don't have another active optional crewed orbit contract.
	}

	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		tag = CrewedOrbitRequired
		invertRequirement = true
		title = Don't have an active required crewed orbit contract.
	}
	
	DATA
	{
		type = int
		NoOfOrbits = 8
		title = How many orbits?
	}
	DATA
	{
		type = Double
		DurDouble = 5400 * @NoOfOrbits
		title = How much time in orbit?
	}
	DATA
	{
		type = Duration
		title = Duration
		Duration = @DurDouble
		title = Total Duration
	}
	
	DATA
	{
		type = int
		index = $OrbitalFlight1_Count + 0
	}

	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
			OrbitalFlight1_Count = $OrbitalFlight1_Count + 1
		}
	}

	// ************ PARAMETERS ************
	
	PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup
		title = Crewed orbital
	
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a new vessel
			hideChildren = true
		}

		PARAMETER
		{
			name = OneCrew
			type = HasCrew
			minCrew = 1
			crewOnly = true
			title = Have 1 crewmember on board
			hideChildren = true
			disableOnStateChange = true
		}

		PARAMETER
		{
			name = HasNonReentryRatedParts
			type = PartValidation
			hideChildren = true
			title = Vessel has no parts with the tag "not rated for reentry"

			NONE
			{
				partModule = ModuleNonReentryRated
			}
		}

		PARAMETER
		{
			name = Orbit
			title = Stay in specified orbit for the duration
			type = Orbit
			minPeA = 150000 + Round(Random(0, 55000), 10000)
			maxApA = 400000 + Round(Random(-100000, 200000), 1000)
			targetBody = HomeWorld()
			disableOnStateChange = true

			PARAMETER
			{
				name = Duration
				type = Duration
				duration = @/Duration
				preWaitText = Reach specified orbit
				waitingText = Orbiting...
				completionText = Orbits completed, you may fire retros when ready.
			}
		}

		PARAMETER
		{
			name = ReturnHome
			type = RP1ReturnHome
			title = Return home safely
			hideChildren = true
			completeInSequence = true
		}
	}
}
