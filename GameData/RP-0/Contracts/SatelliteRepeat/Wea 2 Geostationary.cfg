CONTRACT_TYPE
{
	name = GeostatWeatherSat
	title = Geostationary Weather Satellite (Series @series)
	genericTitle = Geostationary Weather Satellite
	group = EarlySatellites

	description = A Sun-synchronous orbit is a geocentric orbit that combines altitude and inclination it is an orbit arranged so that it precesses through one complete revolution each year, thus the satellite passes over any given point of the planet's surface at the same local solar time. Polar orbiting weather satellites are launched in sun-synchronous orbits that allow them to observe the same area on Earth twice a day with the same general lighting. The images they can return are of much higher resolution than geostationary satellites because their orbit is much lower. Place several series of increasingly advanced weather satellites in orbit. The payload required on the satellite will increase with each series.<br><b>The satellite will be destroyed upon completion of the contract. This simulates transfer of the payload to operational control after being placed sucessfully in orbit.</b><br><b>Note that sun-synchronous orbits are slightly retrograde, so your launch azimuth will be to the north-northwest. It takes more delta-v to launch into a sun-synchronous orbit than a normal polar orbit.</b><br>This series contains @length contracts, of which @seriesIndex have been completed.<br>Real life examples: SMS / GOES
	
	genericDescription = Put a weather satellite into sun-synchronous orbit.

	synopsis = Put a weather satellite with @payload units of payload into geostationary orbit

	completedMessage = Success! The satellite is functional and ready for operation.

	sortKey = 502
	
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 22
	maxSimultaneous = 1
	deadline = 730	// 2 years

	targetBody = HomeWorld()	

	// ************ REWARDS ************
	prestige = Trivial
	rewardReputation = @reward
	advanceFunds = @rewardReputation * 100
	failureReputation = @advanceFunds * 0.0005

	DATA {
		type = float
		index = RP0GeostatWeatherIndex
	}	
	DATA {
		type = List<float>
		serieses = [1, 1, 1, 1, 1, 1,		2, 2, 2, 2,	2, 2,		3, 3, 3, 3,	3, 3,		4, 4, 4, 4 ]
	}	
	DATA {
		type = float
		series = @serieses.ElementAt(@index)
	}	
	DATA {
		type = List<float>
		seriesIndices = [0, 1, 2, 3, 4, 5,		0, 1, 2, 3,	4, 5,		0, 1, 2, 3,	4, 5,		0, 1, 2, 3 ]
	}	
	DATA {
		type = float
		seriesIndex = @seriesIndices.ElementAt(@index)
	}	
	DATA {
		type = List<float>
		payloads = [	300,	400,	1000,	1500	] // SMS/GOES 1-3, GOES 4-7, GOES 11-12, GOES 13-15
	}
	DATA {
		type = List<float>
		lengths = [		6,		6,		6,		4	]
	}
	DATA {
		type = List<float>
		rewards = [		400,	500,	600,	700	]
	}
	DATA {
		type = float
		payload = @payloads.ElementAt(@series-1)
	}	
	DATA {
		type = float
		length = @lengths.ElementAt(@series-1)
	}	
	DATA {
		type = float
		reward = @rewards.ElementAt(@series-1)
	}	
	BEHAVIOUR {
		name = IncrementIndex
		type = Expression
		CONTRACT_COMPLETED_SUCCESS {
			RP0GeostatWeatherIndex = RP0GeostatWeatherIndex + 1
		}
	}	

	// ************ REQUIREMENTS ************
	REQUIREMENT	{
		name = CompleteContract
		type = CompleteContract
		contractType = EarlyWeatherSat
		minCount = 8
		title = Complete @contractType Contract
	}
	REQUIREMENT	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_GeostatCom
		title = Complete @contractType Contract
	}

	// ************ PARAMETERS ************	
	PARAMETER {
		name = GeostatWeatherSat
		type = VesselParameterGroup
		define = GeostatWeatherSat
		dissassociateVesselsOnContractCompletion = true
		title = Maintain a geostationary weather satellite in the target orbit for 6 months

		duration = 180d
		
		PARAMETER {
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER {
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER {
			name = HasWeatherSatPayload
			type = HasResource
			resource = WeatherSatPayload
			minQuantity = @/payload-0.1
			title = Have a WeatherSatPayload of at least @/payload units on the craft
			hideChildren = true
		}
		PARAMETER {
			name = ReachOrbit
			type = Orbit
			minPeriod = 23h 55m 4s
			maxPeriod = 23h 57m 4s
			maxEccentricity = 0.003
			maxInclination = 0.5
			title = Achieve the target orbit. Circular geosynchronous orbit is 35,786 km above the Earth's surface.
		}	
		PARAMETER {
			name = HasPower
			type = HasResource
			resource = ElectricCharge
			minQuantity = 1.0
			title = Craft must have power for at least 180 days
		}
	}	
	BEHAVIOUR {
		name = TransferVessel
		type = DestroyVessel
		onState = CONTRACT_SUCCESS
		vessel = GeostatWeatherSat
	}
	BEHAVIOUR {
	name = VesselDestroyed
	type = DialogBox

		DIALOG_BOX {
			title = Vessel Ownership Transferred
			condition = CONTRACT_SUCCESS
			position = CENTER
			width = 0.5

			TEXT {
				text = The contract has been completed successfully. Control of the geostationary weather satellite has been transferred back to meteorological operations.
			}
		}
	}	
}
