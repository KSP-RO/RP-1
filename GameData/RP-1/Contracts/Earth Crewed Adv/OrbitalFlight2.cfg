CONTRACT_TYPE
{
	name = OrbitalFlight2
	title = Orbital Flight with Maneuvers and 2+ Crew
	group = CrewedOrbitAdv

	tag = CrewedOrbitOptional

	description = <b>Program: Advanced Crewed Orbit<br>Type: <color=blue>Optional</color></b><br><br>Putting two people into space in the same capsule opens the door to a range of new activities and opportunities. Such a spacecraft must remain in orbit with its crew @/DurationText days and return them safely to Earth. Only two spacecraft were ever specifically created for this task, the Soviet Voskhod 2, a refit of the 3-seat Voskhod 1 (1965, 5.7 tons, modified Molniya) and the U.S. Gemini (1965, 3.2 - 3.8 tons, Gemini-Titan II).<br><br><color=yellow>NOTE: Once you've completed this contract, Orbital Flight (One Crew) contracts will become unavailable. If you have both this and the Orbital Flight (One Crew) contract accepted, completing this will cause that contract to fail.</color>&br;&br;<b>Number of Contracts Completed: @index / unlimited</b>

	genericDescription = Launch a spacecraft with two people onboard into orbit for a routine mission for the specified number of days, perform the required orbit change, and then return safely home.

	synopsis = Fly a two-plus-person LEO Orbital mission.

	completedMessage = Crew alive and well after the mission--congratulations!

	sortKey = 605

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 0
	maxSimultaneous = 1
	deadline = 0

	targetBody = HomeWorld()


	// ************ REWARDS ************
	prestige = Trivial       // 1.0x
	advanceFunds = 0
	rewardScience = 0
	rewardFunds = 0
	failureFunds = 0
	rewardReputation = 200
	failureReputation = 0 // was @rewardReputation

	// ************ REQUIREMENTS ************
	
	REQUIREMENT
	{
		name = Any
		type = Any

		REQUIREMENT
		{
			name = ProgramActive
			type = ProgramActive
			program = CrewedOrbitAdv
		}

		REQUIREMENT
		{
			name = All
			type = All

			REQUIREMENT
			{
				name = ProgramActive
				type = ProgramActive
				program = CrewedOrbit
			}

			REQUIREMENT
			{
				name = CompleteContract
				type = CompleteContract
				contractType = OrbitalFlight1
			}
		}
	}
	
	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		tag = CrewedOrbitOptional
		invertRequirement = true
		title = Don't have another active optional crewed orbit contract.
	}

	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		tag = CrewedOrbitRequired
		invertRequirement = true
		title = Don't have an active required crewed orbit contract.
	}
	
	DATA
	{
		type = Duration
		title = Duration
		FirstDuration = 60h
		title = How long in first orbit?
	}
	
	DATA
	{
		type = int
		startPeA = 150000 + Round(Random(0, 55000), 10000)
		title = Starting PeA
	}
	
	DATA
	{
		type = int
		startApA = 225000 + Round(Random(0, 105000), 25000)
		title = Starting ApA
	}
	
	DATA
	{
		type = double
		SecondDurationDouble = Round(Random(86400, 518400), 86400)
		title = How long in 2nd orbit?
	}
	
	DATA
	{
		type = Duration
		title = Duration
		SecondDuration = @SecondDurationDouble
	}
	
	DATA
	{
		type = int
		endApA = @startApA + Round(Random(150000, 800000), 25000)
		title = 2nd Orbit ApA
	}
	
	DATA
	{
		type = double
		DurationText = (@FirstDuration + @SecondDuration) / 86400
		title = Total Duration of Mission
	}
	
	DATA
	{
		type = int
		index = $OrbitalFlight2_Count + 0
	}

	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
			OrbitalFlight2_Count = $OrbitalFlight2_Count + 1
		}
	}

	// ************ PARAMETERS ************
	
	PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup
		title = Crewed orbital
		completeInSequence = true
	
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a new vessel
			hideChildren = true
		}

		PARAMETER
		{
			name = TwoCrew
			type = HasCrew
			minCrew = 2
			crewOnly = true
			title = Have 2 crewmembers on board
			hideChildren = true
			disableOnStateChange = true    // Probably to prevent the timers from getting reset when EVAing a naut
		}

		PARAMETER
		{
			name = Orbit
			title = Complete orbit 1
			type = Orbit
			minPeA = @/startPeA
			minApA = @/startApA
			maxApA = @minApA + 100000
			targetBody = HomeWorld()
			disableOnStateChange = true

			PARAMETER
			{
				name = Duration
				type = Duration
				duration =  @/FirstDuration
				preWaitText = Stay in specified orbit for
				waitingText = Orbiting...
				completionText = Orbits completed, you may alter your orbit now.
			}
		}

		PARAMETER
		{
			name = Orbit2
			title = Complete orbit 2
			type = Orbit
			minPeA = @/startPeA
			minApA = @/endApA
			maxApA = @minApA + 200000
			targetBody = HomeWorld()
			disableOnStateChange = true
			
			PARAMETER
			{
				name = Duration2
				type = Duration
				duration =  @/SecondDuration
				preWaitText = Stay in specified orbit for
				waitingText = Orbiting...
				completionText = Orbits completed, you may fire retros when ready.
			}
		}

		PARAMETER
		{
			name = ReturnHome
			type = RP1ReturnHome
			title = Return home safely
			hideChildren = true
			completeInSequence = true
		}
	}
}
