CONTRACT_TYPE
{
	name = CargoPlanesOptional_New
	group = GeneralPlanes
	title = Cargo Transport Contract
	genericTitle = Cargo Transport Contract
	description = <b>Program: GeneralPlane<br>Type: <color=blue>Optional</color></b><br><br>Flying cargo planes may aid the the development of your space center. Carry @/missionPayload.Print() thousand units of monitoring instrumentation to the specified downrange, then Land the plane safely. @RP0:soundingTankAdvice<br><br>This is a series of @maxCompletions contracts, of which @index have been completed.
	genericDescription = Put new payload to certain downrange and recover the payload safely.
	synopsis = Launch and recover @/missionPayload.Print() thousand units of payload from over@/missionDistance.Print() km. 
	completedMessage = Well done! Our construction workers are desperate to get the payloads off.

	sortKey = 114

	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 20
	maxSimultaneous = 1
	deadline = 0
	cancellable = true
	declinable = false
	autoAccept = false
	
	targetBody = HomeWorld()

	// ************ REWARDS ************
	prestige = Trivial       // 1.0x
	advanceFunds = 0
	rewardScience = 0
	rewardFunds = 800
	failureFunds = 0
	rewardReputation = Round(25 * @rewardFactor, 1)/50
	failureReputation = 0 // was @rewardReputation
	
	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = ProgramActive
		type = ProgramActive
		program = GeneralPlane
	}
	DATA
	{
		type = int
		antiGrindCompletion = $SRD_Completion == 0 ? (UniversalTime() - @RP0:expectedDays_CargoPlanes * 86400) : $SRD_Completion
	}

	DATA
	{
		type = float
		elapsedDays = Round((UniversalTime() - @antiGrindCompletion) / 86400.0)
		rewardFactor = Log(Max(@elapsedDays / @RP0:expectedDays_CargoPlanes * 3 - 0.05, 1), 2) / 1.5607
		rewardFactorPercent = Round(@rewardFactor * 100, 1)
	}


	// The global modifiers for all sounding rockets(which this cargo contract use) are stored in the main Groups.cfg file in the root Contracts folder
	DATA
	{
		// We want to set this to lag 1 level behind the current difficulty level
		title = Sets the current difficulty level based on the completed mission increment
		type = int
		cargoDifficultyLevel = Min(Max(($RP0_DistanceDifficulty - 1), 0), @RP0:maxDistanceDifficultyLevels)
	}

	DATA
	{
		title = These are the payouts for each of the difficulty levels
		type = float
		currentPayment = @RP0:distanceBasePayment + (@cargoDifficultyLevel * @RP0:distancePaymentPerLvl)
	}
	DATA
	{
		type = int
		index = $CargoPlaneOptional_count
	}

	DATA
	{
		title = Generate the actual payload for this specific mission
		type = float
		totalPayload = 500
	}

	DATA
	{
		title = Payload Rounded Off
		type = int
		missionPayload = int(@totalPayload)
	}

	DATA
	{
		title = Generate the actual payment amount for this specific mission
		type = float
		calcPayout = @currentPayment / 2.4
	}

	DATA
	{
		title = Calculate the distance for this mission
		type = float
		calcDistance = (@calcPayout - @RP0:distanceBaseLaunchValue) / (@RP0:distanceMod * (Pow(@totalPayload / @RP0:payloadDivisor, @RP0:distancePayloadExponent) + @RP0:payloadAdder))
	}

	DATA
	{
		title = Generate the actual distance for this specific mission
		type = int
		missionDistance = int(Round(@calcDistance, 10))
		missionDistanceMeters = @missionDistance * 1000
	}

	// ************ REQUIREMENTS ************
	
	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		tag = exclude_SoundingRocket
		invertRequirement = true
	}
	
	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		tag = exclude_SoundingDownrange
		invertRequirement = true
	}

	BEHAVIOUR
	{
		name = SetDistanceDifficulty
		type = Expression

		CONTRACT_OFFERED
		{
			RP0_DistanceDifficulty = $RP0_DistanceDifficulty + 0
			RP0_DistanceDifficulty = Max(1, $RP0_DistanceDifficulty)
		}
	}

	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression

		CONTRACT_OFFERED
		{
			SRD_Completion = ($SRD_Completion + 0) == 0 ? (UniversalTime() - @RP0:expectedDays_CargoPlanes * 86400) : ($SRD_Completion + 0)
		}
		CONTRACT_COMPLETED_SUCCESS
		{
			SRD_Completion = UniversalTime()
		}
	}

	PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup
		title = Reach @/missionDistance.Print() km downrange with @/missionPayload.Print() units of Sounding Payload.

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a new vessel
			hideChildren = true
		}
„ÄÅ
		PARAMETER
		{
			name = HasSoundingPayload
			type = HasResource
			resource = SoundingPayload
			minQuantity = @/missionPayload*1000 - 0.1 
			title = Have a SoundingPayload of at least @/missionPayload.Print() thousand units on the craft
			hideChildren = true
		}

		PARAMETER
		{
			name = ReachDistance
			type = DownrangeDistance
			distance = @/missionDistanceMeters
			title = Reach a downrange distance of at least @/missionDistance.Print() km
		}
	}
}
