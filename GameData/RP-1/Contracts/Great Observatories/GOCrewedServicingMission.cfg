CONTRACT_TYPE
{
	name = CrewRotationStation
	title = Rotate the Crew of @/targetVessel1
	genericTitle = Rotate the Crew of Your Space Station

	group = EarthSpaceStation
	agent = Stations

	description = <b>Program: Great Observatories<br>Type: <color=green>Required</color></b><br><br>Our crew has been up on our Space Station for a extended stay. We want to continue our research, but need to bring that crew home. Send a new crew to your Space Station and bring the existing crew home.

	synopsis = Rotate the Crew of @/targetVessel1

	completedMessage = Mission Success! Our new crew has settled into the station and will continue our research and the old crew has returned home safely.

	sortKey = 1503

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 0
	maxSimultaneous = 1
	deadline = 0

	targetBody = @/targetBody1

	prestige = Trivial       // 1.0x
	advanceFunds = 0
	rewardScience = 0
	rewardReputation = 40 // placeholder
	rewardFunds = 0
	failureReputation = 0 // was @rewardReputation
	failureFunds = 0

	// ************ REQUIREMENTS ************
  REQUIREMENT
	{
		name = ProgramActive
		type = ProgramActive
		program = GreatObservatories
	}
 
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = GOLargeSpaceTelescope
	}

	// ************ DATA ************

	DATA
	{
		type = Vessel
		requiredValue = true
		targetVessel1 = AllVessels().Where(v => v.VesselType() == Station && v.CrewCount()>0).Random()
		title = Must have a station with crew on board
	}
	DATA
	{
		type = CelestialBody
		requiredValue = true
		targetBody1 = @/targetVessel1.CelestialBody()
		hidden = true
		title = Get the target body
	}
	DATA
	{
		type = List<Kerbal>
		targetKerbals = @targetVessel1.Crew()
		hidden = true
		title = Get your list of Kerbals to return
	}

	// ************ PARAMETERS ************

	PARAMETER
	{
		name = SSCrewRotation
		type = VesselParameterGroup
		title = Send a servicing crew

    PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 3
			crewOnly = true
			title = Bring a minimum crew of @minCrew
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
      trait = Engineer
			minCrew = 2
			crewOnly = true
			title = Have at least @minCrew engineers on board
			hideChildren = true
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = HasDockingPort
			type = PartValidation
			partModule = ModuleDockingNode
			title = Vessel must have a docking port
			hideChildren = true
		}
		PARAMETER
		{
			name = DockWithTelescope
			type = Docking
			vessel = @/targetVessel1
			title = Dock with @/targetVessel1
			hideChildren = true
			disableOnStateChange = true
		}
    PARAMETER
    {
      name = HasResource
      type = HasResource
      resource = TelescopePayload
      minQuantity = 1 // placeholder, should be at least a few hundred kg
      title = Bring @minQuantity units of TelescopePayload as replacement instruments
    }
    PARAMETER
		{
			name = HasUpgradedExperiment
			type = PartValidation
			title = Upgrade the telescope's instrumentation to the next tier of experiment
			MODULE
      {
        name = Experiment

        label = New Telescope Experiment
        experimentID = RP0BasicSpaceTelescope3
      }
			hideChildren = true
		}
	}

	PARAMETER
	{
		name = SSCrewReturn
		type = VesselParameterGroup
		title = Bring the crew home!

		PARAMETER
		{
			name = ReturnHome
			type = RP1ReturnHome
			title = Return crew home safely
			hideChildren = true
			completeInSequence = true
		}

		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			kerbal = @/targetKerbals
		}
	}
}
