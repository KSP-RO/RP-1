CONTRACT_TYPE
{
	name = CrewedSupersonic
	group = X-Planes

	title = X-Planes (Supersonic)

	description = Design, build and fly a crewed aircraft to maintain @VesselGroup/HoldSituation/minSpeed meters per second then return home safely.&br;The reward of this contract will slowly increase over time but will be reset to 0 after each completion.&br;<b>Current reward is at @rewardFactorPercent % of it's nominal value. Elapsed/Expected Days: @elapsedDays / @expectedDays</b>
	genericDescription = Design, build and fly a crewed aircraft to maintain a specific altitude and speed then return home safely.

	synopsis = Fly a crewed aircraft to maintain @VesselGroup/HoldSituation/minSpeed m/s and hold, then return safely.

	completedMessage = Congratulations on a successful flight!

	deadline = 365  // 1 year
	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 1
	maxExpiry = 1

	targetBody = HomeWorld()

	maxCompletions = 0
	maxSimultaneous = 1
	prestige = Trivial

	// reward block
	advanceFunds = Round((700.0 + 2.5 * @VesselGroup/HoldSituation/minSpeed) * @RP0:globalHardContractMultiplier * @rewardFactor, 100)
	rewardFunds = Round(@advanceFunds + 1200.0 * @rewardFactor, 100)
	failureFunds = @advanceFunds * 0.5
	rewardReputation = 1
	failureReputation = 1
	
	DATA
	{
		type = int
		antiGrindCompletion = $XPSS_Completion == 0 ? (UniversalTime() - @expectedDays * 86400) : $XPSS_Completion
	}

	DATA
	{
		type = float
		expectedDays = 90

		elapsedDays = Round((UniversalTime() - @antiGrindCompletion) / 86400.0)
		rewardFactor = Log(Max(@elapsedDays / @expectedDays * 3 - 0.05, 1), 2) / 1.5607
		rewardFactorPercent = Round(@rewardFactor * 100, 1)
	}

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = BreakSoundBarrier
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_OrbitCrewed
		invertRequirement = true
	}

	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression
		
		CONTRACT_OFFERED
		{
			XPSS_Completion = ($XPSS_Completion + 0) == 0 ? (UniversalTime() - 90 * 86400) : ($XPSS_Completion + 0)
		}
		CONTRACT_COMPLETED_SUCCESS
		{
			XPSS_Completion = UniversalTime()
		}
	}
	
	PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup
		title = Maintain between @HoldSituation/minSpeed m/s and @HoldSituation/maxSpeed between @HoldSituation/minAltitude and @HoldSituation/maxAltitude with a crewed aircraft.
		define = supersonicCraft
		
		PARAMETER
		{
			name = Has Crew
			type = HasCrew
			minCrew = 1
			maxCrew = 99
			title = Have at least 1 crewmember on board
			hideChildren = true
		}
			
		PARAMETER
		{
			name = HoldSituation
			type = ReachState
			minSpeed = Round(341 + Random(0, 341), 5)
			maxSpeed = @minSpeed + 200
			minAltitude = Round(Random(11000, 13000), 25)
			maxAltitude = @minAltitude + 2000
			situation = FLYING
			
			title = Hold (@minSpeed to @maxSpeed) m/s at between @minAltitude and @maxAltitude meters.
			
			disableOnStateChange = true
			
			PARAMETER
			{
				name = Duration
				type = Duration
				duration = 3m
				preWaitText = Reach specified speed.
				waitingText = Testing highspeed flight
				completionText = Flight completed, you are cleared to land.
			}
		}
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
			completeInSequence = true
		}
	}
}
