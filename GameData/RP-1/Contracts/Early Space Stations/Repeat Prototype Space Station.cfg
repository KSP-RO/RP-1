CONTRACT_TYPE
{
	name = prototype_spaceStation_launch
	title = Prototype Space Station
	group = EarlyEarthSpaceStation
	agent = Stations

	description = <b>Program: Earth Space Station<br>Type: <color=blue>Optional</color></b><br><br>After successfully launching your first Space Station, it is now time to launch another. Launch a Space Station with @/crewRequired crew, and have them stay on board to accumulate the next month worth of Long Term Habitation experimentation.&br;&br;<b>Number of Phases Completed: @/index / @/maxCompletions</b>

	genericDescription = Design, build, and launch a new space station with the specified crew into Earth orbit for the listed duration. 

	synopsis = Launch a space station with the specified requirements

	completedMessage = Congratulations! This prototype space station has met its requirements!

	sortKey = 1502

	cancellable = true
	declinable = false
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 4
	maxSimultaneous = 1
	deadline = 0

	targetBody = HomeWorld()

	// ************ REWARDS ************
	
	prestige = Trivial       // 1.0x
	advanceFunds = 0
	rewardScience = 0
	rewardReputation = 250
	rewardFunds =  0
	failureReputation = 0 // was @/rewardReputation
	failureFunds = 0

	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = ProgramActive
		type = ProgramActive
		program = EarlyEarthSpaceStation
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_spaceStation
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = CollectProtoStationScience
		invertRequirement = true
		
	}
	REQUIREMENT
	{
	    name = Expression
	    type = Expression
	    title = Less than 4 step completions
	    expression = $RepeatProtoSpaceStation_Count < 4
	}	
	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		contractType = supplyProtoStation
		invertRequirement = true
	}

	DATA
	{
		type = List<float>
		durationMultiplier = [1,1,1,2]
		experimentList = [0.3332,0.4998,0.6664,0.9]
	}
	DATA
	{
		type = float
		durationText = 30 * @/durationMultiplier.ElementAt(@/index)
	}
	DATA
	{
		type = float 
		experimentCompletion = @/experimentList.ElementAt(@/index)
	}
	DATA
	{
		type = List<int>
		crewList = [2,2,3,3]
	}
	DATA
	{
		type = int
		index = $RepeatProtoSpaceStation_Count + 0
		crewRequired = @/crewList.ElementAt(@/index)
	}
	
	// ************ PARAMETERS ************
	
	PARAMETER
	{
		name = vesselGroupLaunch
		type = VesselParameterGroup
		title = Launch a Space Station with the required parameters
		define = prototypeSpaceStation
		disableOnStateChange = true
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a new Station
			hideChildren = true
		}
		PARAMETER
		{
			name = HasCapacity
			type = HasCrewCapacity
			minCapacity = @/crewRequired
			title = Space for at least @/crewRequired crew
			hideChildren = true
			disableOnStateChange = false
		}
		PARAMETER
		{
		    name = researchPayloadCapacity //make sure you can hold at least 30 days of research payload
		    type = HasResourceCapacity
			
			resource = ResearchPayload
			minQuantity = 750
		}	
		PARAMETER
		{
			name = Orbit
			type = Orbit
			minPeA = 250000
			maxApA = 500000
			targetBody = HomeWorld()
			title = Reach orbit with a perigee greater than 250 km and an apogee less than 500 km
			hideChildren = true
		}
	}
	PARAMETER
	{
		name = stayOnStation
		type = VesselParameterGroup
		title = Keep at least @/crewRequired crew aboard the station and conduct multi-week habitation analysis for @/durationText days.
		vessel = prototypeSpaceStation
		notes = You can work on other contracts while your crew are working. You are safe to return to Mission Control
		completeInSequence = true
		disableOnStateChange = true
		
		PARAMETER
		{
			name = HasCrew
			type  = HasCrew
			minCrew = @/crewRequired
			title = Has at least @/crewRequired crew members on the station.
			hideChildren = true
		}	
		PARAMETER
		{
			name = Orbit
			type = Orbit
			minPeA = 250000
			maxApA = 500000
			targetBody = HomeWorld()
			disableOnStateChange = false
			title = Remain in a stable orbit
		}
		PARAMETER
		{
			name = Multi-Week Habitation Analysis
			type = RP1CollectScience
			title = Conduct Multi-Week Habitation Analysis of your astronauts for @/durationText days
			notes = This experiment requires 750 units of Research Payload every 30d//Placeholder value.
			targetBody = HomeWorld()
			situation = InSpaceLow
			experiment = RP0longDurationHabit1
			fractionComplete = @/experimentCompletion
			completeInSequence = true
		}
	}
}
