CONTRACT_TYPE
{
	name = SuborbitalTestFlight
	title = Suborbital Test Flight (Uncrewed)
	group = CrewedOrbit

	tag = CrewedOrbitOptional

	description = <b>Program: Crewed Orbit<br>Type: <color=blue>Optional</color></b><br><br>Before putting a crew in a capsule to send into space, it is a good idea to test the capsule on an uncrewed flight. Send a Crew Capsule, WITH NO CREW IN IT, above @VesselGroup/ReachAlt/minAltitude meters to satisfy the requirements of this mission. &br;&br;<b>Number of Contracts Completed: @index / @maxCompletions</b>
	
	genericDescription = Launch a crew-capable spacecraft, WITH NO CREW IN IT, on a test flight above the required height and return safely home.

	synopsis = Send an uncrewed test flight of a crewed vessel on a suborbital flight

	completedMessage = Congratulations! The capsule has proven to work!

	sortKey = 602

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 3
	maxSimultaneous = 1
	deadline = 0

	targetBody = HomeWorld()


	// ************ REWARDS ************
	prestige = Trivial       // 1.0x
	advanceFunds = 0
	rewardScience = 0
	rewardFunds = 0
	failureFunds = 0
	rewardReputation = 40
	failureReputation = 0 // was @rewardReputation

	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = Any
		type = Any

		REQUIREMENT
		{
			name = ProgramActive
			type = ProgramActive
			program = CrewedOrbitEarly
		}

		REQUIREMENT
		{
			name = ProgramActive
			type = ProgramActive
			program = CrewedOrbit
		}
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_OrbitRecover
		title = Completed Reach Orbital Speed & Return Safely to Earth Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = CrewedSuborbital
		invertRequirement = true
	}

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitalTestFlight
		invertRequirement = true
	}

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitalTestFlightAnimal
		invertRequirement = true
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_OrbitCrewed
		invertRequirement = true
	}

	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		tag = CrewedOrbitOptional
		invertRequirement = true
		title = Don't have another active optional crewed orbit contract.
	}

	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		tag = CrewedOrbitRequired
		invertRequirement = true
		title = Don't have an active required crewed orbit contract.
	}

	DATA
	{
		type = int
		index = $SuborbitalTestFlight_Count + 0
	}

	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression

		CONTRACT_COMPLETED_SUCCESS
		{
			SuborbitalTestFlight_Count = $SuborbitalTestFlight_Count + 1
		}
	}

	// ************ PARAMETERS ************
	
	PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup
		title = Suborbital flight

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a new vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = OneCrewCapacity
			type = HasCrewCapacity
			minCapacity = 1
			title = Have space for at least 1 crewmember on board
			hideChildren = true
			disableOnStateChange = false
		}
		PARAMETER
		{
			name = NoUnpressurized
			type = PartValidation
			title = Cockpit is pressurized and space-capable
			hideChildren = true
			NONE
			{
				partModule = ModuleUnpressurizedCockpit
			}
		}
		
		PARAMETER
		{
			name = NoCrew
			type = HasCrew
			maxCrew = 0
			minCrew = 0
			title = Uncrewed Vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = ReachAlt
			type = ReachState
			minAltitude = Round(Random(140000, 200000), 10000)
			disableOnStateChange = true
			title = Reach @minAltitude meters
			hideChildren = true
		}
		PARAMETER
		{
			name = ReturnHome
			type = RP1ReturnHome
			title = Return home safely
			hideChildren = true
			completeInSequence = true
		}
	}
}
