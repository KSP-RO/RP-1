CONTRACT_TYPE
{
	name = SoundingRocketFilm
	group = SuborbRocketResearch
	
	tag = exclude_SoundingRocket
	
	title = First Low Space Film Return
	genericTitle = First Low Space Film Return
	description = <b>Program: Suborbital Research<br>Type: <color=green>Required</color></b><br><br>V-2s launched by the U.S. from the White Sands Proving Grounds returned the first images of Earth from space. We need you to test emerging high-altitude photography technology. Design, build, and launch a rocket with a payload of bulky testing and stabilization equipment that will recover film imagery from just above the edge of space. @RP0:avionics50sAdvice<br><br><color=white><b>After this contract has been completed, 'Low Space Film Return' contract will become available.</b></color>
	genericDescription = Launch a film camera downrange at low altitude and recover it.
	completedMessage = Excellent! Both the media and our scientists will be excited to see these lovely shots.
	synopsis = Launch a rocket with an early film camera above @/altitudeKm km and cover a downrange distance of @targetDistanceKM km, then return the film camera.

	sortKey = 111

	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 1
	maxSimultaneous = 1
	deadline = 0
	cancellable = true
	declinable = false
	autoAccept = false
	
	targetBody = HomeWorld()

	// ************ REWARDS ************
	prestige = Trivial       // 1.0x
	advanceFunds = 0
	rewardScience = 0
	rewardFunds = 0
	failureFunds = 0
	rewardReputation = 35
	failureReputation = 0 // was @rewardReputation

	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = ProgramActive
		type = ProgramActive
		program = SuborbRocketResearch
	}

	REQUIREMENT
	{
		name = CompleteKarman
		type = CompleteContract
		contractType = KarmanLine
	}
	
	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		tag = exclude_SoundingRocket
		invertRequirement = true
	}
	
	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		tag = exclude_SoundingDownrange
		invertRequirement = true
	}

	DATA
	{
		type = List<float>
		altitudesKm = [ 100 ]
	}

	DATA
	{
		type = List<float>
		distanceKm = [ 200 ]
	}
		
	DATA
	{
		type = int
		index = 0
	}
	
	DATA
	{
		type = float
		altitudeKm = @altitudesKm.ElementAt(@index)
	}
	
	DATA
	{
		type = float
		targetDistanceKM = @distanceKm.ElementAt(@index)
	}
	
	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression
		CONTRACT_OFFERED
		{
			SoundingFilm_Count = $SoundingFilm_Count + 0
			SoundingFilm_Completion = ($SoundingFilm_Completion + 0) == 0 ? (UniversalTime() - 90 * 86400) : ($SoundingFilm_Completion + 0)
		}
		CONTRACT_COMPLETED_SUCCESS
		{
			SoundingFilm_Count = $SoundingFilm_Count + 1
			SoundingFilm_Completion = UniversalTime()
		}
	}

	PARAMETER
	{
		name = MissionParameters
		type = VesselParameterGroup
		title = Reach @/altitudeKm km of altitude and @/targetDistanceKM km downrange with a film camera, then recover that sample

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a new vessel
			hideChildren = true
		}

		PARAMETER
		{
			name = BuiltAtVAB
			type = VesselBuiltAt
			builtAt = VAB
		}

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}

		PARAMETER
		{
			name = HasCamera
			type = PartValidation
			minCount = 1
			part = science.module
			title = Include a early film camera on the craft
			hideChildren = true
		}

		PARAMETER
		{
			name = HaveAvionics
			type = VesselParameterGroup
			title = Maintain sufficient avionics for the first 50s of flight (do not lose control)
			disableOnStateChange = true
			hideChildren = true

			PARAMETER
			{
				name = AvionicsCheck
				type = AvionicsCheck
				continuousControlRequired = true
				hideChildren = true
			}

			PARAMETER
			{
				name = ReachState
				type = ReachState
				situation = FLYING
				minRateOfClimb = 10
				hideChildren = true
			}
			
			PARAMETER
			{
				name = Duration
				type = Duration
				duration = 50s
				completeInSequence = true
				hideChildren = true
			}
		}

		PARAMETER
		{
			name = SpaceAltitude
			type = ReachState
			minAltitude = @/altitudeKm * 1000
			disableOnStateChange = true
			title = Reach an altitude of at least @/altitudeKm km
		}
		
		PARAMETER
		{
			name = ReachDistance
			type = DownrangeDistance
			distance = @/targetDistanceKM * 1000
			title = Reach a downrange distance of at least @/targetDistanceKM km
		}
	}

	PARAMETER
	{
		name = ReturnHome
		type = RP1ReturnHome
		title = Return home safely
		hideChildren = true
	}
}
