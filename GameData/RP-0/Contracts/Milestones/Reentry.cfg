CONTRACT_TYPE
{
    name = first_OrbitRecover
	group = Milestones
	
    title = Successful Reentry
    
	description = Reentry is brutally hot and dangerous. However, it can be survivable with the right technology and equipment. We want you to design, build, and launch a craft that can survive a reentry and make a soft landing or splashdown on Earth. Note that orbital-speed suborbital flights are acceptable as well. You may complete this contract up to three times.
    
	synopsis = Recover a craft from an orbital-velocity descent.
	
	completedMessage = Congratulations! The craft has survived reentry, and engineers are examining it very keenly indeed.
	
	agent = Federation Aeronautique Internationale
	
    targetBody = HomeWorld()
	
	minExpiry = 1
	maxExpiry = 7
	maxCompletions = 3 // so it's not a fluke
	maxSimultaneous = 1
	deadline = 365 // 1 year
	cancellable = true
	declinable = true
	autoAccept = false
	prestige = Significant
    
	// reward block
	advanceFunds = 50000.0
	rewardReputation = 10.0
	rewardFunds = 50000.0
	rewardScience = 1.0
	failureReputation = 10.0
	failureFunds = 15000.0
	
	weight = 500.0
	
	REQUIREMENT
	{
		name = ReqSurvivability
		type = CanResearchTech
		tech = survivability
	}
	REQUIREMENT
	{
		name = CompleteKarmanUncrewed
		type = CompleteContract
		contractType = first_OrbitUncrewed
	}
	
    PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup
		title = Recover a craft from orbit.
		define = firstReentrySpacecraft
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
		}
		PARAMETER
		{
			name = HasNoCrew
			type = HasCrew
			maxCrew = 0
			minCrew = 0
		}
		PARAMETER
		{
			name = OrbitalVel
			type = Any
			title = Reach Orbital Velocity.
			PARAMETER
			{
				name = Orbit
				type = ReachState

				situation = ORBITING
				disableOnStateChange = true
			}
			PARAMETER
			{
				name = OrbitalVelocity
				type = ReachState

				situation = SUB_ORBITAL
				minSpeed = 6500
				disableOnStateChange = true
			}
		}
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			completeInSequence = true
		}
	}
}
