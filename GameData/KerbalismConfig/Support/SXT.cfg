@PART[SXTDLK83EHabitat]:NEEDS[SXT,FeatureComfort]
{
	MODULE
	{
		name = Comfort
		bonus = exercise
		desc = A treadmill designed to permit exercise in zero-g is included. The crew will love it.
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = Comfort
		title = Treadmill
		repair = Engineer
		mtbf = 36288000
		extra_cost = 0.25
		extra_mass = 0.05
	}

	@tags ^= :$: comfort:
}
@PART[SXTNERVAB]:NEEDS[SXT,FeatureRadiation]
{
	MODULE
	{
		name = Emitter
		radiation = 0.0000052221
	}
}
@PART[SXTNERVA]:NEEDS[SXT,FeatureRadiation]
{
	MODULE
	{
		name = Emitter
		radiation = 0.0000041666
	}
}
@PART[SXTnuclearramjet]:NEEDS[SXT,FeatureRadiation]
{
	MODULE
	{
		name = Emitter
		radiation = 0.0000083331
	}
}

// RTG
@PART[SXTDepolyRTGI,SXTDepolyRTGII]:NEEDS[ProfileRealismOverhaul,SXT]:FOR[RP-0-Kerbalism]
{
  MODULE
  {
    name = ProcessController
    resource = _RTG
    title = RTG
    capacity = #$../MODULE[ModuleGenerator]/OUTPUT_RESOURCE[ElectricCharge]/rate$
    running = true
    toggle = false
  }
  !MODULE[ModuleCoreHeat],*{}
}

@PART[SXTDepolyRTGI,SXTDepolyRTGII]:NEEDS[ProfileRealismOverhaul,SXT]:FOR[zzzKerbalism]
{
  // get the amount of Pu
  PuMass = #$RESOURCE[Plutonium-238]/maxAmount$
  // get the mass by multiplying for the density
  @PuMass *= 0.019816
  // add the Pu mass to the part
  @mass += #$PuMass$

  // get the amount of Pu
  PuCost = #$RESOURCE[Plutonium-238]/maxAmount$
  // get the cost by multiplying for the unit cost
  @PuCost *= #$@RESOURCE_DEFINITION[Plutonium-238]/unitCost$
  // add the Pu cost to the part
  @cost += #$PuCost$

  // delete resources
  !RESOURCE[Plutonium-238] {}
  !RESOURCE[DepletedFuel] {}

  //delete old generator module
  !MODULE[ModuleGenerator],*{}
}