CONTRACT_TYPE
{
	name = early_spaceStation
	title = Early Space Station
	group = EarthSpaceStation
	agent = Stations

	description = <b>Program: Earth Space Station<br>Type: <color=green>Required</color></b><br><br>After successfully launching your first Space Station, it is now time to work on improvements. Launch or Control a Space Station which can generate @/powerText Watts of power, and have @/crewRequired crew stay on board for @/durationText days conducting Long Duration Habitation Analysis&br;&br;<b>Number of Contracts Completed: @/index / @/maxCompletions</b>

	genericeDescription = Design, build, and launch a space station with the specified requirements into Earth orbit, then crew it for the listed duration with the required crew, and bring the crew safely home. 

	synopsis = Launch a space station with the specified requirements

	completedMessage = Congratulations! This early space station has met its requirements and your crew has safely returned home!

	sortKey = 1502

	cancellable = true
	declinable = false
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 4
	maxSimultaneous = 1
	deadline = 0

	targetBody = HomeWorld()

	// ************ REWARDS ************
	
	prestige = Trivial       // 1.0x
	advanceFunds = 0
	rewardScience = 0
	rewardReputation = 450
	rewardFunds =  0
	failureReputation = 0 // was @/rewardReputation
	failureFunds = 0

	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = ProgramActive
		type = ProgramActive
		program = EarthSpaceStation
	}
	REQUIREMENT
	{
		name = Any
		type = Any
		
		REQUIREMENT
		{
			name = CompleteContract
			type = CompleteContract
			contractType = first_spaceStation
		}
		REQUIREMENT
		{
			name = CompleteContract
			type = CompleteContract
			contractType = first_spaceStation_direct
		}
	}
	DATA
	{
		type = list<float>
		durationMultiplier = [1,1,1,2]
	}
	DATA
	{
		type = float
		durationText = 30 * @/durationMultiplier.ElementAt(@/index)
	}
	DATA
	{
		type = list<int>
		power = [-1,-100,-250,-500]
	}
	DATA
	{
		type = float
		powerText = power.ElementAt(@/index) * -1
	}
	DATA
	{
		type = float 
		experimentCompletion = 0.1666 * (@/index + @/durationMultiplier.ElementAt(@/index) + 1)
	}
	DATA
	{
		type = list<int>
		crewList = [2,2,3,3]
	}
	DATA
	{
		type = int
		crewRequired = @/crewList.ElementAt(@/index)
	}
	DATA
	{
		type = int
		index = $RepeatEarlySpaceStation_Count + 0
	}
	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
			RepeatEarlySpaceStation_Count = $RepeatEarlySpaceStation_Count + 1
		}
	}
	
	// ************ PARAMETERS ************
	
	PARAMETER
	{
		name = vesselGroupLaunch
		type = VesselParameterGroup
		title = Control a Space Station with the required parameters
		notes = The station must generate at least @/powerText Watts of power, include at least 1 Docking Port and support for at least 3 Crew
		define = earlySpaceStation
		defineList = basicEarthStations
		disableOnStateChange = true
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = HasCapacity
			type = HasCrewCapacity
			minCapacity = 3
			title = Space for at least 3 crew
			hideChildren = true
			disableOnStateChange = false
		}
		PARAMETER
		{
			name = DockingPort
			type = PartValidation
			partModule = ModuleDockingNode
			minCount = 1
			title = Have at least 1 docking port
			hideChildren = true
		}
		PARAMETER
		{
			name = GenerateEC
			title = Generate @/powerText EC/s
			type = ResourceConsumption
			resource = ElectricCharge
			minRate = @/power.ElementAt(@/index)
		}

		PARAMETER
		{
			name = Orbit
			type = Orbit
			minPeA = 250000
			maxApA = 500000
			targetBody = HomeWorld()
			title = Reach orbit with a perigee greater than 250 km and an apogee less than 500 km
			hideChildren = true
		}
	}
	PARAMETER
	{
		name = vesselGroupCrew
		type = VesselParameterGroup
		title = Bring at least @/crewRequired crew to the station
		define = crewCapsule
		completeInSequence = true
		resetChildrenWhenVesselDestroyed = true
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = @/crewRequired
			title = Have at least @/crewRequired crewmembers on board
			hideChildren = true
		}
		PARAMETER
		{
			name = Rendezvous
			type = Rendezvous
			vessel = earlySpaceStation
			distance = 100
			title = Rendezvous with the station and dock.
		}
	}
	PARAMETER
	{
		name = stayOnStation
		type = VesselParameterGroup
		title = Keep at least @/crewRequired crew aboard the station and conduct long duration habitation analysis for @/durationText days.
		vessel = earlySpaceStation
		notes = You can work on other contracts while your crew are working. You are safe to return to Mission Control
		completeInSequence = true
		disableOnStateChange = true
		
		PARAMETER
		{
			name = HasCrew
			type  = HasCrew
			minCrew = @/crewRequired
			maxCrew = 99
			title = Has at least 2 crew members on the station.
			hideChildren = true
			completeInSequence = true
		}	
		PARAMETER
		{
			name = Orbit
			type = Orbit
			minPeA = 250000
			maxApA = 500000
			targetBody = HomeWorld()
			disableOnStateChange = false
			title = Remain in a stable orbit
			completeInSequence = true
		}
		PARAMETER
		{
			name = Long Duration Habitation Analysis
			type = RP1CollectScience
			title = Conduct Long Duration Habitation Analysis of your astronauts for @/durationText days
			notes = This experiment requires 1000 units of Research Payload every 30d//Placeholder value.
			targetBody = HomeWorld()
			experiment = RP0longDurationHabit1
			fractionComplete = @/experimentCompletion
			completeInSequence = true
		}
	}
	PARAMETER
	{
		name = vesselGroupCrewReturn
		type = VesselParameterGroup
		title = Return the crew home
		vessel = crewCapsule
		completeInSequence = true
		resetChildrenWhenVesselDestroyed = true
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 2
			title = Have at least 2 crewmembers on board
			hideChildren = true
		}
		PARAMETER
		{
			name = ReturnHome
			type = RP1ReturnHome
			title = Return home safely
			hideChildren = true
			completeInSequence = true
		}
	}
	PARAMETER
	{
		name = vesselGroupStationPersist
		type = VesselParameterGroup
		title = Keep the station in orbit
		vessel = earlySpaceStation
		completeInSequence = true
		
		PARAMETER
		{
			name = Orbit
			type = Orbit
			minPeA = 250000
			maxApA = 500000
			targetBody = HomeWorld()
			title = Keep the station in a stable orbit with a perigee greater than 250 km and an apogee less than 500 km
			
		}
	}

}