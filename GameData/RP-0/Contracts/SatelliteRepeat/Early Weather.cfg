CONTRACT_TYPE
{
	name = EarlyWeatherSats
	title = Early Weather Satellite
	group = WeatherSats

	description = The meteorological satellite that we launched was a good first step to understanding how the upper atmosphere affects the weather. However, our meteorologists want to see images of the clouds to better assess the situtation. To get usable photography, it is required that we have a relatively high and very circular orbit that is moderately inclined. Place our first proper weather satellites into the proper orbit to observe Earth.<br><b>The satellite will be destroyed upon completion of the contract. This simulates transfer of the payload to operational control after being placed sucessfully in orbit.</b><br><b>Make sure your craft carries an early television camera, as we will need science returned.</b><br>This is a series of eight contracts, of which @index have been completed.</b>Real life examples: TIROS 1-8.
	genericDescription = Put a weather satellite into the requested orbit.

	synopsis = Launch a weather satellite with a television camera into the proper orbit

	completedMessage = Success! The images produced have proven that weather satellites can be extremely effective in helping meteorologists predict the weather.

	sortKey = 521
	
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 8
	maxSimultaneous = 1
	deadline = 180	// 6 months

	targetBody = HomeWorld()

	// ************ REWARDS ************
	prestige = Trivial
	rewardReputation = 100 + @index * 5
	advanceFunds = 20000
	failureReputation = @advanceFunds * 0.0005

	DATA {
		type = float
		index = RP0EarlyWeatherIndex
	}	
	BEHAVIOUR {
		name = IncrementIndex
		type = Expression
		CONTRACT_COMPLETED_SUCCESS {
			RP0EarlyWeatherIndex = RP0EarlyWeatherIndex + 1
		}
	}	
		
	// ************ REQUIREMENTS ************	
	REQUIREMENT {
		name = CompleteContract
		type = CompleteContract
		contractType = first_MeteorSciSat
		title = Complete @contractType Contract
	}	
	REQUIREMENT	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_AdvancedSat
		title = Complete @contractType Contract
	}
	REQUIREMENT	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_HeavySat
		title = Complete @contractType Contract
	}

	// ************ PARAMETERS ************
	PARAMETER {
		name = EarlyWeatherSat
		type = VesselParameterGroup
		define = EarlyWeatherSat
		dissassociateVesselsOnContractCompletion = true
		title = Early Weather Satellite

		PARAMETER {
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER {
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER {
			name = HasWeatherSatPayload
			type = HasResource
			resource = WeatherSatPayload
			minQuantity = 119
			title = Have a WeatherSatPayload of at least 120 units on the craft
			hideChildren = true
		}
		PARAMETER {
            name = OrbitSequence
            type = Sequence
            title = Survive in the target orbit for 1 month

			PARAMETER {
				name = Orbit
				type = Orbit
				title = Achieve the target orbit
				minPeA = 600000 + @/index * 50000
				minInclination = 40 + @/index * 2.5
				maxEccentricity = 0.01 - @/index * 0.001
				disableOnStateChange = true
						
				PARAMETER {
					name = Duration
					type = Duration

					duration = 2m

					preWaitText = Check for Stable Orbit
					waitingText = Checking for Stable Orbit
					completionText = Stable Orbit: Confirmed
				}                
			}	
			PARAMETER {
				name = HasPower
				type = HasResource
				resource = ElectricCharge
				minQuantity = 1.0
				title = Craft must have power for at least 30 days
				disableOnStateChange = false
			
				PARAMETER {
					name = Duration
					type = Duration

					duration = 30d

					preWaitText = Check for Power
					waitingText = Checking for Power
					completionText = Power: Confirmed
				}   
			}	
			PARAMETER {
				name = CollectScience
				type = CollectScience
				targetBody = HomeWorld()

				situation = InSpaceLow		
				experiment = RP0visibleImaging1
				recoveryMethod = RecoverOrTransmit
				title = Transmit television images from low Earth orbit

				hideChildren = true			
			}
		}
	}
	BEHAVIOUR {
		name = TransferVessel
		type = DestroyVessel
		onState = CONTRACT_SUCCESS
		vessel = EarlyWeatherSat
	}
	BEHAVIOUR {
	name = VesselDestroyed
	type = DialogBox

		DIALOG_BOX {
			title = Vessel Ownership Transferred
			condition = CONTRACT_SUCCESS
			position = CENTER
			width = 0.5

			TEXT {
				text = The contract has been completed successfully. Control of the satellite has been transferred back to meteorological operations.
			}
		}
	}
}
