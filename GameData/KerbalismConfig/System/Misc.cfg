// ============================================================================
// Stock panel module work correctly at arbitrary warp speed and EC capacity
// ============================================================================

@PART[*]:HAS[@MODULE[ModuleDeployableSolarPanel]]:AFTER[zzzKerbalism]
{
  MODULE
  {
    name = SolarPanelFixer
  }
}


// ============================================================================
// Use Nitrogen as eva propellant, and set the initial amount to zero
// ============================================================================

@PART[kerbalEVA*]:FOR[zzzKerbalism]
{
  @MODULE[KerbalEVA]
  {
    @propellantResourceName = Nitrogen      // use nitrogen like MMU and SAFER
    @PropellantConsumption *= 3             // reduce dv to around 100 m/s
  }

  @RESOURCE[EVA?Propellant]
  {
    @name = Nitrogen
    @amount = 0
    @maxAmount = 5
  }

  //Add waste storage

  RESOURCE
  {
    name = Waste
    amount = 0
    maxAmount = 1
  }
}


// ============================================================================
// Replace readings with our own telemetry providers
// ============================================================================

@PART[sensorThermometer]:FOR[Kerbalism]
{
  !MODULE[ModuleEnviroSensor] {}

  MODULE
  {
    name = Sensor
    type = temperature
  }
}

@PART[sensorBarometer]:FOR[Kerbalism]
{
  !MODULE[ModuleEnviroSensor] {}

    MODULE
    {
      name = Sensor
      type = pressure
    }
}

@PART[sensorGravimeter]:FOR[Kerbalism]
{
  !MODULE[ModuleEnviroSensor] {}

  MODULE
  {
    name = Sensor
    type = gravioli
  }
}
@PART[RO-GeigerMuller|FASAProbeGeigerCounter|RO-ScintillationCounter]:FOR[RP-0-Kerbalism]:NEEDS[RP-0]
{
  MODULE
	{
		name = Sensor
		type = radiation
	}
}

// ============================================================================
// Set generic part tags
// ============================================================================

@PART[kerbalism-*]:FOR[Kerbalism] { %tags = _kerbalism }
@PART[kerbalism-greenhouse,kerbalism-container-*,kerbalism-lifesupportmodule]:FOR[zzzKerbalism] { %tags = #$tags$ life support }


// ============================================================================
// Set part specific tags
// ============================================================================

@PART[kerbalism-activeshield]:FOR[Kerbalism] { %tags = #$tags$ magnetic field radiation shield }
@PART[kerbalism-chemicalplant]:FOR[Kerbalism] { %tags = #$tags$ external chemical plant electrolysis o2 oxygen h2 hydrogen h2o water sabatier haber liquidfuel nh3 ammonia waste incinerator compressor anthraquinone hydrazine mre soe sco }
@PART[kerbalism-lifesupportmodule]:FOR[Kerbalism] { %tags = #$tags$ external eclss scrubber pressure control atmosphere wasteatmosphere o2 oxygen nitrogen co2 carbondioxide h2o water recycler waste processor fuelcell fuel cell monoprop }
@PART[kerbalism-geigercounter]:FOR[Kerbalism] { %tags = #$tags$ geiger counter science sensor }
@PART[kerbalism-gravityring]:FOR[Kerbalism] { %tags = #$tags$ habitat crew gravity rotate comfort }
@PART[kerbalism-greenhouse]:FOR[Kerbalism] { %tags = #$tags$ habitat crew greenhouse food crop hydroponic co2 carbondioxide waste atmosphere wasteatmosphere h2o water o2 oxygen }
@PART[kerbalism-container-inline-0625]:FOR[Kerbalism] { %tags = #$tags$ supply supplies food water waste wastewater container 625 0625 0.625 .625 }
@PART[kerbalism-container-inline-125]:FOR[Kerbalism] { %tags = #$tags$ supply supplies food water waste wastewater container 125 1.25 }
@PART[kerbalism-container-inline-250]:FOR[Kerbalism] { %tags = #$tags$ supply supplies food water waste wastewater container 250 2.5 2.50 }
@PART[kerbalism-container-inline-375]:FOR[Kerbalism] { %tags = #$tags$ supply supplies food water waste wastewater container 375 3.75 }
@PART[kerbalism-minipump]:FOR[Kerbalism] { %tags = #$tags$ harvest extract pump h2o water nitrogen nh3 ammonia }
@PART[kerbalism-radialpump]:FOR[Kerbalism] { %tags = #$tags$ harvest extract pump h2o water nitrogen nh3 ammonia }
@PART[kerbalism-container-radial-*]:FOR[Kerbalism] { %tags = #$tags$ external radial tank supply supplies pressurized o2 oxygen nitrogen h2 hydrogen nh3 ammonia co2 carbondioxide xenon }
@PART[kerbalism-antenna]:FOR[Kerbalism] { %tags = #$tags$ antenna }


// ============================================================================
// RTG cost and mass fixes
// ============================================================================

@PART:HAS[@MODULE[ModuleResourceConverter]:HAS[#ConverterName[RTG]]]:NEEDS[ProfileRealismOverhaul]:FOR[zzzKerbalism]
{
  // get the amount of Pu
  PuMass = #$RESOURCE[Plutonium-238]/maxAmount$
  // get the mass by multiplying for the density
  @PuMass *= 0.019816
  // add the Pu mass to the part
  @mass += #$PuMass$

  // get the amount of Pu
  PuCost = #$RESOURCE[Plutonium-238]/maxAmount$
  // get the cost by multiplying for the unit cost

  @PuCost *= #$@RESOURCE_DEFINITION[Plutonium-238]/unitCost$
  //PuCost *= 7821.782178

  // add the Pu cost to the part
  @cost += #$PuCost$

  // delete resources
  !RESOURCE[Plutonium-238] {}
  !RESOURCE[DepletedFuel] {}

  //delete old converter module
  !MODULE[ModuleResourceConverter],*{}
}
