CONTRACT_TYPE
{
	name = SoundingRocketLow
	group = SoundingRocketContracts
	
	title = Sounding Rocket (Low)
	
	description = Design, build and launch a sounding rocket to attain @/altLow.Print() km.
	
	synopsis = Launch a sounding rocket to @/altLow.Print() km.
	
	completedMessage = Congratulations on a successful launch! The rocket has reached @/altLow.Print() km.
	
	minExpiry = 1.0
	maxExpiry = 30.0
	deadline = 90
	cancellable = true
	declinable = true
	autoAccept = false
	
	targetBody = HomeWorld()
	
	maxCompletions = 0
	maxSimultaneous = 1
	prestige = Trivial
	
	// reward block
	// 400 to 600
	advanceFunds = 200.0 + @VesselGroup/ReachAlt/minAltitude*0.005
	rewardFunds = @advanceFunds + 250.0
	failureFunds = @advanceFunds
	
	weight = 10.0
	DATA
	{
		type = int
		altLow = @/VesselGroup/ReachAlt/minAltitude / 1000
	}
	
	REQUIREMENT
	{
		name = CompleteFirstLaunch
		type = CompleteContract
		contractType = first_FirstFlight
	}
	REQUIREMENT
	{
		name = All
		type = All
		
		REQUIREMENT
		{
			name = NotCompleteFirstOrbit
			type = CompleteContract
			contractType = first_OrbitUncrewed
			invertRequirement = true
		}
		REQUIREMENT
		{
			name = NotAltitudeRecord130k
			type = AltitudeRecord
			// 130000 is what we mean, but it doesn't work
			//because AltitudeRecord doesn't track beyond the space boundry.
			minAltitude = 129999
			invertRequirement = true
		}
	}
	PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup
		title = Reach @/altLow.Print() km with a sounding rocket.
		define = soundingLowCraft
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
		}
		PARAMETER
		{
			name = ReachAlt
			type = ReachState
			minAltitude = 40000 + Round(Random(0, 40000), 5000)
		}
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}
	}
}
