KCT_Preset
{
    name = KCT Settings for RP-0
    shortName = RP0
    description = The recommended config for using KCT with RP-0
    author = RP-0 Devs
    allowDeletion = False
    career = True
    science = True
    sandbox = True
    KCT_Preset_General
    {
        Enabled = True
        BuildTimes = True
        ReconditioningTimes = True
		ReconditioningBlocksPad = True
        TechUnlockTimes = True
        KSCUpgradeTimes = True
        TechUpgrades = True
		SharedUpgradePool = True
        StartingPoints = 0,500,5000
		MaxRushClicks = 5
    }
    KCT_Preset_Time
    {
        OverallMultiplier = 25
        BuildEffect = 1
        InventoryEffect = 100
        ReconditioningEffect = 576
        MaxReconditioning = 1350000000
        RolloutReconSplit = 0.75
    }
    KCT_Preset_Formula
    {
			NodeFormula = (((4.75+(0.025*((min([N],30)^2)+min([N],30)))+(max(0,([N]-30))*1.5)) / 86400 / 365) * sign(-[I]) * (1+([R] * 0.25))) // 5 science/year, + 0.05 to 1.5 sci per upgrade (levels at 30), only one rate, and 1/1.25/1.5x etc from R&D upgrades.
            UpgradeFundsFormula = 30000
            UpgradeScienceFormula = -1
			ResearchFormula = -1
			EffectivePartFormula = [PV]*[MV]*(min([C]/([I] + ([B]*(max([U]*0.125,1)+1))), [C]))
            ProceduralPartFormula = [MV] * ((([C]-[A]) + ([A]*10/max([I],1))) / max([B]*(max([U]*0.125,1)+1),1))
            BPFormula = (500 + ([E]*20))*[O]*1.5
            KSCUpgradeFormula = (([C]*0.2)^(0.75))*200*[O]
            ReconditioningFormula = abs([RE]-[S])*([BP] * (0.7 + (([SN]^0.5)*0.05) + (([SP]^0.5)*0.05)) * (([L]+4)^2) * 0.00012)*2*[O]
            BuildRateFormula = (1+([L]*0.25))*((([I]+1)*((0.00125*((min([N],15)^2)+min([N],15)))+(max(0,([N]-15))*0.05))) + max(0.05-[I], 0))*sign([L]-[I])
            UpgradeResetFormula = -1
            InventorySaleFormula = 0
			RolloutCostFormula = (((([L]+1)^2.5)*200)-180) + ([BP] * (0.7 + (([SN]^0.5)*0.05) + (([SP]^0.5)*0.05)) * (([L]+12)^1.2) * 0.00011)
			NewLaunchPadCostFormula = 25000*(0.75 + ([N]^1.25)*.25)
    }
	KCT_Preset_Part_Variables
	{
		Part_Variables
		{
			// Break down Mk1 pod costs: 20% shield, 5% avionics, 5% RCS, 70% habitable.
			mk1pod = 0.141667 // (0.2 * 2 + 0.05 * 3 + 0.05 * 1 + 0.7 * 4) / (2 * 3 * 1 * 4) = 3.4 / 24
			// same breakdown for Mercury
			FASAMercuryPod = 0.141667
			// assume same breakdown is valid for AIES pods
			orbitaiespod = 0.141667
			moduldesspod = 0.141667
			// Break down Vostok pod costs: 30% shield, 10% avionics, 60% habitable.  Assumes the part is just the spherical bit.  2460kg of which 837kg is heat shield (source: Wikipedia).  More shield than a 'headlamp' pod because it's covered all over.  RCS is in the propulsion module.
			IronVostok_Crew_A = 0.1375 // (0.3 * 2 + 0.1 * 3 + 0.6 * 4) / (2 * 3 * 4) = 3.3 / 24
			rn_vostok_sc = 0.1375
			// for Voskhod use same numbers as Vostok (same outer mould line, so probably similar enough)
			Voskhod_Crew_A = 0.1375
			rn_voskhod_sc = 0.1375
			// Break down Gemini pod costs: 20% shield, 10% avionics, 70% habitable.  RCS is in a separate part
			FASAGeminiPod2 = 0.145833 // (0.2 * 2 + 0.1 * 3 + 0.7 * 4) / (2 * 3 * 4) = 3.5 / 24
			FASAGeminiPod2White = 0.145833
			// Assume K2 Command Pod is basically like Gemini (no real idea)
			K2Pod = 0.145833
			// Break down Big Gemini passenger compartment costs: 20% shield, 80% habitable.
			FASAGeminiBigG = 0.45 // (0.2 * 2 + 0.8 * 4) / (2 * 4) = 3.6 / 8
			FASAGeminiBigGWhite = 0.45
			// TODO Soyuz, Zond, LOK, "t_af_bo", ASTP BO, "tg_bo" - find someone who uses RN Soyuz and knows which part is which!
			// same goes for DECQ Soyuz mod
			// TODO SSTU-SC-*-* - find someone who uses SSTU and knows which part is which
			// Break down Apollo CM costs: 20% shield, 5% avionics, 5% RCS, 70% habitable.
			bluedog_Apollo_Block2_Capsule = 0.141667 // same numbers as mk1pod
			FASAApollo_CM = 0.141667
			bluedog_Apollo_Block3_Capsule = 0.141667
			// Mk1-2 pod: it's basically Apollo, so use the same numbers
			Mark1-2Pod = 0.141667
			// Apollo Block III MM.  Assuming this is the one from Eyes, it's a crew can with docking controls... let's say 10% avionics, 90% habitable
			bluedog_Apollo_Block3_MissionModule = 0.325 // (0.1 * 3 + 0.9 * 4) / (3 * 4) = 3.9 / 12
			// Rover command seat: 50% avionics, 50% habitable (?)
			WBI_ATVSeat = 0.291667 // (0.5 * 3 + 0.5 * 4) / (3 * 4) = 3.5 / 12
			// TKS VA: 20% shield, 5% avionics, 5% RCS, 70% habitable.
			MK2VApod = 0.141667 // same numbers as mk1pod
			rn_va_capsule = 0.141667
			SSTU-SC-C-CM = 0.141667
			SSTU-SC-C-CMX = 0.141667
			// TODO "mk3-9pod" from Near Future Spacecraft, find someone who uses it and knows what it looks like
			// Orion pod: it's basically just a bigger Apollo, so use the same numbers
			XOrionPodXbb31 = 0.141667
			XOrionPodX = 0.141667
			// TODO nosMonkeyExplorerUtilityHAB (from Chaka Monkey) - what is this?
			// TODO inlineCmdPod (from NF Spacecraft) - don't know anything about it
			// TODO CST-100?capsule - do we have to match the string exactly, if so what is that ? standing in for?
			
			
			landerCabinMedium = 0.5
		}
		Module_Variables
		{
			ModuleTagEngineLiquidPF = 1.75
			ModuleTagEngineLiquidTurbo = 4
			ModuleTagEngineSolid = 1.0 			// Was 1.1 This is to balance the lowering of the costs
			ModuleTagAvionics = 3
			ModuleTagHabitable = 4
			ModuleTagReentry = 2
			ModuleTagNuclear = 5
			ModuleTagDecoupler = 3
			ModuleTagTankServiceModule = 2.5
			ModuleTagTankBalloon = 2
		}
		Global_Variables
		{
			ModuleTagHumanRated = 1.5
		}
	}
}
