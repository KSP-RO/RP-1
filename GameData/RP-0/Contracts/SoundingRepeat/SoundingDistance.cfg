CONTRACT_TYPE
{
	name = SoundingRocketDistance
	group = SoundingRockets
    sortKey = 991
	
	title = Long-Distance Suborbital Rocketry @numeral
	genericTitle = Long-Distance Suborbital Rocketry
	description = Developing rockets is hard. As your space program matures, you will need to test new heavy engines and develop vehicles capable of putting larger payloads into orbit. To that effect, design, build and launch a class @numeral sounding rocket which will deliver @payload units of payload to a downrange distance of @distance km. The energy required will increase with each new series of rocket.<br>The class @numeral series of downrange rockets contains @length contracts, of which @seriesIndex have been completed. This series will culminate in the design and launch of a rocket capable of launching @payload units of payload to a downrange distance of @goalDistance.
	genericDescription = Deliver the payload a specified distance downrange. This contract will stretch your capabilities and enable harder contracts.
	synopsis = Launch a sounding rocket with @payload units of payload to a downrange distance of @distance km.
	completedMessage = Congratulations on a successful launch! The rocket has delivered the payload.

	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 16
	maxSimultaneous = 1
	deadline = 240	
	
	targetBody = HomeWorld()
	
	// ************ REWARDS ************
	prestige = Trivial
	advanceFunds = @advance
	rewardReputation = @reward
	failureReputation = @advanceFunds * 0.00025
			
	// ************ REQUIREMENTS ************
	REQUIREMENT	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_FirstLaunch
		title = Complete @contractType Contract
	}
		
	// ************ CONTRACT DATA ************
	DATA  {
		type = float
		index = RP0SoundingDistanceIndex
	}
	BEHAVIOUR {
		name = IncrementIndex
		type = Expression
		CONTRACT_COMPLETED_SUCCESS {
			RP0SoundingDistanceIndex = RP0SoundingDistanceIndex + 1
		}
	}	

	// *** Series Number ***
	DATA {
		type = List<float>
		serieses = [1, 1, 1,	2, 2, 2, 2,		3, 3, 3, 3,		4, 4, 4, 4, 4 ]
	}	
	DATA {
		type = float
		series = @serieses.ElementAt(@index)
	}	

	// *** Contract Number ***
	DATA {
		type = List<float>
		seriesIndices = [0, 1, 2, 	0, 1, 2, 3,		0, 1, 2, 3,		0, 1, 2, 3, 4  ]
	}	
	DATA {
		type = float
		seriesIndex = @seriesIndices.ElementAt(@index)
	}	

	// *** Roman Numeral ***
	DATA {
		type = List<string>
		numerals = [ "I", "II", "III", "IV"]
	}
	DATA {
		type = string
		numeral = @numerals.ElementAt(@series-1)
	}	

	// *** Series Lengths ***
	DATA {
		type = List<float>
		lengths = [		3,		4,		4,		5	]
	}
	DATA {
		type = float
		length = @lengths.ElementAt(@series-1)
	}	

	// *** Payloads ***
	DATA {
		type = List<float>
		payloads = [	400,	500,	2000,	1000	] // See NQB Development spreadsheet
	}
	DATA {
		type = float
		payload = @payloads.ElementAt(@series-1)
	}	

	// *** Goal Distances ***
	DATA {
		type = List<float>
		goalDistances = [	300,	700,	800,	2500	] // See NQB Development spreadsheet
	}
	DATA {
		type = float
		goalDistance = @payloads.ElementAt(@series-1)
	}	

	// *** Distances ***
	DATA {
		type = List<float>
		distances = [ 200, 250, 300,	550, 600, 650, 700,		500, 600, 700, 800,		2000, 2100, 2200, 2300, 2500 ] 
	}
	DATA {
		type = float
		distance = @distances.ElementAt(@index)
	}	

	// *** Rewards ***
	DATA {
		type = List<float>
		rewards = [		400,	500,	600,	700	]
	}
	DATA {
		type = float
		reward = @rewards.ElementAt(@series-1)
	}	

	// *** Advances ***
	DATA {
		type = List<float>
		advances = [2500, 1000, 500,	5000, 2500, 1000, 500,		8000, 4000, 2000, 1000,		20000, 8000, 4000, 2000, 1000 ]
	}
	DATA {
		type = float
		advance = @advances.ElementAt(@index)
	}	
	
	// ************ PARAMETERS ************	
	PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup		
		title = Reach @/distance km with @/payload units of payload
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
		}
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		
		PARAMETER
		{
			name = HasSoundingPayload
			type = HasResource
			resource = SoundingPayload
			minQuantity = @/payload-0.1
			title = Have a SoundingPayload of at least @/payload units on the craft
			hideChildren = true
		}

		PARAMETER
		{
			name = NoCheese
			type = ReachState
			minAltitude = 50000
			disableOnStateChange = true
			title = Reach an altitude of at least 50 km
			hideChildren = true
		}

		PARAMETER
		{
			name = ReachDistance
			type = DownrangeDistance
			distance = @/distance * 1000
			title = Reach a downrange distance of at least @/distance km
		}
	}
}
	