CONTRACT_TYPE
{
	name = CargoPlanesOptional
	group = GeneralPlanes
	title = Cargo Transport Contract
	genericTitle = Cargo Transport Contract
	description = <b>Program: GeneralPlane<br>Type: <color=blue>Optional</color></b><br><br>Flying cargo planes may aid the the development of your space center. Carry @payload units of monitoring instrumentation to the specified downrange, then Land the plane safely. @RP0:soundingTankAdvice<br><br>This is a series of @maxCompletions contracts, of which @index have been completed.
	genericDescription = Put new payload to certain downrange and recover the payload safely.
	synopsis = Launch and recover @payload units of payload from over 120 km. 
	completedMessage = Well done! Our construction workers are desperate to get the payloads off.

	sortKey = 114

	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 20
	maxSimultaneous = 1
	deadline = 0
	cancellable = true
	declinable = false
	autoAccept = false
	
	targetBody = HomeWorld()

	// ************ REWARDS ************
	prestige = Trivial       // 1.0x
	advanceFunds = 0
	rewardScience = 0
	rewardFunds = 800
	failureFunds = 0
	rewardReputation = 5
	failureReputation = 0 // was @rewardReputation
	
	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = ProgramActive
		type = ProgramActive
		program = GeneralPlane
	}
	
	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		tag = exclude_SoundingRocket
		invertRequirement = true
	}
	
	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		tag = exclude_SoundingDownrange
		invertRequirement = true
	}


	DATA
	{
		type = List<float>
		payloads = [ 75000, 115000,75000, 115000,75000, 115000,75000, 115000,75000, 115000,75000, 115000,75000, 115000,75000, 115000,75000, 115000,75000, 115000 ]
	}
	DATA
	{
		type = List<float>
		calcDistance = 100+index*11
	}
	
	DATA
	{
		title = Generate the actual distance for this specific mission
		type = int
		Downrangekm = int(Round(@calcDistance, 10))
		missionDistanceMeters = @Downrangekm * 1000
	}
	DATA
	{
		type = int
		index = $CargoPlaneOptional_count
	}

	DATA
	{
		type = float
		Downrangekm = @Downrangekm.ElementAt(@index)
	}

	DATA
	{
		type = float
		payload = @payloads.ElementAt($CargoPlaneOptional_count)
	}

	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression
		CONTRACT_COMPLETED_SUCCESS
		{
			CargoPlaneOptional_count = $CargoPlaneOptional_count + 1
		}
	}

	PARAMETER
	{
		name = MissionParameters
		type = VesselParameterGroup
		title = Reach @/Downrangekm km with a biological sample and @/payload units of Sounding payload, and then recover that sample.

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a new vessel
			hideChildren = true
		}

		PARAMETER
		{
			name = BuiltAtSPH
			type = VesselBuiltAt
			builtAt = SPH
		}

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 1
			maxCrew = 20
			title = Uncrewed
			hideChildren = true
		}

		PARAMETER
		{
			name = HasSoundingPayload
			type = HasResource
			resource = SoundingPayload
			minQuantity = @/payload - 0.1
			title = Have a SoundingPayload of at least @/payload units on the craft
			hideChildren = true
		}

		PARAMETER
		{
			name = ReachDistance
			type = DownrangeDistance
			distance = @/missionDistanceMeters
			title = Reach a downrange distance of at least @/Downrangekm km
		}
	}

	PARAMETER
	{
		name = ReturnHome
		type = RP1ReturnHome
		title = Return home safely
		hideChildren = true
	}
}
