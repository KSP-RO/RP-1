CONTRACT_TYPE
{
	name = RepeatComSats
	title = Commercial Communications Satellite
	group = AdvSatellites
	agent = Satellites

	description = We have a customer requesting a new Communications Satellite. Design a satellite within their specs and launch into an orbit with the proper orbital parameters as outlined in the contract.&br;&br;This contract can be completed as many times as you would like. The orbits will be chosen randomly from Tundra, Geostationary, Molniya and Geosynchronous orbits.&br;&br;<b><color=red>NOTE: The satellite will be destroyed upon completion of the contract. This simulates transfer of the payload back to the customer.</color></b>&br;&br;<b>Number of Contracts Completed: $RepeatComSats_Count</b>
	genericDescription = Put a satellite into the requested orbit.

	synopsis = Launch a new Commercial Communications Satellite

	completedMessage = Congratulations! The customer has reported the satellite is in the proper orbit.

	sortKey = 900

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 5
	maxExpiry = 10
	maxCompletions = 0
	maxSimultaneous = 1
	deadline = 365  // 1 year

	targetBody = HomeWorld()

	prestige = Trivial       // 1.0x
	advanceFunds = ((12000 + ((@AdvComSat/HasComSatPayload/minQuantity)*2)) * (1 + Max(@AdvComSat/ReachSpecificOrbit/index, 1) * 0.4)) * 1.25 * @RP0:globalHardContractMultiplier
	rewardScience = 0
	rewardReputation = Round(1 + (@advanceFunds / 500))
	rewardFunds = (@advanceFunds * 1.5)
	failureReputation = @rewardReputation * 1.5
	failureFunds = @advanceFunds * 0.5

	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FirstMolniyaSat
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FirstTundraSat
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_GEOUncrewed
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = EarlyComSat
		minCount = 3
		title = Complete @contractType Contract at least @minCount times
	}

	BEHAVIOUR
	{
		name = OrbitGenerator
		type = OrbitGenerator

		RANDOM_ORBIT
		{
			type = KOLNIYA  // index = 0
		}

		RANDOM_ORBIT
		{
			type = STATIONARY  // index = 1
		}

		RANDOM_ORBIT
		{
			type = TUNDRA  // index = 2
		}
	}
	
	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression
		
		CONTRACT_COMPLETED_SUCCESS
        {
            RepeatComSats_Count = $RepeatComSats_Count + 1
        }
	}

	// ************ PARAMETERS ************

	PARAMETER
	{
		name = AdvComSat
		type = VesselParameterGroup
		define = AdvComSatellite
		dissassociateVesselsOnContractCompletion = true
		title = Commercial Communications Satellite

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = HasComSatPayload
			type = HasResource
			resource = ComSatPayload
			minQuantity = Round((Pow(Random(0.5,1.5) * (0.3 + UnlockedTech().Count() / 100),2)*2500)/2,1)
			title = Have a ComSatPayload of at least @minQuantity units on the craft
		}
		PARAMETER
		{
			name = ReachSpecificOrbit
			type = ReachSpecificOrbit
			displayNotes = true
			index = int(Min(2, Random(0, 3)))
			deviationWindow = 4
			
			PARAMETER
			{
				name = Duration
				type = Duration

				duration = 2m

				preWaitText = Check for Stable Orbit
				waitingText = Checking for Stable Orbit
				completionText = Stable Orbit: Confirmed
			}
		}
	}
  BEHAVIOUR
  {
    name = TransferVessel
    type = DestroyVessel
    onState = CONTRACT_SUCCESS
    vessel = AdvComSatellite
  }
  BEHAVIOUR
  {
	name = VesselDestroyed
	type = DialogBox
	DIALOG_BOX
	{
	  title = Vessel Ownership Transferred
	  condition = CONTRACT_SUCCESS
	  position = CENTER
	  width = 0.5
	  TEXT
	  {
		text = The contract has been completed successfully and the satellite has been transferred back to the customer.
	  }
	}
  }
}
