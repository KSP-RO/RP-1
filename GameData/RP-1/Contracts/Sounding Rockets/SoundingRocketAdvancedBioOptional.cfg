CONTRACT_TYPE
{
	name = SoundingRocketAdvancedBioOptional
	group = SuborbRocketResearch
	
	tag = exclude_SoundingRocket

	title = Advanced Biological Suborbital Experiment
	genericTitle = Advanced Biological Suborbital Experiment
	description = <b>Program: Suborbital Research<br>Type: <color=blue>Optional</color></b><br><br>By training and launching a larger mammal in a capsule with recording instruments, we can test how astronauts might perform tasks under similar conditions. For instance, whether they'll be able to focus under the heavy G-loads, vibrations, and noise encountered during the launch into and recovery from orbit. <br>Carry an advanced biological capsule and @payload units of monitoring instrumentation on a suborbital trajectory, then recover the experiment.<br><br>This is a series of @maxCompletions contracts, of which @index have been completed.
	genericDescription = Put an advanced biological capsule and some scientific payload on a suborbital trajectory and recover both safely.
	synopsis = Launch a rocket with an advanced biological capsule and @payload units of Sounding Rocket Payload on a suborbital trajectory and recover them.
	completedMessage = Well done! Our subject survived and our scientists are now examining it and the collected data!

	sortKey = 116

	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 2
	maxSimultaneous = 1
	deadline = 0
	cancellable = true
	declinable = false
	autoAccept = false
	
	targetBody = HomeWorld()

	// ************ REWARDS ************
	prestige = Trivial       // 1.0x
	advanceFunds = 0
	rewardScience = 0
	rewardFunds = 0
	failureFunds = 0
	rewardReputation = 45
	failureReputation = 0 // was @rewardReputation

	// ************ REQUIREMENTS ************
	
	REQUIREMENT
	{
		name = ProgramActive
		type = ProgramActive
		program = SuborbRocketResearch
	}	

	REQUIREMENT
	{
		name = CompleteKarman
		type = CompleteContract
		contractType = SoundingRocketAdvancedBio
	}
	
	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		tag = exclude_SoundingRocket
		invertRequirement = true
	}
	
	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		tag = exclude_SoundingDownrange
		invertRequirement = true
	}

	DATA
	{
		type = List<float>
		velocitiesMs = [ 2800, 3600 ]
	}

	DATA
	{
		type = int
		index = $SoundingAdvancedBioOptional_Count
	}

	DATA
	{
		type = float
		altitudeKm = 140
	}

	DATA
	{
		type = float
		velocityMs = @velocitiesMs.ElementAt(@index)
	}

	DATA
	{
		type = float
		payload = 200
	}

	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression
		CONTRACT_COMPLETED_SUCCESS
		{
			SoundingAdvancedBioOptional_Count = $SoundingAdvancedBioOptional_Count + 1
		}
	}

	PARAMETER
	{
		name = MissionParameters
		type = VesselParameterGroup
		title = Reach a Surface Velocity of @/velocityMs m/s with a minimum altitude of @/altitudeKm km with a biological sample and @/payload units of Sounding payload, and then recover that sample.

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a new vessel
			hideChildren = true
		}

		PARAMETER
		{
			name = BuiltAtVAB
			type = VesselBuiltAt
			builtAt = VAB
		}

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}

		PARAMETER
		{
			name = HasSoundingPayload
			type = HasResource
			resource = SoundingPayload
			minQuantity = @/payload - 0.1
			title = Have a SoundingPayload of at least @/payload units on the craft
			hideChildren = true
		}

		PARAMETER
		{
			name = HasBiologicalSample
			type = PartValidation
			part = BioCapsule
			title = Include an 'Advanced Biological Capsule' on the craft
			hideChildren = true
		}

		PARAMETER
		{
			name = HaveAvionics
			type = VesselParameterGroup
			title = Maintain sufficient avionics for the first 50s of flight (do not lose control)
			disableOnStateChange = true
			hideChildren = true

			PARAMETER
			{
				name = AvionicsCheck
				type = AvionicsCheck
				continuousControlRequired = true
				hideChildren = true
			}

			PARAMETER
			{
				name = ReachState
				type = ReachState
				situation = FLYING
				minRateOfClimb = 10
				hideChildren = true
			}
			
			PARAMETER
			{
				name = Duration
				type = Duration
				duration = 50s
				completeInSequence = true
				hideChildren = true
			}
		}

		PARAMETER
		{
			name = SpaceAltitude
			type = ReachState
			minSpeed = @/velocityMs
			speedMode = Surface
			minAltitude = @/altitudeKm * 1000
			disableOnStateChange = true
			title = Reach an altitude of at least @/altitudeKm km
		}
	}

	PARAMETER
	{
		name = ReturnHome
		type = RP1ReturnHome
		title = Return home safely
		hideChildren = true
	}
}
