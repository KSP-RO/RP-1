CONTRACT_TYPE
{
    name = recordCrewedAlt
	group = HumanRecords
	
    title = Crewed Altitude Record of @crewedTargetAltitudeKM km.
    description = We want you to set a new crewed altitude record! Fly/rocket above @crewedTargetAltitudeKM km with crew aboard.
	genericTitle = Crewed Altitude Record
    genericDescription = We want you to set a new crewed altitude record! Fly/rocket above the specified altitude with crew aboard.
    synopsis = Set a crewed altitude record of @crewedTargetAltitudeKM km.
    completedMessage = Congratulations! You've set a new crewed altitude record!
	
	agent = Federation Aeronautique Internationale

    autoAccept = true
	cancellable = true
	declinable = false
	
	prestige = Trivial

    targetBody = HomeWorld()

    // Can only have one active
    maxSimultaneous = 1

    // Contract rewards
    rewardFunds = Round((Pow(@crewedTargetAltitudeKM, 0.4) * 1000 - 800) * @RP0:globalHardContractMultiplier, 100)
	rewardReputation = 5.0 + @crewedTargetAltitude*0.0001

    DATA
    {
        type = List<float>

        crewedAlts = [ 5000, 10000, 15000, 20000, 25000, 30000, 40000, 50000, 60000, 70000, 80000, 90000, 100000, 120000, 140000, 160000, 180000, 200000, 500000, 1000000 ]
    }

    // Break this into two steps to work around ContractConfigurator#260
    DATA
    {
        type = float

        crewedAltIndex = RP0_CrewedAltitudeIndex
    }

    DATA
    {
        type = float

        crewedTargetAltitude = @crewedAlts.ElementAt(@crewedAltIndex)
    }
	DATA
    {
        type = float

        crewedTargetAltitudeKM = @crewedTargetAltitude * 0.001
    }

    PARAMETER
    {
        name = ReachState
        type = ReachState

        minAltitude = @/crewedTargetAltitude
    }
	PARAMETER
	{
		name = HasCrew
		type = HasCrew
		minCrew = 1
	}

    BEHAVIOUR
    {
        name = IncrementIndex
        type = Expression

        CONTRACT_COMPLETED_SUCCESS
        {
            RP0_CrewedAltitudeIndex = RP0_CrewedAltitudeIndex + 1
        }
    }

    REQUIREMENT
    {
        title = Crewed Altitude
        type = Expression

        expression = @/crewedAltIndex < @/crewedAlts.Count()
    }
}
