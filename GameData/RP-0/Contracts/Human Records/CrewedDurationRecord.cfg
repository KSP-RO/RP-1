CONTRACT_TYPE
{
    name = recordCrewedDuration
    group = HumanRecords
    
    title = Crewed Duration Record of @crewedTargetDuration
    description = We want you to set a new space duration record! Keep your crew in space for at least @crewedTargetDuration and return home safely.
	genericTitle = Crewed Duration Record
    genericDescription = We want you to set a new space duration record! Keep your crew in space for at least the specified time and return home safely. //The contract does not demand return, even though it's in the description
    synopsis = Set a crewed duration record of @crewedTargetDuration
    completedMessage = Congratulations! You've set a new crewed duration record!
    
    agent = Federation Aeronautique Internationale

    autoAccept = true
    cancellable = false
    declinable = false

    prestige = Trivial

    targetBody = HomeWorld()

    // Can only have one active
    maxSimultaneous = 1

    // Contract rewards
    rewardFunds = 20000.0 + @crewedTargetDurationNum * 20000
    rewardReputation = 30.0 + @crewedTargetDurationNum * 2

    DATA
    {
        type = List<Duration>

        crewedDurations = [ 1d, 2d, 3d, 7d, 14d, 30d, 60d, 90d, 180d, 365d ]
    }
    
    DATA
    {
        type = List<float>

        crewedDurationsNum = [ 1, 2, 3, 7, 14, 30, 60, 90, 180, 365 ]
    }

    // Break this into two steps to work around ContractConfigurator#260
    DATA
    {
        type = float

        crewedDurationIndex = RP0_CrewedDurationIndex
    }

    DATA
    {
        type = Duration
        title = Duration

        crewedTargetDuration = @crewedDurations.ElementAt(@crewedDurationIndex)
    }
    DATA
    {
        type = float

        crewedTargetDurationNum = @crewedDurationsNum.ElementAt(@crewedDurationIndex)
    }
    PARAMETER
    {
        name = VesselGroup
        type = VesselParameterGroup
        title = Stay in space for @/crewedTargetDuration
        
        PARAMETER
        {
            name = durationInSpace
            type = All
            title = Stay in space for @/crewedTargetDuration
            
            disableOnStateChange = False
            
            PARAMETER
            {
                name = ReachState
                type = ReachState
                situation = ORBITING
                situation = SUB_ORBITAL
                situation = ESCAPING
                
                targetBody = AllBodies()
                
                disableOnStateChange = False
            }
            PARAMETER
            {
                name = HasCrew
                type = HasCrew
                minCrew = 1
                
                disableOnStateChange = False
            }
            PARAMETER
            {
                name = Duration
                type = Duration
                duration = @/crewedTargetDuration
            }
        }
    }

    BEHAVIOUR
    {
        name = IncrementIndex
        type = Expression

        CONTRACT_COMPLETED_SUCCESS
        {
            RP0_CrewedDurationIndex = RP0_CrewedDurationIndex + 1
        }
    }

    REQUIREMENT
    {
        type = Expression
        title = Crewed Duration

        expression = @/crewedDurationIndex < @/crewedDurations.Count()
    }
}
