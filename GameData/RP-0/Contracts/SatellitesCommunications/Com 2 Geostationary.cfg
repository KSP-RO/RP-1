CONTRACT_TYPE {
	name = GeostatComSat
	group = SatellitesCommunications
	sortKey = 502
	
	title = Geostationary Communications Satellite @numeral
	genericTitle = Geostationary Communications Satellite
	description = As communications between countries continue to grow, so does the need for increasingly complex satellite systems. We have proven the utility of geostationary orbits for communications. Now it is time to exploit that potiential by launching a class @numeral geostationary communications satellite.<br>You will develop increasingly advanced classes of geostationary communications satellites. The payload required will increase with each new satellite series.<br><b>The satellite will be destroyed upon completion of the contract. This simulates transfer of the payload to operational control after being placed sucessfully in orbit.</b><br>The class @numeral series of geostationary communications satellites contains @length contracts, of which @seriesIndex have been completed.<br>Real life examples: Intelsat 2, 3, 4, 4A, 5, 6, 7, 9 series	
	genericDescription = Put a communications satellite into geostationary orbit.
	synopsis = Put a communications satellite with @payload units of payload into geostationary orbit
	completedMessage = Success! The satellite is functional and ready for operation.
	
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 58
	maxSimultaneous = 1
	deadline = 365	// 9 months

	targetBody = HomeWorld()	

	// ************ REWARDS ************
	prestige = Trivial
	rewardReputation = @reward
	advanceFunds = @rewardReputation * 100
	failureReputation = @advanceFunds * 0.0005

	DATA {
		type = float
		index = RP0GeostatComIndex
	}	
	BEHAVIOUR {
		name = IncrementIndex
		type = Expression
		CONTRACT_COMPLETED_SUCCESS {
			RP0GeostatComIndex = RP0GeostatComIndex + 1
		}
	}	
	
	// *** Series Number ***
	DATA {
		type = List<float>
		serieses = [1, 1, 1, 1,	2, 2, 2, 2,		2, 2, 2, 2,		3, 3, 3, 3,		3, 3, 3, 3,		4, 4, 4, 4, 4, 4,	4, 4, 4, 4, 4, 4,	5, 5, 5, 5,		6, 6, 6, 6,		6, 6, 6, 6,		6, 6, 6, 6,		6, 6, 6, 6,		7, 7, 7, 7, 7, 7]
	}	
	DATA {
		type = float
		series = @serieses.ElementAt(@index)
	}	

	// *** Contract Number ***
	DATA {
		type = List<float>
		seriesIndices = [0, 1, 2, 3,	0, 1, 2, 3,	4, 5, 6, 7,		0, 1, 2, 3,	4, 5, 6, 7,		0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,	0, 1, 2, 3,		0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,	0, 1, 2, 3, 4, 5]
	}	
	DATA {
		type = float
		seriesIndex = @seriesIndices.ElementAt(@index)
	}	

	// *** Roman Numeral ***
	DATA {
		type = List<string>
		numerals = [ "I", "II", "III", "IV", "V", "VI", "VII" ]
	}
	DATA {
		type = string
		hidden = true
		numeral = @numerals.ElementAt(@series-1)
	}	

	// *** Series Lengths ***
	DATA {
		type = List<float>
		lengths = [		4,		8,		8,		12,		4,		16,		6 ]
	}
	DATA {
		type = float
		length = @lengths.ElementAt(@series-1)
	}	
	
	// *** Payloads ***
	DATA {
		type = List<float>
		payloads = [	80,		150,	750,	1100,	2000,	3600,	4800 ] // Intelsat 2, 3, 4-4A, 5, 6, 7, 9
	}
	DATA {
		type = float
		payload = @payloads.ElementAt(@series-1)
	}	
	
	// *** Rewards ***
	DATA {
		type = List<float>
		rewards = [		200,	300,	400,	500,	600,	700,	800 ]
	}
	DATA {
		type = float
		reward = @rewards.ElementAt(@series-1)
	}	

	// ************ REQUIREMENTS ************
	REQUIREMENT	{
		name = CompleteContract
		type = CompleteContract
		contractType = EarlyComSat
		minCount = 4
		title = Complete @contractType Contract
	}
	REQUIREMENT	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_GeostatCom
		title = Complete @contractType Contract
	}

	// ************ PARAMETERS ************	
	PARAMETER {
		name = GeostatComSat
		type = VesselParameterGroup
		define = GeostatComSat
		dissassociateVesselsOnContractCompletion = true
		title = Maintain a geostationary communications satellite in the target orbit for 3 months
		
		duration = 90d

		PARAMETER {
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER {
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER {
			name = HasCommunicationsPayload
			type = HasResource
			resource = CommunicationsPayload
			minQuantity = @/payload-0.1
			title = Have a CommunicationsPayload of at least @/payload units on the craft
			hideChildren = true
		}
		PARAMETER
		{
			name = None
			type = None
			title = Have no other types of payload aboard
			hideChildren = true

			PARAMETER {
				name = HasNoNavigationalPayload
				type = HasResource
				resource = NavigationalPayload
				title = Have no NavigationalPayload aboard
				hideChildren = true
			}
			PARAMETER {
				name = HasNoMeteorologicalPayload
				type = HasResource
				resource = MeteorologicalPayload
				title = Have no MeteorologicalPayload aboard
				hideChildren = true
			}
			PARAMETER {
				name = HasNoSoundingPayload
				type = HasResource
				resource = SoundingPayload
				title = Have no SoundingPayload aboard
				hideChildren = true
			}
		}
		PARAMETER {
			name = ReachOrbit
			type = Orbit
			minPeriod = 23h 55m 4s
			maxPeriod = 23h 57m 4s
			maxEccentricity = 0.003
			maxInclination = 0.5
			title = Achieve the target orbit. Circular geosynchronous orbit is 35,786 km above the Earth's surface.           
		}	
	}	
	PARAMETER {
		name = VesselPowerCheck
		type = VesselParameterGroup
		vessel = GeostatComSat
		completeInSequence = true
		hideChildren = true
		title = Craft must have power after @/GeostatComSat/duration

		PARAMETER {
			name = HasPower
			type = HasResource
			resource = ElectricCharge
			minQuantity = 1.0
			hideChildren = true
		}
	}
	BEHAVIOUR {
		name = TransferVessel
		type = DestroyVessel
		onState = CONTRACT_SUCCESS
		vessel = GeostatComSat
	}
	BEHAVIOUR {
	name = VesselDestroyed
	type = DialogBox

		DIALOG_BOX {
			title = Vessel Ownership Transferred
			condition = CONTRACT_SUCCESS
			position = CENTER
			width = 0.5

			TEXT {
				text = The contract has been completed successfully. Control of the geostationary communications satellite has been transferred back to broadcast operations.
			}
		}
	}	
}
