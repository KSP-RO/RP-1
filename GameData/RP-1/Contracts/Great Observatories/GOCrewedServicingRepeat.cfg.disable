CONTRACT_TYPE
{
	name = GOCrewedServicingRepeat
	title = Large Space Telescope Crewed Servicing Mission

	group = Great Observatories
	agent = Federation Aeronautique Internationale

	description = <b>Program: Great Observatories<br>Type: <color=green>Required</color></b><br><br>Our crew has been up on our Space Station for a extended stay. We want to continue our research, but need to bring that crew home. Send a new crew to your Space Station and bring the existing crew home.

	synopsis = Send a crew to service @/targetVessel1

	completedMessage = Mission success! The upgraded instrumentation is already producing scientific data.

	// sortKey = 1503

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 0
	maxSimultaneous = 1
	deadline = 0

	targetBody = @/targetBody1

	prestige = Trivial       // 1.0x
	advanceFunds = 0
	rewardScience = 0
	rewardReputation = 40 // placeholder
	rewardFunds = 0
	failureReputation = 0 // was @rewardReputation
	failureFunds = 0

	// ************ REQUIREMENTS ************
  	REQUIREMENT
	{
		name = ProgramActive
		type = ProgramActive
		program = GreatObservatories
	}
 
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = GOLargeSpaceTelescope
	}

	// ************ DATA ************

	DATA
	{
		type = Vessel
		requiredValue = true
		targetVessel1 = AllVessels().Where(v => v.Parts().Where(p => p.AvailablePart("name") == RO-BST01Test || RO-BST02Test || RO-BST03Test || RO-BST04Test || RO-IST01Test || RO-IST02Test || RO-IST03Test || RO-IST04Test) && v.FreeDockingPorts()>0 && (v.MET()> 3y) && v.Vessel() != @index).Random() 
		title = Must have a Space Telescope 1-4 or Infrared Space Telescope 1-4 part, an open docking port, have been in orbit for over 3 years, and not have been the most recently serviced telescope. 
		hidden = true
 	}
	DATA
	{
		type = CelestialBody
		requiredValue = true
		targetBody1 = @/targetVessel1.CelestialBody()
		hidden = true
		title = Get the target body
	}
 
 	DATA
	{
		type = Vessel
		index = $TelescopeLastServiced
	}

	BEHAVIOUR
	{
		name = ServicingReset
		type = Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
			TelescopeLastServiced = @/targetVessel1
		}
	}

	// ************ PARAMETERS ************

	PARAMETER
	{
		name = LSTServicingMission
		type = VesselParameterGroup
		title = Launch a crew to service @/targetvessel1

    		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a new vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 3
			crewOnly = true
			title = Bring a minimum crew of @minCrew
			hideChildren = true
		}
  		PARAMETER
		{
			name = HasDockingPort
			type = PartValidation
			partModule = ModuleDockingNode
			title = Vessel must have a docking port
			hideChildren = true
		}
  		PARAMETER
		{
			name = HasResource
			type = HasResource
			resource = TelescopePayload
			minQuantity = 600 // placeholder, should be at least a few hundred kg, rn is 300 kg worth
			title = Bring @minQuantity units of TelescopePayload as replacement instruments
		}
  		PARAMETER
		{
			name = DockingSequence
			type = Sequence
			title = Dock with @/targetVessel1 for 4 days to allow the engineers to service its instrumentation
   
			PARAMETER
			{
				name = Crewmembers
				type = HasCrew
				trait = Engineer
				minCrew = 2
				crewOnly = true
				title = Have at least 2 engineers on board
				hideChildren = true
			}
			PARAMETER
			{
				name = DockWithTelescope
				type = Docking
				vessel = @/targetVessel1
				title = Dock with @/targetVessel1
	   
			PARAMETER
			{
				name = Duration
				type = Duration
				duration = 4d
				preWaitText = Service @/targetVessel1
				waitingText = Servicing @/targetVessel1 instrumentation
				completionText = Servicing: Complete
				disableOnStateChange = true
			}
		}
		PARAMETER
		{
			name = ReturnHome
			type = RP1ReturnHome
			title = Return crew home safely
			hideChildren = true
			completeInSequence = true
		}

		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
		}
   

	}

}
