CONTRACT_TYPE
{
	name = spaceStationExtensionCrew
	group = HumanHabitationContracts
	
	title = New Crew Module for @/targetStation
	
	description = Send up and dock a new crew module rated for @/crewCapacity astronauts to @/targetStation. The module has to be send uncrewed for safety purpose.
	
	synopsis = Our current @/targetStation is starting to be a bit small. We though a new crew section will suits the needs for bigger habitable space.
	
	completedMessage = Congratulations! Now get ready to send new atronauts to test the module!

	cancellable = true 
	declinable = true		
	deadline = 180

	prestige = Significant
	
	targetBody = HomeWorld()

	maxSimultaneous = 1
	
	// reward block
	advanceFunds = 35000 * (@/crewCapacity)/4
	rewardReputation = 400.0 * (@/crewCapacity)/4
	rewardFunds = @advanceFunds
	failureReputation = @rewardReputation * 2
	failureFunds = @advanceFunds * 2
	
	DATA
	{
		type = int
		crewCapacity = Round(Random(2,8),1)
	}
	
	DATA
    	{
        	type = Vessel
		uniquenessCheck = GROUP_ACTIVE
		requiredValue = true
        	targetStation = HomeWorld().AllVessels().Where(v => v.VesselType() == Station && v.EmptyCrewSpace()<4 && v.FreeDockingPorts() >= 1).SelectUnique()
		title = Must have a station with less than 4 empty seats and one free docking port.
    	}
	
	PARAMETER
	{
		name = vesselGroupCrew
		type = VesselParameterGroup
		title = Bring a new crew module to @/targetStation.
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
		}
		
		PARAMETER
		{
			name = NoCrew
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}
		
		PARAMETER
        {
            name = HasCapacity
            type = HasCrewCapacity
			
            minCapacity = @/crewCapacity
            title = Space for @/crewCapacity crew.
        }
		
		PARAMETER
		{
			name = Docking
			type = Docking
			title = Dock the crew module to @/targetStation.
			vessel = @/targetStation
		}
	}
}
