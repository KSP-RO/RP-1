//Sounding rocket records
//NOTE: Be careful changing or disabling these, as they are referenced by the sounding rocket contracts
//    to track how high we've gotten.
CONTRACT_TYPE
{
    name = recordUncrewedAlt
	group = Records
	
    title = Uncrewed Altitude Record of @uncrewedTargetAltitudeKM km.
    description = We want you to set a new uncrewed altitude record! Reach @uncrewedTargetAltitudeKM km.
	genericTitle = Uncrewed Altitude Record
    genericDescription = We want you to set a new uncrewed altitude record!
    synopsis = Set an uncrewed altitude record of @uncrewedTargetAltitudeKM km.
    completedMessage = Congratulations! You've set a new uncrewed altitude record!
	
	agent = Federation Aeronautique Internationale

    autoAccept = true
	cancellable = false
	declinable = false
	
	prestige = Trivial

    targetBody = HomeWorld()

    // Can only have one active
    maxSimultaneous = 1

    // Contract rewards
    rewardFunds = 200.0 + @uncrewedTargetAltitude*0.005
	rewardReputation = 4.0 + @uncrewedTargetAltitude*0.00001
    
    DATA
    {
        type = List<float>

		//NOTE: SoundingRocket contracts refer into this list by index, to track reached altitude. If you change this list, you must also update them.
        soundingAlts = [ 10000, 20000, 30000, 40000, 50000, 60000, 80000, 100000, 120000, 140000, 160000, 180000, 200000, 300000, 400000, 500000, 600000, 700000, 800000, 900000, 1000000 ]
    }

    // Break this into two steps to work around ContractConfigurator#260
    DATA
    {
        type = float

        soundingAltIndex = RP0_SoundingAltitudeIndex
    }

    DATA
    {
        type = float

        uncrewedTargetAltitude = @soundingAlts.ElementAt(@soundingAltIndex)
    }
	DATA
    {
        type = float

        uncrewedTargetAltitudeKM = @uncrewedTargetAltitude*0.001
    }

    PARAMETER
    {
        name = ReachState
        type = ReachState

        minAltitude = @/uncrewedTargetAltitude
    }

    BEHAVIOUR
    {
        name = IncrementIndex
        type = Expression

        CONTRACT_COMPLETED_SUCCESS
        {
            RP0_SoundingAltitudeIndex = RP0_SoundingAltitudeIndex + 1
        }
    }

    REQUIREMENT
    {
        type = Expression
        title = Altitude

        expression = @/soundingAltIndex < @/soundingAlts.Count()
    }
}
