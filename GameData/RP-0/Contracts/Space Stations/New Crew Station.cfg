CONTRACT_TYPE
{
	name = NewCrewStation
	title = Send a New Crew to @/targetVessel1
	genericTitle = Send a New Crew to Your Station
	group = SpaceStations
	agent = Stations

	description = Through some fault of, well...yours, there is a station that is in orbit without any crew. Send a new crew to your space station.

	synopsis = Send a new crew to @/targetVessel1

	completedMessage = Congratulations! The new crew is safely aboard your station awaiting further orders.

	sortKey = 1506

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 0
	maxSimultaneous = 1
	deadline = 180  // 6 months

	targetBody = @/targetBody1



	prestige = Trivial       // 1.0x
	advanceFunds = (Round(Random(5000, 10000))) * @RP0:globalHardContractMultiplier
	rewardScience = 0
	rewardReputation = Round(Random(1,5))
	rewardFunds = (@/targetVessel1.CrewCount() >4 ? @/targetVessel1.CrewCount()*10000 : Random(40000, 60000.0)) * @RP0:globalHardContractMultiplier
	failureReputation = @rewardReputation
	failureFunds = @advanceFunds * 0.5

	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_spaceStation
	}

	// ************ DATA ************

	DATA
	{
		type = Vessel
		requiredValue = true
		hidden = true
		uniquenessCheck = GROUP_ACTIVE
		targetVessel1 = AllVessels().Where(v => v.VesselType() == Station && v.CrewCount()==0 && v.FreeDockingPorts()>0).SelectUnique()
		title = Must have a station with no crew on board
	}
	DATA
	{
		type = CelestialBody
		requiredValue = true
		targetBody1 = @/targetVessel1.CelestialBody()
		hidden = true
	}
	DATA
	{
		type = int
		requiredValue = true
		targetCapacity = Max(@/targetVessel1.CrewCapacity(), 2)
		hidden = true
	}

	// ************ PARAMETERS ************

	PARAMETER
	{
		name = NewCrew
		type = VesselParameterGroup
		title = Send a New Crew to @/targetVessel1
		disableOnStateChange = true

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			minCrew = 2
			maxCrew = @/targetCapacity
		}
		PARAMETER
		{
			name = DockingPort
			type = PartValidation
			partModule = ModuleDockingNode
			minCount = 1
			title = Have at least 1 Docking Port
			hideChildren = true
		}
	}

	PARAMETER
	{
		name = DockWithStation
		type = Docking
		vessel = @/targetVessel1
		title = Dock @/targetVessel1
		hideChildren = true
		disableOnStateChange = true
	}
}
