// Proc Fairings
@PART[*]:HAS[@MODULE[KzFairingBaseResizer]]:FOR[RP-0]
{
	@cost = 1
	@MODULE[KzFairingBaseResizer]
	{
		@costPerTonne = 10
	}
}
@PART[*]:HAS[@MODULE[KzThrustPlateResizer]]:FOR[RP-0]
{
	@cost = 1
	@MODULE[KzThrustPlateResizer]
	{
		@costPerTonne = 10
	}
}
@PART[*]:HAS[@MODULE[ProceduralFairingSide]]:FOR[RP-0]
{
	%RP0conf = true
	@cost = 1aw
	@TechRequired = start
	@MODULE[ProceduralFairingSide]
	{
		@costPerTonne = 15
	}
}

// Proc Parts
// FIXME remove on Proc Parts update
@PART[proceduralSRBRealFuels]:FOR[RP-0]
{
	@MODULE[ProceduralPart]
	{
		%costPerkL = 40
	}
	@MODULE[ProceduralSRB]
	{
		%costMultiplier = 0.5 // times thrust, = cost
	}
}
@PART[proceduralStructural|proceduralNoseCone]:FOR[RP-0]
{
	@MODULE[ProceduralPart]
	{
		%costPerkL = 1
	}
}
@PART[proceduralBattery]:FOR[RP-0]
{
	@MODULE[ProceduralPart]
	{
		%costPerkL = 2050
	}
}
@PART[proceduralCrewTube]:FOR[RP-0]
{
	@MODULE[ProceduralPart]
	{
		%costPerkL = 24.5
	}
}

// Real Fuels
@PART[*]:HAS[@MODULE[ModuleFuelTanks]:HAS[~basemass[]]]:BEFORE[RP-0]
{
	@cost = 1 // autocalc cost
}
// shielded tank
@PART[RO-ProcTankSpaceplane]:FOR[RP-0]
{
	@MODULE[ProceduralPart]
	{
		%costPerkL = 40
	}
}
// tank type costs
// set base cost
@MFSSETTINGS[MFSSettings]:FOR[RP-0]
{
	%baseCostPV = 0.004
}
// nominal cost, same as default
@TANK_DEFINITION[Default]:FOR[RP-0]
{
	%baseCost = 0.004 * volume
}
// a bit more
@TANK_DEFINITION[Cryogenic|Fuselage]:FOR[RP-0]
{
	%baseCost = 0.01 * volume
}
// this costs less
@TANK_DEFINITION[Structural]:FOR[RP-0]
{
	%baseCost = 0.002 * volume
}
// these cost more:
@TANK_DEFINITION[Balloon|ElectricPropulsion]:FOR[RP-0]
{
	%baseCost = 0.014 * volume
}
@TANK_DEFINITION[ServiceModule|BalloonCryo]:FOR[RP-0]
{
	%baseCost = 0.018 * volume
}
// FIXME: Should tanks, as well as parts, have costs? Certainly. Should it vary? Yes, but NOT NOW
@TANK_DEFINITION[*]:FOR[RP-0]
{
	@TANK,*:HAS[~cost[]]
	{
		%cost = 0.0025
	}
}
@TANK_DEFINITION[Balloon|BalloonCryo]:FOR[RP-0]
{
	@TANK,*
	{
		%cost = 0.0 // Balloon itself is the cost
	}
}
// First bit of variation
@TANK_DEFINITION[*]:FOR[RP-0]
{
	@TANK[LqdHydrogen]
	{
		%cost = 0.01
	}
}
@TANK_DEFINITION[*]:FOR[RP-0]
{
	@TANK[ElectricCharge]
	{
		%cost = 5 // ~$18,000 per kWh (5 per MJ)
	}
}
// More expensive in early / plane tanks
@TANK_DEFINITION[Fuselage]:FOR[RP-0]
{
	@TANK[ElectricCharge]
	{
		%cost = 10 // ~$36,000 per kWh (10 per MJ)
	}
}

// Catch parts that contain RF tanks but are priced in the tree
@PART[*]:HAS[@MODULE[ModuleFuelTanks]:HAS[#basemass[-1]],#RP0conf[true],~TechRequired[ORPHANS]]:AFTER[RP-0]
{
	@MODULE[ModuleFuelTanks]
	{
		%baseCost = -1
	}
}

// Pwings
@PART[*]:HAS[@MODULE[WingManipulator]]:FOR[RP-0]
{
	@MODULE[WingManipulator]
	{
		%costDensity = 530
		%costDensityControl = 650
	}
}
// B9 pWings
@PART[*]:HAS[@MODULE[WingProcedural]]:FOR[RP-0]
{
	@MODULE[WingProcedural]
	{
		%aeroConstCostDensity = 320
		%aeroConstCostDensityControl = 540
	}
}
// New supersonic wings
@PART[RO-B9ProcWing-Supersonic|RO-B9ProcCS-Supersonic|RO-B9ProcAMWing-Supersonic]:FOR[RP-0]
{
	@MODULE[WingProcedural]
	{
		%aeroConstCostDensity = 160
		%aeroConstCostDensityControl = 270
	}
}
// New early wings
@PART[RO-B9ProcWing-Early|RO-B9ProcCS-Early|RO-B9ProcAMWing-Early]:FOR[RP-0]
{
	@MODULE[WingProcedural]
	{
		%aeroConstCostDensity = 50
		%aeroConstCostDensityControl = 85
	}
}

// RealChute
@PART[*]:HAS[@MODULE[ProceduralChute],~RSSROConfig[]]:FOR[RP-0]
{
	@MODULE[ProceduralChute]
	{
		@SIZE,*
		{
			@cost *= 0.001
			@caseMass *= 0.1
		}
	}
}
@PART[RC_radial]:FOR[RP-0]
{
	@MODULE[ProceduralChute]
	{
		@SIZE,*
		{
			@cost *= 0.001
			@caseMass *= 0.1
		}
	}
}
@MATERIAL[Silk]:FOR[RP-0]
{
	@areaCost = 0.1
}
@MATERIAL[Nylon]:FOR[RP-0]
{
	@areaCost = 0.2
}
@MATERIAL[Kevlar]:FOR[RP-0]
{
	@areaCost = 0.3
}
