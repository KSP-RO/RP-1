// ============================================================================
// Add Reliability module to supported parts
// ============================================================================

@PART[kerbalism-lifesupportmodule]:NEEDS[ProfileDefault,FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ProcessController
		title = ECLSS
		redundancy = Life Support
		repair = true // anyone
		mtbf = 72576000 // in seconds
		extra_cost = 2.5
		extra_mass = 0.1
	}
}

@PART[kerbalism-activeshield]:NEEDS[ProfileDefault,FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = Emitter
		title = Shield
		repair = Engineer
		mtbf = 72576000
		extra_cost = 2.5
		extra_mass = 0.1
	}
}

@PART[*]:HAS[#CrewCapacity[>0],!MODULE[KerbalSeat]]:NEEDS[ProfileDefault,FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ProcessController
		title = ECLSS
		redundancy = Life Support
		repair = true // anyone
		mtbf = 72576000
		extra_cost = 0.625
		extra_mass = 0.025

		// Lighter parts last longer - max. ~16 years (~64 years in high quality),
		// heavier parts last shorter - min. ~4 years (~16 years in high quality).
		// Built in reliability modules don't take the whole part's mass into account, but their respective extra_mass.
		// See end of file for finalizing mtbf patches.
		// mtbf_nerf = #$/mass$
		// @mtbf_nerf *= #$extra_mass$
		// @mtbf /= #$mtbf_nerf$
		// @mtbf /= 89 // just a good plain Fibonacci number
		// @mtbf ^= :\.\d+$:: // remove dot and decimal places if existing
	}
}

@PART[*]:HAS[@MODULE[SolarPanelFixer],!MODULE[ModuleCommand]]:NEEDS[FeatureReliability]:AFTER[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = SolarPanelFixer
		title = Solar Panel
		redundancy = Power Generation
		repair = true
		mtbf = 36288000
		extra_cost = 2.5
		extra_mass = 1.0
	}
}

@PART[*]:HAS[@MODULE[SolarPanelFixer],@MODULE[ModuleCommand],#CrewCapacity[<1]]:NEEDS[FeatureReliability]:AFTER[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = SolarPanelFixer
		title = Solar Panel
		redundancy = Power Generation
		repair = true
		mtbf = 36288000
		extra_cost = 0.25
		extra_mass = 0.1
	}
}

@PART[*]:HAS[@MODULE[SolarPanelFixer],@MODULE[ModuleCommand],~CrewCapacity[]]:NEEDS[FeatureReliability]:AFTER[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = SolarPanelFixer
		title = Solar Panel
		redundancy = Power Generation
		repair = true
		mtbf = 36288000
		extra_cost = 0.25
		extra_mass = 0.1
	}
}

@PART[*]:HAS[@MODULE[SolarPanelFixer],@MODULE[ModuleCommand],#CrewCapacity[>0]]:NEEDS[FeatureReliability]:AFTER[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = SolarPanelFixer
		title = Solar Panel
		redundancy = Power Generation
		repair = true
		mtbf = 36288000
		extra_cost = 0.125
		extra_mass = 0.05
	}
}

@PART[*]:HAS[@MODULE[ModuleReactionWheel],!MODULE[ModuleCommand],#CrewCapacity[<1]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleReactionWheel
		title = Reaction Wheel
		redundancy = Attitude Control
		repair = true
		mtbf = 36288000
		extra_cost = 2.5
		extra_mass = 1.0
	}
}

@PART[*]:HAS[@MODULE[ModuleReactionWheel],!MODULE[ModuleCommand],~CrewCapacity[]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleReactionWheel
		title = Reaction Wheel
		redundancy = Attitude Control
		repair = true
		mtbf = 36288000
		extra_cost = 2.5
		extra_mass = 1.0
	}
}

@PART[*]:HAS[@MODULE[ModuleReactionWheel],@MODULE[ModuleCommand],#CrewCapacity[<1]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleReactionWheel
		title = Reaction Wheel
		redundancy = Attitude Control
		repair = true
		mtbf = 36288000
		extra_cost = 0.25
		extra_mass = 0.15
	}
}

@PART[*]:HAS[@MODULE[ModuleReactionWheel],@MODULE[ModuleCommand],~CrewCapacity[]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleReactionWheel
		title = Reaction Wheel
		redundancy = Attitude Control
		repair = true
		mtbf = 36288000
		extra_cost = 0.25
		extra_mass = 0.15
	}
}

@PART[*]:HAS[@MODULE[ModuleReactionWheel],@MODULE[ModuleCommand],#CrewCapacity[>0]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleReactionWheel
		title = Reaction Wheel
		redundancy = Attitude Control
		repair = true
		mtbf = 36288000
		extra_cost = 0.2
		extra_mass = 0.05
	}
}

@PART[*]:HAS[@MODULE[ModuleRCSFX],!MODULE[ModuleCommand],#CrewCapacity[<1]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleRCSFX
		title = RCS
		redundancy = Attitude Control
		repair = Engineer
		mtbf = 72576000
		extra_cost = 2.0
		extra_mass = 1.0
	}
}

@PART[*]:HAS[@MODULE[ModuleRCSFX],!MODULE[ModuleCommand],~CrewCapacity[]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleRCSFX
		title = RCS
		redundancy = Attitude Control
		repair = Engineer
		mtbf = 72576000
		extra_cost = 2.0
		extra_mass = 1.0
	}
}

@PART[*]:HAS[@MODULE[ModuleRCS],!MODULE[ModuleCommand],#CrewCapacity[<1]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleRCS
		title = RCS
		redundancy = Attitude Control
		repair = Engineer
		mtbf = 72576000
		extra_cost = 2.0
		extra_mass = 1.0
	}
}

@PART[*]:HAS[@MODULE[ModuleRCS],!MODULE[ModuleCommand],~CrewCapacity[]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleRCS
		title = RCS
		redundancy = Attitude Control
		repair = Engineer
		mtbf = 72576000
		extra_cost = 2.0
		extra_mass = 1.0
	}
}

@PART[*]:HAS[@MODULE[ModuleRCSFX],@MODULE[ModuleCommand],#CrewCapacity[<1]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleRCSFX
		title = RCS
		redundancy = Attitude Control
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.2
		extra_mass = 0.1
	}
}

@PART[*]:HAS[@MODULE[ModuleRCSFX],@MODULE[ModuleCommand],~CrewCapacity[]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleRCSFX
		title = RCS
		redundancy = Attitude Control
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.2
		extra_mass = 0.1
	}
}

@PART[*]:HAS[@MODULE[ModuleRCS],@MODULE[ModuleCommand],#CrewCapacity[<1]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleRCS
		title = RCS
		redundancy = Attitude Control
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.2
		extra_mass = 0.1
	}
}

@PART[*]:HAS[@MODULE[ModuleRCS],@MODULE[ModuleCommand],~CrewCapacity[]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleRCS
		title = RCS
		redundancy = Attitude Control
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.2
		extra_mass = 0.1
	}
}

@PART[*]:HAS[@MODULE[ModuleRCSFX],@MODULE[ModuleCommand],#CrewCapacity[>0]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleRCSFX
		title = RCS
		redundancy = Attitude Control
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.1
		extra_mass = 0.05
	}
}

@PART[*]:HAS[@MODULE[ModuleRCS],@MODULE[ModuleCommand],#CrewCapacity[>0]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleRCS
		title = RCS
		redundancy = Attitude Control
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.1
		extra_mass = 0.05
	}
}

@PART[*]:HAS[@MODULE[ModuleLight],!MODULE[ModuleCommand],#CrewCapacity[<1]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleLight
		title = Light
		repair = true // anyone
		mtbf = 36288000
		extra_cost = 5.0
		extra_mass = 1.0
	}
}

@PART[*]:HAS[@MODULE[ModuleLight],!MODULE[ModuleCommand],~CrewCapacity[]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleLight
		title = Light
		repair = true // anyone
		mtbf = 36288000
		extra_cost = 5.0
		extra_mass = 1.0
	}
}

@PART[*]:HAS[@MODULE[ModuleLight],@MODULE[ModuleCommand],#CrewCapacity[<1]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleLight
		title = Light
		repair = true // anyone
		mtbf = 36288000
		extra_cost = 0.1
		extra_mass = 0.05
	}
}

@PART[*]:HAS[@MODULE[ModuleLight],@MODULE[ModuleCommand],~CrewCapacity[]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleLight
		title = Light
		repair = true // anyone
		mtbf = 36288000
		extra_cost = 0.1
		extra_mass = 0.05
	}
}

@PART[*]:HAS[@MODULE[ModuleLight],@MODULE[ModuleCommand],#CrewCapacity[>0]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleLight
		title = Light
		repair = true // anyone
		mtbf = 36288000
		extra_cost = 0.05
		extra_mass = 0.01
	}
}

@PART[*]:HAS[@MODULE[ModuleParachute]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleParachute
		title = Parachute
		redundancy = Landing
		repair = true // anyone
		mtbf = 72576000
		extra_cost = 2.5
		extra_mass = 0.5
	}
}

@PART[*]:HAS[@MODULE[ModuleEngines]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleEngines
		title = Engine
		redundancy = Propulsion
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.1
	}
}


@PART[*]:HAS[@MODULE[ModuleEnginesFX]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleEnginesFX
		title = Engine
		redundancy = Propulsion
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.1
	}
}

@PART[*]:HAS[@MODULE[ModuleEnginesRF]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleEnginesRF
		title = Engine
		redundancy = Propulsion
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.1
	}
}

@PART[*]:HAS[@MODULE[ModuleDeployableRadiator],!MODULE[ModuleActiveRadiator],!MODULE[ModuleCommand],#CrewCapacity[<1]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleDeployableRadiator
		title = Radiator
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.25
	}
}

@PART[*]:HAS[@MODULE[ModuleDeployableRadiator],!MODULE[ModuleActiveRadiator],!MODULE[ModuleCommand],~CrewCapacity[]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleDeployableRadiator
		title = Radiator
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.25
	}
}

@PART[*]:HAS[@MODULE[ModuleDeployableRadiator],!MODULE[ModuleActiveRadiator],@MODULE[ModuleCommand],#CrewCapacity[<1]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleDeployableRadiator
		title = Radiator
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.2
		extra_mass = 0.1
	}
}

@PART[*]:HAS[@MODULE[ModuleDeployableRadiator],!MODULE[ModuleActiveRadiator],@MODULE[ModuleCommand],~CrewCapacity[]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleDeployableRadiator
		title = Radiator
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.2
		extra_mass = 0.1
	}
}

@PART[*]:HAS[@MODULE[ModuleDeployableRadiator],!MODULE[ModuleActiveRadiator],@MODULE[ModuleCommand],#CrewCapacity[>0]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleDeployableRadiator
		title = Radiator
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.1
		extra_mass = 0.05
	}
}

@PART[*]:HAS[@MODULE[ModuleActiveRadiator],!MODULE[ModuleDeployableRadiator],!MODULE[ModuleCommand],#CrewCapacity[<1]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleActiveRadiator
		title = Radiator
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.25
	}
}

@PART[*]:HAS[@MODULE[ModuleActiveRadiator],!MODULE[ModuleDeployableRadiator],!MODULE[ModuleCommand],~CrewCapacity[]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleActiveRadiator
		title = Radiator
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.25
	}
}

@PART[*]:HAS[@MODULE[ModuleActiveRadiator],!MODULE[ModuleDeployableRadiator],@MODULE[ModuleCommand],#CrewCapacity[<1]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleActiveRadiator
		title = Radiator
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.2
		extra_mass = 0.1
	}
}

@PART[*]:HAS[@MODULE[ModuleActiveRadiator],!MODULE[ModuleDeployableRadiator],@MODULE[ModuleCommand],~CrewCapacity[]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleActiveRadiator
		title = Radiator
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.2
		extra_mass = 0.1
	}
}

@PART[*]:HAS[@MODULE[ModuleActiveRadiator],!MODULE[ModuleDeployableRadiator],@MODULE[ModuleCommand],#CrewCapacity[>0]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleActiveRadiator
		title = Radiator
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.1
		extra_mass = 0.05
	}
}

@PART[*]:HAS[@MODULE[ModuleDeployableRadiator],@MODULE[ModuleActiveRadiator],!MODULE[ModuleCommand],#CrewCapacity[<1]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleDeployableRadiator
		title = Radiator motor
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.25
	}

	MODULE
	{
		name = Reliability
		type = ModuleActiveRadiator
		title = Radiator panel
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.25
	}
}

@PART[*]:HAS[@MODULE[ModuleDeployableRadiator],@MODULE[ModuleActiveRadiator],!MODULE[ModuleCommand],~CrewCapacity[]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleDeployableRadiator
		title = Radiator motor
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.25
	}

	MODULE
	{
		name = Reliability
		type = ModuleActiveRadiator
		title = Radiator panel
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.25
	}
}

@PART[*]:HAS[@MODULE[ModuleDeployableRadiator],@MODULE[ModuleActiveRadiator],@MODULE[ModuleCommand],#CrewCapacity[<1]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleDeployableRadiator
		title = Radiator motor
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.2
		extra_mass = 0.1
	}

	MODULE
	{
		name = Reliability
		type = ModuleActiveRadiator
		title = Radiator panel
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.2
		extra_mass = 0.1
	}
}

@PART[*]:HAS[@MODULE[ModuleDeployableRadiator],@MODULE[ModuleActiveRadiator],@MODULE[ModuleCommand],~CrewCapacity[]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleDeployableRadiator
		title = Radiator motor
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.2
		extra_mass = 0.1
	}

	MODULE
	{
		name = Reliability
		type = ModuleActiveRadiator
		title = Radiator panel
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.2
		extra_mass = 0.1
	}
}

@PART[*]:HAS[@MODULE[ModuleDeployableRadiator],@MODULE[ModuleActiveRadiator],@MODULE[ModuleCommand],#CrewCapacity[>0]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleDeployableRadiator
		title = Radiator motor
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.1
		extra_mass = 0.05
	}

	MODULE
	{
		name = Reliability
		type = ModuleActiveRadiator
		title = Radiator panel
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.1
		extra_mass = 0.05
	}
}

@PART[*]:HAS[@MODULE[ModuleResourceConverter]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleResourceConverter
		title = Converter
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.2
		// @extra_mass *= 0.2 // is this intended? Does it make sense?
	}
}

@PART[*]:HAS[@MODULE[ModuleResourceHarvester]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleResourceHarvester
		title = Harvester
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.2
	}
}

@PART[*]:HAS[@MODULE[ModuleScienceExperiment],!MODULE[ModuleCommand],#CrewCapacity[<1]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleScienceExperiment
		title = ScienceInstrument
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.5
		extra_mass = 0.1
	}
}

@PART[*]:HAS[@MODULE[ModuleScienceExperiment],!MODULE[ModuleCommand],~CrewCapacity[]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleScienceExperiment
		title = ScienceInstrument
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.5
		extra_mass = 0.1
	}
}

@PART[*]:HAS[@MODULE[ModuleScienceExperiment],@MODULE[ModuleCommand],#CrewCapacity[<1]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleScienceExperiment
		title = ScienceInstrument
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.05
		extra_mass = 0.01
	}
}

@PART[*]:HAS[@MODULE[ModuleScienceExperiment],@MODULE[ModuleCommand],~CrewCapacity[]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleScienceExperiment
		title = ScienceInstrument
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.05
		extra_mass = 0.01
	}
}

@PART[*]:HAS[@MODULE[ModuleScienceExperiment],@MODULE[ModuleCommand],#CrewCapacity[>0]]:NEEDS[FeatureReliability]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleScienceExperiment
		title = ScienceInstrument
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.025
		extra_mass = 0.005
	}
}

@PART[*]:HAS[@MODULE[ModuleDataTransmitter],!MODULE[ModuleCommand],#CrewCapacity[<1]]:NEEDS[FeatureReliability,!RemoteTech]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleDataTransmitter
		title = Data Transmitter
		redundancy = Communication
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.1
	}
}

@PART[*]:HAS[@MODULE[ModuleDataTransmitter],!MODULE[ModuleCommand],~CrewCapacity[]]:NEEDS[FeatureReliability,!RemoteTech]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleDataTransmitter
		title = Data Transmitter
		redundancy = Communication
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.1
	}
}

@PART[*]:HAS[@MODULE[ModuleDataTransmitter],@MODULE[ModuleCommand],#CrewCapacity[<1]]:NEEDS[FeatureReliability,!RemoteTech]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleDataTransmitter
		title = Data Transmitter
		redundancy = Communication
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.5
		extra_mass = 0.01
	}
}

@PART[*]:HAS[@MODULE[ModuleDataTransmitter],@MODULE[ModuleCommand],~CrewCapacity[]]:NEEDS[FeatureReliability,!RemoteTech]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleDataTransmitter
		title = Data Transmitter
		redundancy = Communication
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.5
		extra_mass = 0.01
	}
}

@PART[*]:HAS[@MODULE[ModuleDataTransmitter],@MODULE[ModuleCommand],#CrewCapacity[>0]]:NEEDS[FeatureReliability,!RemoteTech]:FOR[Kerbalism]
{
	MODULE
	{
		name = Reliability
		type = ModuleDataTransmitter
		title = Data Transmitter
		redundancy = Communication
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.05
		extra_mass = 0.001
	}
}

// This increases MTBF for light parts while decreasing it for heavy ones.
// For parts with a low extra mass (i.e. upgrade to higher reliability costs a
// smaller fraction of total mass) the nerf is not as strong.
// Depending on reliability mass fraction (i.e. extra_mass) parts below 0.01-0.1 metric tonnes gain MTBF.
// Heavy parts rely on the lowbass filter to ensure they get a minimum MTBF.
// This is just explaining what this does, I don't know why it was designed this way.

// 1. This breaks when MM can't find the mass of a part.
// 2. What's the mass-mtbf correlation? Is this only to increase the variability of the MTBF in parts?
//    I'd suggest that when a MTBF value isn't what it should be to adjusting it
//    where it is defined, instead of globally changing them based on a metric
//    that has nothing at all to do with it.
// @PART[*]:HAS[@MODULE[Reliability],!MODULE[KerbalEVA]]:AFTER[Kerbalism]
// {
// 	@MODULE[Reliability]:HAS[~type[ProcessController]],*
// 	{
// 		mtbf_nerf = #$/mass$
// 		@mtbf_nerf *= #$extra_mass$
// 		@mtbf /= #$mtbf_nerf$
// 		@mtbf /= 89 // just a good plain Fibonacci number
// 		@mtbf ^= :\.\d+$:: // remove dot and decimal places if existing
// 	}
// }

// Low-Pass filter: stuff that will break within a year is not space-rated.
@PART[*]:HAS[@MODULE[Reliability],!MODULE[KerbalEVA]]:AFTER[Kerbalism]
{
	@MODULE[Reliability]:HAS[#mtbf[<9321480]],*
	{
		@mtbf = 9321480 // lowpass filter (420 kerbin days at normal reliablity)
	}
}

// Don't put an upper limit on MTBF. If parts are exremely reliable, it
// probably is intentional. If the values are wrong, fix them there.
// @PART[*]:HAS[@MODULE[Reliability],!MODULE[KerbalEVA]]:AFTER[Kerbalism]
// {
// 	@MODULE[Reliability]:HAS[#mtbf[>145152000]],*
// 	{
// 		@mtbf = 145152000 // highpass filter (4.6 years at normal reliablity)
// 	}
// }

@PART[*]:HAS[@MODULE[Reliability],!MODULE[KerbalEVA]]:AFTER[Kerbalism]
{
	@MODULE[Reliability]:HAS[#title[Treadmill]],*
	{
		@extra_cost = 0.1
	}
}

// @PART[*]:HAS[@MODULE[Reliability],!MODULE[KerbalEVA]]:AFTER[zzzKerbalism]
// {
// 	@MODULE[Reliability],*
// 	{
// 		!mtbf_nerf = delete
// 	}
// }
