CONTRACT_TYPE
{
    name = recordCrewedCount
	group = HumanRecords
	
    title = Crew Count Record of @crewedTargetCount Crew
    description = We want you to set a new crew count record! Have at least @crewedTargetCount crew on the same spacecraft/station at the same time.
	genericTitle = Crew Count Record
    genericDescription = We want you to set a new crew count record! Have at least the specified crew amount on the same spacecraft/station at the same time.
    synopsis = Set a crew count record of @crewedTargetCount
    completedMessage = Congratulations! You've set a new crew count record!
	
	agent = Federation Aeronautique Internationale

    autoAccept = true
	cancellable = true
	declinable = false
	
	prestige = Trivial
	
	targetBody = HomeWorld()

    // Can only have one active
    maxSimultaneous = 1

    // Contract rewards
    rewardFunds = (20000.0 + @crewedTargetCount * 30000) * @RP0:globalHardContractMultiplier
	rewardReputation = 30.0 + @crewedTargetCount * 5

    DATA
    {
        type = List<float>

        crewCounts = [ 2, 3, 4, 5, 10 ]
    }

    // Break this into two steps to work around ContractConfigurator#260
    DATA
    {
        type = float

        crewCountsIndex = RP0_CrewCountIndex
    }

    DATA
    {
        type = float

        crewedTargetCount = @crewCounts.ElementAt(@crewCountsIndex)
    }
	PARAMETER
	{
		name = crewCountInSpace
		type = All
		title = Have @/crewedTargetCount on the same vessel while in space in a stable orbit.
		
		disableOnStateChange = False
		
		PARAMETER
		{
			name = ReachState
			type = ReachState
			situation = ORBITING
			situation = ESCAPING
			
			targetBody = AllBodies()
			
			disableOnStateChange = False
		}
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			minCrew = @/crewedTargetCount
			
			disableOnStateChange = False
		}
	}

    BEHAVIOUR
    {
        name = IncrementIndex
        type = Expression

        CONTRACT_COMPLETED_SUCCESS
        {
            RP0_CrewCountIndex = RP0_CrewCountIndex + 1
        }
    }

    REQUIREMENT
    {
        type = Expression
        title = Crew Count

        expression = @/crewCountsIndex < @/crewCounts.Count()
    }
}
