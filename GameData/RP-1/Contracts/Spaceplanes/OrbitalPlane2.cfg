CONTRACT_TYPE
{
	name = OrbitalSpaceplane2
	title = Orbital Spaceplane with Maneuvers and 2+ Crew
	group = EarlySpacePlanes


	description = <b>Program: Crewed Spaceplane Development<br>Type: <color=blue>Optional</color></b><br><br>Putting two people into space in the same spaceplane opens the door to a range of new activities and opportunities. Such a spacecraft must remain in orbit with its crew @/DurationText days and return them safely to Earth.&br;&br;<b><color=white>NOTE: You can not select this contract and 'Orbital Flight with Maneuvers and 2+ Crew' at the same time. If you select the other contract while this is active, this will automatically fail.</color></b>&br;&br;<b><color=yellow>NOTE: This contract requires a horizontal landing on the space center runway.</color> If playing from the Cape, the Space Shuttle runway provided by the RSS-CanaveralHD mod is also a valid landing target.</b>&br;&br;<b>Number of Contracts Completed: @index / unlimited</b>

	genericDescription = Launch a spaceplane with two people onboard into orbit for a routine mission for the specified number of days, perform the required orbit change, and then return safely home to a runway landing.

	synopsis = Fly a two-plus-person LEO Orbital mission in a spaceplane.

	completedMessage = Crew landed safely after the mission--congratulations!

	sortKey = 611

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 0
	maxSimultaneous = 1
	deadline = 0

	targetBody = HomeWorld()


	// ************ REWARDS ************
	prestige = Trivial       // 1.0x
	advanceFunds = 0
	rewardScience = 0
	rewardFunds = 0
	failureFunds = 0
	rewardReputation = 240 // 20% more than capsule, because landing is harder
	failureReputation = 0 // was @rewardReputation

	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = ProgramActive
		type = ProgramActive
		program = CrewedSpaceplaneDev
	}

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitalSpaceplane1
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitalSpaceplane3
		invertRequirement = true
	}
	
	REQUIREMENT
	{
		name = NotCapsule
		type = AcceptContract
		contractType = OrbitalFlight2
		invertRequirement = True
	}

	DATA
	{
		type = Duration
		title = Duration
		FirstDuration = Round(Random(1d, 4d), 1d)
		title = How long in first orbit?
	}
	
	DATA
	{
		type = int
		startPeA = 150000 + Round(Random(0, 55000), 10000)
		title = Starting PeA
	}
	
	DATA
	{
		type = int
		startApA = 225000 + Round(Random(0, 105000), 25000)
		title = Starting ApA
	}
	
	DATA
	{
		type = double
		SecondDurationDouble = Round(Random(86400, 518400), 86400)
		title = How long in 2nd orbit?
	}
	
	DATA
	{
		type = Duration
		title = Duration
		SecondDuration = @SecondDurationDouble
	}
	
	DATA
	{
		type = int
		endApA = @startApA + Round(Random(150000, 800000), 25000)
		title = 2nd Orbit ApA
	}
	
	DATA
	{
		type = double
		DurationText = (@FirstDuration + @SecondDuration) / 86400
		title = Total Duration of Mission
	}
	
	DATA
	{
		type = int
		index = $OrbitalSpaceplane2_Count + 0
	}

	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression
		
		CONTRACT_COMPLETED_SUCCESS
		{
			OrbitalSpaceplane2_Count = $OrbitalSpaceplane2_Count + 1
		}
	}

	// ************ PARAMETERS ************
	
	PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup
		title = Crewed orbital
		completeInSequence = true
	
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a new vessel
			hideChildren = true
		}

		PARAMETER
		{
			name = TwoCrew
			type = HasCrew
			minCrew = 2
			crewOnly = true
			title = Have 2 crewmembers on board
			hideChildren = true
			disableOnStateChange = true    // Probably to prevent the timers from getting reset when EVAing a naut
		}

		PARAMETER
		{
			name = Orbit
			title = Complete orbit 1
			type = Orbit
			minPeA = @/startPeA
			minApA = @/startApA
			maxApA = @minApA + 100000
			targetBody = HomeWorld()
			disableOnStateChange = true
			completeInSequence = true

			PARAMETER
			{
				name = Duration
				type = Duration
				duration =  @/FirstDuration
				preWaitText = Stay in specified orbit for
				waitingText = Orbiting...
				completionText = Orbits completed, you may alter your orbit now.
			}
		}

		PARAMETER
		{
			name = Orbit2
			title = Complete orbit 2
			type = Orbit
			minPeA = @/startPeA
			minApA = @/endApA
			maxApA = @minApA + 200000
			targetBody = HomeWorld()
			disableOnStateChange = true
			completeInSequence = true

			PARAMETER
			{
				name = Duration2
				type = Duration
				duration =  @/SecondDuration
				preWaitText = Stay in specified orbit for
				waitingText = Orbiting...
				completionText = Orbits completed, you may fire retros when ready.
			}
		}

		PARAMETER
		{
			name = HorizontalLanding
			type = HorizontalLanding
			descentAngle = 10
			hideChildren = true
			completeInSequence = true
		}

		PARAMETER
		{
			name = ReturnHome
			type = RP1ReturnHome
			title = Return home safely
			hideChildren = true
			completeInSequence = true
		}
	}
}
