CONTRACT_TYPE
{
	name = GEORepeatComSats
	title = Geostationary Commercial Communications Satellite
	group = CommApp2
	agent = Federation Aeronautique Internationale

	description = <b>Program: Advanced Commercial Applications<br>Type: <color=blue>Optional</color></b><br><br>We have a customer requesting a new Communications Satellite over a specified area. Design a satellite within their specs and launch into an orbit with the proper orbital parameters as outlined in the contract.&br;&br;This contract can be completed as many times as you would like.&br;&br;<b><color=yellow>NOTE: The satellite will be destroyed upon completion of the contract. This simulates transfer of the payload back to the customer.</color></b>&br;&br;<b>The reward of this contract will slowly increase over time but will be reset to 0 after each completion.&br;<b>Current reward is at @rewardFactorPercent % of its nominal value. Elapsed/Expected Days: @elapsedDays / @RP0:expectedDays_GEORepeatComSats<br>Number of Contracts Completed: @index / unlimited</b>
	genericDescription = Put a satellite with the appropriate amount of communications satellite payload into geostationary orbit.

	synopsis = Launch a new Commercial Communications Satellite

	completedMessage = Congratulations! The customer has reported the satellite is in the proper orbit.

	sortKey = 904

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 1
	maxExpiry = 1
	maxCompletions = 0
	maxSimultaneous = 1
	deadline = 0
	targetBody = HomeWorld()

	// ************ REWARDS ************
	prestige = Trivial       // 1.0x
	advanceFunds = 0
	rewardScience = 0
	rewardFunds = 0
	failureFunds = 0
	rewardReputation = Round(60 * Pow((@AdvComSat/HasComSatPayload/minQuantity / 100), 0.5) *  @rewardFactor, 1)
	failureReputation = 0 // was @rewardReputation

	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = ProgramActive
		type = ProgramActive
		program = CommercialApplications2
	}

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FirstTargetedGeo
	}

	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		contractType = GeoComSatNetwork3
		invertRequirement = true
	}
	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		contractType = GeoComSatNetwork4
		invertRequirement = true
	}
	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		contractType = MolniyaRepeatComSats
		invertRequirement = true
	}
	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		contractType = TundraRepeatComSats
		invertRequirement = true
	}

	BEHAVIOUR
	{
		name = WaypointGenerator
		type = WaypointGenerator

		RANDOM_WAYPOINT
		{
			name = Geostationary Comm Satellite
			icon = thermometer
			altitude = 0
			forceEquatorial = true
		}
	}

	DATA
	{
		type = int
		index = $GEORepeatComSats_Count + 0
	}

	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression

		CONTRACT_OFFERED
		{
			RepeatSat_Completion = ($RepeatSat_Completion + 0) == 0 ? (UniversalTime() - @RP0:expectedDays_GEORepeatComSats * 86400) : ($RepeatSat_Completion + 0)
		}
		CONTRACT_COMPLETED_SUCCESS
		{
			GEORepeatComSats_Count = $GEORepeatComSats_Count + 1
			RepeatSat_Completion = UniversalTime()
		}
	}

	DATA
	{
		type = int
		antiGrindCompletion = $RepeatSat_Completion == 0 ? (UniversalTime() - @RP0:expectedDays_GEORepeatComSats * 86400) : $RepeatSat_Completion
	}

	DATA
	{
		type = float
		elapsedDays = Round((UniversalTime() - @antiGrindCompletion) / 86400.0)
		rewardFactor = Log(Max(@elapsedDays / @RP0:expectedDays_GEORepeatComSats * 20 - 9, 1), 2) / 3.46
		rewardFactorPercent = Round(@rewardFactor * 100, 1)
	}

	DATA
	{
		type = float
		payload = Round(RP1CommsPayload() * (0.25 + ( $GEORepeatComSats_Count / 8)), 25)  // baseline of 100, plus 50 each repeat
	}

	// ************ PARAMETERS ************

	PARAMETER
	{
		name = AdvComSat
		type = VesselParameterGroup
		define = AdvComSatellite
		title = Commercial communications satellite

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a new vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = HasComSatPayload
			type = HasResource
			resource = ComSatPayload
			minQuantity = @/payload-0.1
			title = Have a ComSatPayload of at least @/payload units on the craft
			hideChildren = true
		}
		PARAMETER
		{
			name = Orbit
			type = Orbit
			maxInclination = 2
			maxEccentricity = 0.01
			minPeriod = 23h 54m
			maxPeriod = 23h 58m
			disableOnStateChange = false
			title = Achieve a Geostationary orbit within the stated parameters near the waypoint
		}
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 0
			//distance = 42736000
			horizontalDistance = 4000.0
			showMessages = false
			disableOnStateChange = false
		}
		PARAMETER
		{
			name = OptVesselGroup
			type = VesselParameterGroup
			title = Obtain a more precise orbit
			rewardReputation = 20
			optional = true
			completeInSequence = true

			PARAMETER
			{
				name = Orbit
				type = Orbit
				maxInclination = 2
				maxEccentricity = 0.01
				minPeriod = 23h 54m
				maxPeriod = 23h 58m
				disableOnStateChange = false
				title = Achieve a Geostationary orbit in an ideal location above waypoint
			}
			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 0
				//distance = 42736000
				horizontalDistance = 2000.0
				showMessages = false
				disableOnStateChange = false
			}
		}
		PARAMETER
		{
			name = Duration
			type = Duration
			duration = 2m
			preWaitText = Check for stable orbit
			waitingText = Checking for stable orbit
			completionText = Stable orbit: Confirmed
		}
	}

	BEHAVIOUR
	{
		name = TransferVessel
		type = DestroyVessel
		onState = CONTRACT_SUCCESS
		vessel = AdvComSatellite
	}

	BEHAVIOUR
	{
		name = VesselDestroyed
		type = DialogBox
		DIALOG_BOX
		{
			title = Vessel Ownership Transferred
			condition = CONTRACT_SUCCESS
			position = CENTER
			width = 0.5
			TEXT
			{
				text = The contract has been completed successfully and the satellite has been transferred back to the customer.
			}
		}
	}
}
