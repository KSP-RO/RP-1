CONTRACT_TYPE
{
	name = GEOWeather
	title = Geostationary Weather Satellite
	group = WeatherSats

	description = Geostationary satellites provide the best views of the clouds in specific areas for our meteorologists. Place a weather satellite in geostationary orbit near the marked area. This contract can be completed up to 6 times.&br;&br;<b><color=red>NOTE: The satellite will be destroyed upon completion of the contract. This simulates transfer of the payload back to the customer.</color></b>&br;&br;<b>Number of Contracts Completed: $GEOWeather_Count</b>
	genericDescription = Put a satellite into the requested orbit.

	synopsis = Launch a geostationary weather satellite to the marked area

	completedMessage = Success! By placing the weather satellite in a geostationary orbit, we can see the movement and formations of the clouds.

	sortKey = 503

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 6
	maxSimultaneous = 1
	deadline = 365  // 1 year

	targetBody = HomeWorld()

	prestige = Significant   // 1.25x
	advanceFunds = ((12500 * Pow(1 + ((@GEOWeather/HasWeatherSatPayload/minQuantity * 2) / 1000), 1.25)) / 2) * @RP0:globalHardContractMultiplier
	rewardScience = 0
	rewardReputation = 15
	rewardFunds = (12500 * Pow(1 + ((@GEOWeather/HasWeatherSatPayload/minQuantity * 2) / 1000), 1.25)) * @RP0:globalHardContractMultiplier
	failureReputation = 15
	failureFunds = @advanceFunds * 0.5

	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = SecondGenWeather
		minCount = 3
		title = Complete @contractType Contract at least @minCount times
	}
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_GEOUncrewed
	}
	
	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression
		
		CONTRACT_COMPLETED_SUCCESS
        {
            GEOWeather_Count = $GEOWeather_Count + 1
        }
	}
	
	// ************ PARAMETERS ************

	PARAMETER
	{
		name = GEOWeather
		type = VesselParameterGroup
		define = GEOWeatherSatellite
		dissassociateVesselsOnContractCompletion = true
		title = Geostationary Weather Satellite
		duration = 6h

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = HasWeatherSatPayload
			type = HasResource
			resource = WeatherSatPayload
			minQuantity = Round(Random(250,825),1)
			title = Have a WeatherSatPayload of at least @minQuantity units on the craft
		}
		PARAMETER
		{
			name = Orbit
			type = Orbit
			maxInclination = 2
			maxEccentricity = 0.01
			minPeriod = 23h 54m
			maxPeriod = 23h 58m
			disableOnStateChange = false
			title = Achieve a Geostationary orbit within the stated parameters near the waypoint
		}
		
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 0
			//distance = 42736000
			horizontalDistance = 2000.0
			showMessages = true
			completeInSequence = true
			disableOnStateChange = false
		}
	}
	
	BEHAVIOUR
	{
		name = WaypointGenerator
		type = WaypointGenerator
		
		RANDOM_WAYPOINT
		{
			name = Geostationary Weather Satellite
			icon = thermometer
			altitude = 0
			forceEquatorial = true
		}
	}
  BEHAVIOUR
  {
    name = TransferVessel
    type = DestroyVessel
    onState = CONTRACT_SUCCESS
    vessel = GEOWeatherSatellite
  }
  BEHAVIOUR
  {
	name = VesselDestroyed
	type = DialogBox
	DIALOG_BOX
	{
	  title = Vessel Ownership Transferred
	  condition = CONTRACT_SUCCESS
	  position = CENTER
	  width = 0.5
	  TEXT
	  {
		text = The contract has been completed successfully and the satellite has been transferred back to the customer.
	  }
	}
  }
}
