// Make sure all contracts have all fields
@CONTRACT_TYPE[*]:HAS[~genericReward[*]]
{
	genericReward = 0
}
@CONTRACT_TYPE[*]:HAS[~genericBonus[*]]
{
	genericBonus = 0
}
@CONTRACT_TYPE[*]:HAS[~genericAdvanceMultiplier[*]]
{
	genericAdvanceMultiplier = 2.0/3.0
}
@CONTRACT_TYPE[*]:HAS[~genericFailureMultiplier[*]]
{
	genericFailureMultiplier = 1.5
}


// Normal rewards
@CONTRACT_TYPE[*] 
{
	%advanceFunds = @genericReward * @genericAdvanceMultiplier	
	%rewardFunds = @genericReward * (1 - @genericAdvanceMultiplier) + @genericBonus
	%rewardReputation = Pow(@rewardFunds/1000, 0.5)
	%failureFunds = Max(0, @advanceFunds * (@genericFailureMultiplier - 1))
	%failureReputation = Max(0, @rewardReputation * @genericFailureMultiplier)
}

// Reputation rewards
@CONTRACT_TYPE[*]:NEEDS[RP1DoUseBudgets]
{
	@advanceFunds = @genericReward * @genericAdvanceMultiplier*0.15
	@rewardFunds = 0
	@rewardReputation = (@genericReward * (1.1 - @genericAdvanceMultiplier*0.15) + @genericBonus) / 1000
	@failureFunds = 0
	@failureReputation = Max(0, @advanceFunds * (@genericFailureMultiplier - 1) / 1000)
}

// Convert it to CC speak...
@CONTRACT_TYPE[*] 
{
	DATA {
		type = float
		genericReward = #$../genericReward$
	}
	DATA {
		type = float
		genericBonus = #$../genericBonus$
	}
	DATA {
		type = float
		genericAdvanceMultiplier = #$../genericAdvanceMultiplier$
	}
	DATA {
		type = float
		genericFailureMultiplier = #$../genericFailureMultiplier$
	}
}

// Remove the unneeded values
@CONTRACT_TYPE[*] 
{
	-genericReward,0=remove
	-genericBonus,0=remove
	-genericAdvanceMultiplier,0=remove
	-genericFailureMultiplier,0=remove
}