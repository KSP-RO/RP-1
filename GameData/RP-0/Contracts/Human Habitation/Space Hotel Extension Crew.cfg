CONTRACT_TYPE
{
	name = spaceHotelExtensionCrew
	group = HumanHabitationContracts
	
	title = Space Hotel Crew Module
	
	description = Send up and dock a new habitation module rated for @/crewCapacity tourists to the space hotel. The module has to be send uncrewed for safety purpose.
	
	synopsis = Our current hotel station is starting to be a bit small. We though a new crew section will suits the needs for bigger habitable space, and therefore pave the way to a real space-tourism industry.
	
	completedMessage = Congratulations! Now get ready to send new tourists to use the module!

	cancellable = true 
	declinable = true		
	deadline = 180

	prestige = Significant
	
	targetBody = HomeWorld()

	maxSimultaneous = 1
	
	// reward block
	advanceFunds = 35000 * (@/crewCapacity)/4
	rewardReputation = 400.0 * (@/crewCapacity)/4
	rewardFunds = @advanceFunds
	failureReputation = @rewardReputation * 2
	failureFunds = @advanceFunds * 2
	
	DATA
	{
		type = int
		crewCapacity = Round(Random(4,8),1)
	}
	
	REQUIREMENT
	{
		name = HaveHotel
		type = Expression
		expression = VesselIdentifier(spaceHotel) != null && Vessel(spaceHotel).FreeDockingPorts() >= 1
	}
	
	PARAMETER
	{
		name = vesselGroupCrew
		type = VesselParameterGroup
		title = Bring a new crew module to the space hotel.
		
		PARAMETER //won't be completed with an existing module
		{
			name = NewVessel
			type = NewVessel
		}
		
		PARAMETER
		{
			name = NoCrew
			type = HasCrew
			minCrew = 0
			maxCrew = 0
		}
		
		PARAMETER
		{
			name = Rendezvous
			type = Rendezvous
			vessel = spaceHotel
			distance = 1000
		}
		
		PARAMETER
        	{
            		name = HasCapacity
            		type = HasCrewCapacity
			
        		minCapacity = crewCapacity
            		title = Space for @/crewCapacity tourists.
        	}
		
		PARAMETER
		{
			name = Docking
			type = Docking
			title = Dock the habitation module to the space hotel.
			vessel = spaceHotel
		}
	}
}
